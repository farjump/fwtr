Results generated by fwts: Version V16.01.00 (2016-01-13 08:23:12).

Some of this work - Copyright (c) 1999 - 2016, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2016, Canonical.

This test run on 12/02/16 at 13:42:09 on host Linux fwts-live 4.2.0-18-generic
#22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC 2015 x86_64.

Command: "fwts --force-clean --skip-test=s3 --batch --uefitests
--show-progress-dialog --log-type plaintext".
Running tests: version bios_info oops klog mtrr acpiinfo uefirtauthvar
uefibootpath securebootcert uefirtmisc uefirtvariable uefirttime csm maxreadreq
crs aspm dmicheck microcode msr nx cpufreq maxfreq virt pnp pciirq mpcheck
hda_audio ebda bios32 apicedge xenv xsdt wmi wdat wakealarm waet uefi tpm2 tcpa
syntaxcheck stao srat spmi spcr slit slic sbst rsdt rsdp pcc osilinux method
msdm mchi mcfg madt lpit iort hpet hest gtdt fpdt fan fadt facs erst ecdt dmar
dbg2 dbgp cstates csrt cpep checksum autobrightness boot bgrt bert aspt asf
apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 4.2.0-18.22~14.04.1-generic 4.2.3

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 4.2.0-18-generic (buildd@lgw01-55) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC
2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: initrd=/casper/initrd.lz boot=casper config
ip=frommedia persistent noprompt splash quiet FWTS_AUTO_SHUTDOWN=1
username=ubuntu hostname=fwts-live quiet BOOT_IMAGE=/casper/vmlinuz

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20150619

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : Dell Inc.
BIOS Version      : A03
BIOS Release Date : 10/26/2011
Board Name        : 0M5DCD
Board Serial #    : removed
Board Version     : A00
Board Asset Tag   : 
Chassis Serial #  : removed
Chassis Type      : 3
Chassis Vendor    : Dell Inc.
Chassis Version   : 
Chassic Asset Tag : 
Product Name      : OptiPlex 390
Product Serial #  : removed
Product UUID      : removed
Product Version   : 01
System Vendor     : Dell Inc.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
Kernel message: [ 0.005612] ENERGY_PERF_BIAS: Set to 'normal', was 'performance'

ADVICE: This is not exactly a failure but a warning from the kernel. The
MSR_IA32_ENERGY_PERF_BIAS was initialized and defaulted to a high performance
bias setting. The kernel has detected this and changed it down to a 'normal'
bias setting.

Kernel message: [ 0.116338] [Firmware Bug]: ACPI: BIOS _OSI(Linux) query ignored

ADVICE: This is not exactly a failure mode but a warning from the kernel. The
_OSI() method has implemented a match to the 'Linux' query in the DSDT and this
is redundant because the ACPI driver matches onto the Windows _OSI strings by
default.

Kernel message: [ 0.118848] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S1_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S1 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S1 sleep state, however, it should not be a problem if the S1 sleep
state isn't supported intentionally.

Kernel message: [ 0.118851] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S2 sleep state, however, it should not be a problem if the S2 sleep
state isn't supported intentionally.

FAILED [HIGH] KlogOscInvalidUuid: Test 1, HIGH Kernel message: [ 0.122557]
\_SB_.PCI0:_OSC invalid UUID

ADVICE: The _OSC method indicates it has been passed an invalid UUID, see
section 6.2.10 _OSC (Operating System Capabilities) of the ACPI specification
for more details. Note that it has been observed on some systems that this error
is returned because the _OSC has evaluated incorrectly and it returns with an
incorrect error setting the OSC invalid UUID error bit.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 20.429024] ACPI
Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with
OpRegion 0x0000000000000400-0x000000000000047F (\PMIO) (20150619/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 20.429033] ACPI
Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with
OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 20.429036] ACPI
Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with
OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 20.429039] ACPI
Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with
OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

FAILED [LOW] KlogAcpiSystemIOConflictLpcIchWatchDogTimer: Test 1, LOW Kernel
message: [ 20.429042] lpc_ich: Resource conflict(s) found affecting gpio_ich

ADVICE: A resource conflict has occurred between ACPI OperationRegions and the
same I/O region used by the lpc_ich driver for the General Purpose I/O (GPIO)
region. Sometimes this GPIO region is used by the firmware for rfkill or LED
controls or very rarely for the Embedded Controller System Control Interrupt.
This may require deeper inspection to check if the conflict will lead to any
real issues. However, in the vast majority of cases this warning can be ignored
as no harm will occur.

Found 6 unique errors in kernel log.

================================================================================
0 passed, 6 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x0000000000000000 - 0x0000000080000000 (  2048 MB)   Write-Back
Reg 1: 0x0000000080000000 - 0x00000000c0000000 (  1024 MB)   Write-Back
Reg 2: 0x00000000c0000000 - 0x00000000d0000000 (   256 MB)   Write-Back
Reg 3: 0x0000000100000000 - 0x0000000120000000 (   512 MB)   Write-Back
Reg 4: 0x0000000120000000 - 0x0000000130000000 (   256 MB)   Write-Back
Reg 5: 0x000000012f000000 - 0x0000000130000000 (    16 MB)   Uncached
Reg 6: 0x00000000ffc00000 - 0x0000000100000000 (     4 MB)   Write-Protect

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
PASSED: Test 1, Memory ranges seem to have correct attributes.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
SKIPPED: Test 3, CPU is not an AMD, cannot test.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20150619, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FACP ACPI Version: 4.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM INT430, created with INTL (Intel) compiler.
Table SSDT0, OEM PmRef, created with INTL (Intel) compiler.
Table SSDT1, OEM PmRef, created with INTL (Intel) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

uefirtauthvar: Authenticated variable tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 12 aborted, 0 skipped, 0 info only.
================================================================================

uefibootpath: Sanity check for UEFI Boot Path Boot####.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefirtmisc: UEFI miscellaneous runtime service interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 3 aborted, 0 skipped, 0 info only.
================================================================================

uefirtvariable: UEFI Runtime service variable interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 8 aborted, 0 skipped, 0 info only.
================================================================================

uefirttime: UEFI Runtime service time interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 35 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
Int 10h jumps to 0xc17df in option ROM at: 0xc0000..0xce600
No CSM: Legacy BIOS firmware has video option ROM with Int 10h support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
PASSED: Test 1, All devices have MaxReadReq set > 128.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (10/26
/2011) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is not controlled by Linux kernel.

ADVICE: BIOS reports that Linux kernel should not modify ASPM settings that BIOS
configured. It can be intentional because hardware vendors identified some
capability bugs between the motherboard and the add-on cards.


Test 2 of 2: PCIe ASPM registers test.
PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:1Ch.04h L0s not enabled.
WARNING: Test 2, Device 04h:00h.00h L0s not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
2 passed, 0 failed, 2 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Find and test SMBIOS Table Entry Points.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0xf3b10
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0x7e
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x06
  Maximum Struct Size    : 0xfd
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0xf3
  Structure Table Length : 0x0b7e
  Structure Table Address: 0x000f3f30
  # of SMBIOS Structures : 0x0048
  SBMIOS BCD Revision    : 26

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Structure Table Address and Length looks
valid.

Test 2 of 3: Test DMI/SMBIOS tables for errors.
PASSED: Test 2, Entry @ 0x000f3f30 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000f402d 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000f412a 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000f4227 'Unknown (Type 218)'
PASSED: Test 2, Entry @ 0x000f42ee 'BIOS Information (Type 0)'
PASSED: Test 2, Entry @ 0x000f4320 'System Information (Type 1)'
PASSED: Test 2, Entry @ 0x000f435e 'Base Board Information (Type 2)'
PASSED: Test 2, Entry @ 0x000f439e 'Chassis Information (Type 3)'
FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry
'Processor Information (Type 4)' @ 0x000f43c8, field 'Serial Number', offset
0x20 has a default value 'Not Specified' and probably has not been updated by
the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x05 in table entry
'Processor Information (Type 4)' @ 0x000f43c8, field 'Asset Tag', offset 0x21
has a default value 'Not Specified' and probably has not been updated by the
BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry
'Processor Information (Type 4)' @ 0x000f43c8, field 'Part Number', offset 0x22
has a default value 'Not Specified' and probably has not been updated by the
BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.5 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000f4465 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f4482 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f449f 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f44bc 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f44d6 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f44f2 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f450b 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f451e 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4531 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4544 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4557 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f456a 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f457d 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4590 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f45a3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f45be 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f45d3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f45e8 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f45ff 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4615 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f462c 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f463f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f464f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f465f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f466f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f467f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f4691 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f46a3 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f46b6 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f46ce 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f46e6 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f46fe 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f4716 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x000f4739 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x000f4764 'On Board Devices (Type 10)'
PASSED: Test 2, Entry @ 0x000f4797 'OEM Strings (Type 11)'
PASSED: Test 2, Entry @ 0x000f47c9 'BIOS Language Information (Type 13)'
PASSED: Test 2, Entry @ 0x000f47f0 'System Event Log (Type 15)'
PASSED: Test 2, Entry @ 0x000f4815 'Physical Memory Array (Type 16)'
FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000f4826, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

FAILED [LOW] DMISerialNumber: Test 2, String index 0x03 in table entry 'Memory
Device (Type 17)' @ 0x000f488e, field 'Manufacturer', offset 0x17 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x04 in table entry 'Memory
Device (Type 17)' @ 0x000f488e, field 'Serial Number', offset 0x18 has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMIAssetTag: Test 2, String index 0x05 in table entry 'Memory
Device (Type 17)' @ 0x000f488e, field 'Asset Tag', offset 0x19 has a default
value '9876543210' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.

FAILED [LOW] DMISerialNumber: Test 2, String index 0x06 in table entry 'Memory
Device (Type 17)' @ 0x000f488e, field 'Part Number', offset 0x1a has a default
value '[Empty]' and probably has not been updated by the BIOS vendor.

ADVICE: The DMI table contains data which is clearly been left in a default
setting and not been configured for this machine. Somebody has probably
forgotten to define this field and it basically means this field is effectively
useless, however the kernel does not use this data so the issue is fairly low.


ADVICE: It may be worth checking against section 7.18 of the System Management
BIOS (SMBIOS) Reference Specification (see http://www.dmtf.org/standards
/smbios).

PASSED: Test 2, Entry @ 0x000f48e4 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0x000f48f5 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000f490a 'Hardware Security (Type 24)'
PASSED: Test 2, Entry @ 0x000f4911 'System Power Controls (Type 25)'
PASSED: Test 2, Entry @ 0x000f491c 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000f492a 'Cooling Device (Type 27)'
PASSED: Test 2, Entry @ 0x000f4938 'Temperature Probe (Type 28)'
PASSED: Test 2, Entry @ 0x000f4966 'System Boot Information (Type 32)'
PASSED: Test 2, Entry @ 0x000f497c 'Management Device (Type 34)'
PASSED: Test 2, Entry @ 0x000f498f 'Onboard Device (Type 41)'
PASSED: Test 2, Entry @ 0x000f49a8 'Onboard Device (Type 41)'
PASSED: Test 2, Entry @ 0x000f49c1 'Onboard Device (Type 41)'
PASSED: Test 2, Entry @ 0x000f49dc 'Unknown (Type 177)'
PASSED: Test 2, Entry @ 0x000f49ea 'Unknown (Type 208)'
PASSED: Test 2, Entry @ 0x000f4a0d 'Unknown (Type 210)'
PASSED: Test 2, Entry @ 0x000f4a1b 'Unknown (Type 216)'
PASSED: Test 2, Entry @ 0x000f4a3a 'Unknown (Type 217)'
PASSED: Test 2, Entry @ 0x000f4a56 'Unknown (Type 220)'
PASSED: Test 2, Entry @ 0x000f4a6c 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000f4a81 'Unknown (Type 221)'
PASSED: Test 2, Entry @ 0x000f4a96 'Unknown (Type 222)'
PASSED: Test 2, Entry @ 0x000f4aa8 'End of Table (Type 127)'

Test 3 of 3: Test DMI/SMBIOS3 tables for errors.
SKIPPED: Test 3, Cannot find SMBIOS30 table entry, skip the test.

================================================================================
75 passed, 8 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
Test 1 of 1: Test for most recent microcode being loaded.
This test verifies if the firmware has put a recent revision of the microcode
into the processor at boot time. Recent microcode is important to have all the
required features and errata updates for the processor.
The kernel did not report that CPU 0 has had a microcode update. The current
firmware is revision 0x23 and probably has not been updated.
The kernel did not report that CPU 1 has had a microcode update. The current
firmware is revision 0x23 and probably has not been updated.
The kernel did not report that CPU 2 has had a microcode update. The current
firmware is revision 0x23 and probably has not been updated.
The kernel did not report that CPU 3 has had a microcode update. The current
firmware is revision 0x23 and probably has not been updated.
SKIPPED: Test 1, Could not determine from kernel log if latest microcode has
been loaded.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x00000001 P5_MC_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000006 MONITOR_FILTER_SIZE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000017 PLATFORM_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000002a EBL_CR_POWERON is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000001b APIC_BASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000003a FEATURE_CONTROL is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000008b BIOS_SIGN_ID is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019a CLOCK_MODULATION is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000019b THERM_INTERRUPT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001a0 MISC_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001b2 PACKAGE_THERM_INTERRUPT is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000210 MTRR_PHYSBASE8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000211 MTRR_PHYSMASK8 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000212 MTRR_PHYSBASE9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000213 MTRR_PHYSMASK9 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000280 MC0_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000281 MC1_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000282 MC2_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000283 MC3_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000284 MC4_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000285 MC5_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000286 MC6_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000287 MC7_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000288 MC8_CTL2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000003f1 PEBS_ENABLE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000480 VMX_BASIC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000481 VMX_PINPASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000482 VMX_PROCBASED_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000483 VMX_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000484 VMX_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000485 VMX_MISC is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000486 VMX_CR0_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000487 VMX_CR0_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000488 VMX_CR4_FIXED0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000489 VMX_CR4_FIXED1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048a VMX_VMX_VMCS_ENUM is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048b VMX_PROCBASED_CTLS2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048c VMX_EPT_VPID_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000048d VMX_TRUE_PINBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048e VMX_TRUE_PROCBASED_CTLS is consistent across 4
CPUs.
PASSED: Test 1, MSR 0x0000048f VMX_TRUE_EXIT_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000490 VMX_TRUE_ENTRY_CTLS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000004c5 A_PMC4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000004c6 A_PMC5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000004c7 A_PMC6 is consistent across 4 CPUs.
FAILED [MEDIUM] MSRCPUsInconsistent: Test 1, MSR 0x000004c8 A_PMC7 has 3
inconsistent values across 4 CPUs (shift: 0 mask: 0xffffffffffffffff).
MSR CPU 0 -> 0xffff vs CPU 1 -> 0x0
MSR CPU 0 -> 0xffff vs CPU 2 -> 0x0
MSR CPU 0 -> 0xffff vs CPU 3 -> 0x0
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 4 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
CPU family: 0x6, model: 0x2a (Sandybridge)
PASSED: Test 2, MSR 0x0000008b BIOS_SIGN_ID is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x000000ce MSR_PLATFORM_INFO is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x000000e2 MSR_PKG_CST_CONFIG_CONTROL is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000000e4 MSR_PMG_IO_CAPTURE_BASE is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000001a2 MSR_TEMPERATURE_TARGET is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000001a6 MSR_OFFCORE_RSP_0 is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x000001ad MSR_TURBO_RATIO_LIMIT is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x000001fc MSR_POWER_CTL is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x0000060a MSR_PKGC3_IRTL is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x0000060b MSR_PKGC6_IRTL is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x0000060c MSR_PKGC7_IRTL is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000610 MSR_PKG_RAPL_POWER_LIMIT is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000614 MSR_PKG_RAPL_POWER_INFO is consistent across 4
CPUs.
PASSED: Test 2, MSR 0x00000638 MSR_PP0_POWER_LIMIT is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x0000063a MSR_PP0_POLICY is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000640 MSR_PP1_POWER_LIMIT is consistent across 4 CPUs.
PASSED: Test 2, MSR 0x00000642 MSR_PP1_POLICY is consistent across 4 CPUs.

Test 3 of 5: Test all P State Ratios.
PASSED: Test 3, MSR 0x000000ce Minimum P-State is consistent across 4 CPUs.
PASSED: Test 3, MSR 0x000000ce Maximum P-State is consistent across 4 CPUs.

Test 4 of 5: Test C1 and C3 autodemotion.
PASSED: Test 4, MSR 0x000000e2 C1 and C3 Autodemotion is consistent across 4
CPUs.
C1 and C3 Autodemotion enabled.

Test 5 of 5: Test SMRR MSR registers.
PASSED: Test 5, MSR 0x000001f2 SMRR_PHYSBASE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f2 SMRR_TYPE is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_PHYSMASK is consistent across 4 CPUs.
PASSED: Test 5, MSR 0x000001f3 SMRR_VALID is consistent across 4 CPUs.
FAILED [HIGH] MSRSMRR_TYPE: Test 5, SMRR: SMRR_TYPE is 0x4, should be 0x6
(Write-Back).

================================================================================
111 passed, 2 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 4 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
PASSED: Test 3, All 4 CPUs have the NX flag in MSR 0x1a0 set.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
WARNING: Test 1, Cannot set CPU 0 governor to userspace.
Failed to intialise cpufreq to set CPU speed
Test 1 of 7: CPU frequency table consistency
PASSED: Test 1, CPU frequency tables are consistent

Test 2 of 7: CPU frequency table duplicates
PASSED: Test 2, No duplicates in CPU frequency table

Test 3 of 7: CPU frequency firmware limits
PASSED: Test 3, No BIOS limits imposed

Test 4 of 7: CPU frequency claimed maximum
WARNING: Test 4, cpu 0 has claimed frequency of 3400000, higher than max freq of
0
WARNING: Test 4, cpu 1 has claimed frequency of 3400000, higher than max freq of
0
WARNING: Test 4, cpu 2 has claimed frequency of 3400000, higher than max freq of
0
WARNING: Test 4, cpu 3 has claimed frequency of 3400000, higher than max freq of
0
FAILED [MEDIUM] CPUFreqClaimedMax: Test 4, CPU max frequency is unreachable

Test 5 of 7: CPU frequency SW_ANY control
SKIPPED: Test 5, Can't set CPU frequencies

Test 6 of 7: CPU frequency SW_ALL control
SKIPPED: Test 6, Can't set CPU frequencies

Test 7 of 7: CPU frequency performance tests.
FAILED [MEDIUM] CPUFreqSetFailed: Test 7, Can't set CPU frequencies

================================================================================
3 passed, 2 failed, 4 warnings, 0 aborted, 2 skipped, 0 info only.
================================================================================

maxfreq: Test max CPU frequencies against max scaling frequency.
--------------------------------------------------------------------------------
Test 1 of 1: Maximum CPU frequency test.
This test checks the maximum CPU frequency as detected by the kernel for each
CPU against maxiumum frequency as specified by the BIOS frequency scaling
settings.
PASSED: Test 1, 4 CPUs passed the maximum frequency check.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

virt: CPU Virtualisation Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: CPU Virtualisation Configuration test.
Check VT/VMX Virtualization extensions are set up correctly.
PASSED: Test 1, Virtualization extensions supported and enabled by BIOS.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pnp: BIOS Support Installation structure test.
--------------------------------------------------------------------------------
Test 1 of 1: PnP BIOS Support Installation structure test.
This test tries to find and sanity check the Plug and Play BIOS Support
Installation Check structure. 

Found PnP Installation Check structure at 0x000fe2d0
  Signature                          : $PnP
  Version                            : 0x10 (1.0)
  Length                             : 0x0021 bytes
  Control Field                      : 0x0001 (Handled by polling)
  Event Notification Flag Address    : 0x000004b4
  Real Mode 16 bit Code Address      : 0xf000:e2f1
  Real Mode 16 bit Data Address      : 0x0040:0000
  16 bit Protected Mode Code Address : 0x0001d2f6
  16 bit Protected Mode Data Address : 0x00000400
  OEM Device Identifier              : 0x00000000 (undefined)

PASSED: Test 1, Version 1.0 detected.
PASSED: Test 1, PnP Installation Check structure is the correct length of 33
bytes.
PASSED: Test 1, The control field indicates that polling is being used and the
notification flag address is defined.

================================================================================
3 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pciirq: PCI IRQ Routing Table test.
--------------------------------------------------------------------------------
Test 1 of 1: PCI IRQ Routing Table test.
This test tries to find and sanity check the PCI IRQ Routing Table, as defined
by http://www.microsoft.com/taiwan/whdc/archive/pciirq.mspx and described in
pages 233-238 of PCI System Architecture, Fourth Edition, Mindshare, Inc.
(1999). NOTE: The PCI IRQ Routing Table only really knows about ISA IRQs and is
generally not used with APIC. 

Found PCI IRQ Routing Table at 0x000f4fb0
  Signature             : $PIR
  Version               : 0x0100 (1.0)
  Table Size            : 0x01d0 bytes (27 slot entries)
  PCI Router ID         : 00:1f.0
  PCI Exclusive IRQs    : 0x0000 (none)
  Compatible PCI Router : 8086:1c4e
  Miniport Data         : 0x00000000 (none)
  Reserved              : 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  Checksum              : 0xb5

Bus:Dev Slot  INTA#   INTB#   INTC#   INTD#
 00:02   00  60/dcf8                         
 00:1f   00  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 00:1d   00  61/dcf8 63/dcf8 60/dcf8 62/dcf8 
 00:1a   00  60/dcf8 69/dcf8 62/dcf8 63/dcf8 
 00:1b   00  6a/dcf8 61/dcf8 62/dcf8 63/dcf8 
 00:16   00  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 00:1c   00  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 02:00   21  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 fe:00   22  61/dcf8 62/dcf8 63/dcf8 60/dcf8 
 03:00   08  62/dcf8 63/dcf8 60/dcf8 61/dcf8 
 fe:00   09  63/dcf8 60/dcf8 61/dcf8 62/dcf8 
 04:00   0a  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 fe:00   10  61/dcf8 62/dcf8 63/dcf8 60/dcf8 
 fe:00   11  62/dcf8 63/dcf8 60/dcf8 61/dcf8 
 fe:00   12  63/dcf8 60/dcf8 61/dcf8 62/dcf8 
 00:01   00  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 00:06   00  63/dcf8 60/dcf8 61/dcf8 62/dcf8 
 01:00   10  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 fe:00   11  61/dcf8 62/dcf8 63/dcf8 60/dcf8 
 fe:00   12  62/dcf8 63/dcf8 60/dcf8 61/dcf8 
 fe:00   13  63/dcf8 60/dcf8 61/dcf8 62/dcf8 
 00:04   00  60/dcf8 61/dcf8 62/dcf8 63/dcf8 
 fe:03   04  63/dcf8 62/dcf8 69/dcf8 6a/dcf8 
 fe:02   03  62/dcf8 63/dcf8 60/dcf8 61/dcf8 
 fe:00   01  69/dcf8 6a/dcf8 61/dcf8 68/dcf8 
 fe:01   02  6a/dcf8 69/dcf8 68/dcf8 61/dcf8 
 fe:05   02  62/dcf8 68/dcf8 6a/dcf8 69/dcf8 

PASSED: Test 1, The Compatible PCI Interrupt Router is defined.
PASSED: Test 1, Table size was correct for 27 slot entries.
PASSED: Test 1, Reserved region is set to zero.
PASSED: Test 1, All 27 slots have sane looking link and IRQ bitmaps.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mpcheck: MultiProcessor Tables tests.
--------------------------------------------------------------------------------
The kernel is using the ACPI MADT for SMP configuration information, so the
Multiprocessor Tables are not used by the kernel. Any errors in the tables will
not affect the operation of Linux unless it is booted with ACPI disabled.

NOTE: Since ACPI is being used in preference to the Multiprocessor Tables, any
errors found in the mpcheck tests will be tagged as LOW errors.

Test 1 of 9: Test MP header.
PASSED: Test 1, MP header looks sane.

Test 2 of 9: Test MP CPU entries.
PASSED: Test 2, All 4 CPU entries look sane.

Test 3 of 9: Test MP Bus entries.
PASSED: Test 3, All 6 Bus Entries looked sane.

Test 4 of 9: Test MP IO APIC entries.
PASSED: Test 4, All 1 IO APIC Entries look sane.

Test 5 of 9: Test MP IO Interrupt entries.
PASSED: Test 5, All 46 IO Interrupt Entries look sane.

Test 6 of 9: Test MP Local Interrupt entries.
PASSED: Test 6, All 2 Local Interrupt Entries look sane.

Test 7 of 9: Test MP System Address entries.
PASSED: Test 7, All 5 System Address Space Mapping Entries looks sane.

Test 8 of 9: Test MP Bus Hierarchy entries.
PASSED: Test 8, All 1 Bus Hierarchy Entries look sane.

Test 9 of 9: Test MP Compatible Bus Address Space entries.
PASSED: Test 9, All 2 Compatible Bus Address Space Entries look sane.

================================================================================
9 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hda_audio: HDA Audio Pin Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: HDA Audio Pin Configuration test.
Checking 'hwC0D2':
Vendor Name    : Conexant
Vendor ID      : 0x14f150a1
Subsystem ID   : 0x102804f5
Revision ID    : 0x100100
BIOS pin configurations:
  Pin  Setting
  0x0018 0x40f001f0
  0x0019 0x02214040
  0x001a 0x02a19020
  0x001b 0x01a1903e
  0x001c 0x01014010
  0x001d 0x01813030
  0x001e 0x40f001f0
  0x001f 0x40f001f0
  0x0020 0x40f001f0
  0x0021 0x40f001f0
  0x0026 0x40f001ff
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D0':
Vendor Name    : Nvidia
Vendor ID      : 0x10de000b
Subsystem ID   : 0x10de0101
Revision ID    : 0x100200
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D1':
Vendor Name    : Nvidia
Vendor ID      : 0x10de000b
Subsystem ID   : 0x10de0101
Revision ID    : 0x100200
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D2':
Vendor Name    : Nvidia
Vendor ID      : 0x10de000b
Subsystem ID   : 0x10de0101
Revision ID    : 0x100200
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.

Checking 'hwC1D3':
Vendor Name    : Nvidia
Vendor ID      : 0x10de000b
Subsystem ID   : 0x10de0101
Revision ID    : 0x100200
BIOS pin configurations:
  Pin  Setting
  0x0005 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.


================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

ebda: Test EBDA region is mapped and reserved in memory map table.
--------------------------------------------------------------------------------
Test 1 of 1: Test EBDA is reserved in E820 table.
The Extended BIOS Data Area (EBDA) is normally located at the end of the low
640K region and is typically 2-4K in size. It should be reserved in the Int 15
AX=E820 BIOS memory map table.
PASSED: Test 1, EBDA region mapped at 0x9c000 and reserved as a 15K region in
the Int 15 AX=E820 BIOS memory map table at 0x9c000..0x9ffff.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bios32: BIOS32 Service Directory test.
--------------------------------------------------------------------------------
Test 1 of 1: BIOS32 Service Directory test.
This test tries to find and sanity check the BIOS32 Service Directory as defined
in the Standard BIOS 32-bit Service Directory Proposal, Revision 0.4 May 24,
1993, Phoenix Technologies Ltd and also the PCI BIOS specification.
Found BIOS32 Service Directory at 0x000ffa00
  Signature  : _32_
  Entry Point: 0x000ffa10
  Revsion    : 0x00
  Length     : 0x01
  Checksum   : 0xc3

PASSED: Test 1, Service Directory Entry Point 0x000ffa10 is not in high memory.
PASSED: Test 1, Service Directory Length is 1 (1 x 16 bytes) as expected.
PASSED: Test 1, Service Directory Revision is 0x00 and is supported by the
kernel.
PASSED: Test 1, Service Directory checksum passed.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicedge: APIC edge/level test.
--------------------------------------------------------------------------------
Test 1 of 1: Legacy and PCI Interrupt Edge/Level trigger tests.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 0 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 1 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 4 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 8 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 12 is
incorrectly level triggered.

================================================================================
0 passed, 5 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

xenv: XENV Xen Environment Table tests.
--------------------------------------------------------------------------------
ACPI XENV table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

xsdt: XSDT Extended System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: XSDT Extended System Description Table test.
PASSED: Test 1, No issues found in XSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wmi: Extract and analyse Windows Management Instrumentation (WMI).
--------------------------------------------------------------------------------
Test 1 of 1: Windows Management Instrumentation test.
No ACPI _WDG WMI data found.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wdat: WDAT Microsoft Hardware Watchdog Action Table test.
--------------------------------------------------------------------------------
ACPI WDAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wakealarm: ACPI Wakealarm tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test existence of RTC with alarm interface.
PASSED: Test 1, RTC with a RTC alarm ioctl() interface found.

Test 2 of 4: Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 1 seconds in the future.
PASSED: Test 2, RTC wakealarm was triggered successfully.

Test 3 of 4: Test if wakealarm is fired.
PASSED: Test 3, RTC wakealarm triggered and fired successfully.

Test 4 of 4: Multiple wakealarm firing tests.
Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 2 seconds in the future.
Trigger wakealarm for 3 seconds in the future.
Trigger wakealarm for 4 seconds in the future.
PASSED: Test 4, RTC wakealarm triggered and fired successfully.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

waet: WAET Windows ACPI Emulated Devices Table test.
--------------------------------------------------------------------------------
ACPI WAET table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefi: UEFI Data Table test.
--------------------------------------------------------------------------------
ACPI UEFI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

tpm2: TPM2 Trusted Platform Module 2 test.
--------------------------------------------------------------------------------
ACPI TPM2 table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

tcpa: TCPA Trusted Computing Platform Alliance Capabilities Table test.
--------------------------------------------------------------------------------
ACPI TCPA table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

syntaxcheck: Re-assemble DSDT and SSDTs to find syntax errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble and reassemble DSDT and SSDTs.

Checking ACPI table DSDT (#0)

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
98
Line | AML source
--------------------------------------------------------------------------------
00095|         Return (VAL) /* \BDRD.VAL_ */
00096|     }
00097| 
00098|     Method (STRE, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00099|     {
00100|         Name (STR1, Buffer (0x50) {})
00101|         Name (STR2, Buffer (0x50) {})
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
121
Line | AML source
--------------------------------------------------------------------------------
00118|         Return (One)
00119|     }
00120| 
00121|     Method (XPTB, 1, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00122|     {
00123|         Store (SizeOf (Arg0), Local0)
00124|         If (LEqual (ObjectType (Arg0), 0x02))
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_RECURSION: Test 1, Assembler remark in line 146
Line | AML source
--------------------------------------------------------------------------------
00143|         If (LGreaterEqual (Arg0, 0x0A))
00144|         {
00145|             Divide (Arg0, 0x0A, Local0, Local1)
00146|             Store (STDG (Local1, Arg1, Arg2), Arg2)
     |                      ^
     | Remark 2098: Recursive method call    (STDG)
00147|         }
00148| 
00149|         Add (Local0, 0x30, Local0)
================================================================================

ADVICE: (for Remark #2098, ASL_MSG_RECURSION): Internal IASL Node recursion
detected.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
155
Line | AML source
--------------------------------------------------------------------------------
00152|         Return (Arg2)
00153|     }
00154| 
00155|     Method (XPTS, 1, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00156|     {
00157|         Name (LBUF, Buffer (0x20) {})
00158|         Store (STDG (Arg0, LBUF, 0x00), Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 181
Line | AML source
--------------------------------------------------------------------------------
00178|             If (LEqual (ACOS, 0x00))
00179|             {
00180|                 Store (0x01, ACOS) /* \_SB_.ACOS */
00181|                 If (CondRefOf (\_OSI, Local0))
     |                                           ^
     | Warning 3144: Method Local is set but never used    (Local0)
00182|                 {
00183|                     If (\_OSI (WXP))
00184|                     {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 218
Line | AML source
--------------------------------------------------------------------------------
00215|             GENS (0x06, ACOS, 0x00)
00216|         }
00217| 
00218|         Method (SOS0, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
00219|         {
00220|             STOS ()
00221|         }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 218
Line | AML source
--------------------------------------------------------------------------------
00215|             GENS (0x06, ACOS, 0x00)
00216|         }
00217| 
00218|         Method (SOS0, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg1)
00219|         {
00220|             STOS ()
00221|         }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 223
Line | AML source
--------------------------------------------------------------------------------
00220|             STOS ()
00221|         }
00222| 
00223|         Method (SOS4, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg1)
00224|         {
00225|             If (LEqual (Arg0, 0x04))
00226|             {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2827
Line | AML source
--------------------------------------------------------------------------------
02824|                     }
02825|                 }
02826| 
02827|                 Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02828|                 {
02829|                     If (CondRefOf (IDAB))
02830|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
4245
Line | AML source
--------------------------------------------------------------------------------
04242|                             0x00200000,         // Address Length
04243|                             )
04244|                     })
04245|                     Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                               ^
     | Warning 3115: Not all control paths return a value    (_CRS)
04246|                     {
04247|                         If (IGDS)
04248|                         {
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_RETURN_VALUE: Test 1, Assembler warning
in line 4245
Line | AML source
--------------------------------------------------------------------------------
04242|                             0x00200000,         // Address Length
04243|                             )
04244|                     })
04245|                     Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                               ^
     | Warning 3107: Reserved method must return a value    (Buffer required for _CRS)
04246|                     {
04247|                         If (IGDS)
04248|                         {
================================================================================

ADVICE: (for Warning #3107, ASL_MSG_RESERVED_RETURN_VALUE): A reserved method
was expected to return a value, however, it does not. This is unexpected
behaviour that does not conform the the ACPI specification.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4293
Line | AML source
--------------------------------------------------------------------------------
04290|                         {
04291|                             Name (RTLA, ResourceTemplate ()
04292|                             {
04293|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04294|                                     {}
04295|                             })
04296|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4293
Line | AML source
--------------------------------------------------------------------------------
04290|                         {
04291|                             Name (RTLA, ResourceTemplate ()
04292|                             {
04293|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04294|                                     {}
04295|                             })
04296|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4293
Line | AML source
--------------------------------------------------------------------------------
04290|                         {
04291|                             Name (RTLA, ResourceTemplate ()
04292|                             {
04293|                                 IRQ (Level, ActiveLow, Shared, _Y0F)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04294|                                     {}
04295|                             })
04296|                             CreateWordField (RTLA, \_SB.LNKA._CRS._Y0F._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4341
Line | AML source
--------------------------------------------------------------------------------
04338|                         {
04339|                             Name (RTLB, ResourceTemplate ()
04340|                             {
04341|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04342|                                     {}
04343|                             })
04344|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4341
Line | AML source
--------------------------------------------------------------------------------
04338|                         {
04339|                             Name (RTLB, ResourceTemplate ()
04340|                             {
04341|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04342|                                     {}
04343|                             })
04344|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4341
Line | AML source
--------------------------------------------------------------------------------
04338|                         {
04339|                             Name (RTLB, ResourceTemplate ()
04340|                             {
04341|                                 IRQ (Level, ActiveLow, Shared, _Y10)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04342|                                     {}
04343|                             })
04344|                             CreateWordField (RTLB, \_SB.LNKB._CRS._Y10._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4389
Line | AML source
--------------------------------------------------------------------------------
04386|                         {
04387|                             Name (RTLC, ResourceTemplate ()
04388|                             {
04389|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04390|                                     {}
04391|                             })
04392|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4389
Line | AML source
--------------------------------------------------------------------------------
04386|                         {
04387|                             Name (RTLC, ResourceTemplate ()
04388|                             {
04389|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04390|                                     {}
04391|                             })
04392|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4389
Line | AML source
--------------------------------------------------------------------------------
04386|                         {
04387|                             Name (RTLC, ResourceTemplate ()
04388|                             {
04389|                                 IRQ (Level, ActiveLow, Shared, _Y11)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04390|                                     {}
04391|                             })
04392|                             CreateWordField (RTLC, \_SB.LNKC._CRS._Y11._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4437
Line | AML source
--------------------------------------------------------------------------------
04434|                         {
04435|                             Name (RTLD, ResourceTemplate ()
04436|                             {
04437|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04438|                                     {}
04439|                             })
04440|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4437
Line | AML source
--------------------------------------------------------------------------------
04434|                         {
04435|                             Name (RTLD, ResourceTemplate ()
04436|                             {
04437|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04438|                                     {}
04439|                             })
04440|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4437
Line | AML source
--------------------------------------------------------------------------------
04434|                         {
04435|                             Name (RTLD, ResourceTemplate ()
04436|                             {
04437|                                 IRQ (Level, ActiveLow, Shared, _Y12)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04438|                                     {}
04439|                             })
04440|                             CreateWordField (RTLD, \_SB.LNKD._CRS._Y12._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4485
Line | AML source
--------------------------------------------------------------------------------
04482|                         {
04483|                             Name (RTLE, ResourceTemplate ()
04484|                             {
04485|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04486|                                     {}
04487|                             })
04488|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4485
Line | AML source
--------------------------------------------------------------------------------
04482|                         {
04483|                             Name (RTLE, ResourceTemplate ()
04484|                             {
04485|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04486|                                     {}
04487|                             })
04488|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4485
Line | AML source
--------------------------------------------------------------------------------
04482|                         {
04483|                             Name (RTLE, ResourceTemplate ()
04484|                             {
04485|                                 IRQ (Level, ActiveLow, Shared, _Y13)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04486|                                     {}
04487|                             })
04488|                             CreateWordField (RTLE, \_SB.LNKE._CRS._Y13._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4533
Line | AML source
--------------------------------------------------------------------------------
04530|                         {
04531|                             Name (RTLF, ResourceTemplate ()
04532|                             {
04533|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04534|                                     {}
04535|                             })
04536|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4533
Line | AML source
--------------------------------------------------------------------------------
04530|                         {
04531|                             Name (RTLF, ResourceTemplate ()
04532|                             {
04533|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04534|                                     {}
04535|                             })
04536|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4533
Line | AML source
--------------------------------------------------------------------------------
04530|                         {
04531|                             Name (RTLF, ResourceTemplate ()
04532|                             {
04533|                                 IRQ (Level, ActiveLow, Shared, _Y14)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04534|                                     {}
04535|                             })
04536|                             CreateWordField (RTLF, \_SB.LNKF._CRS._Y14._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4581
Line | AML source
--------------------------------------------------------------------------------
04578|                         {
04579|                             Name (RTLG, ResourceTemplate ()
04580|                             {
04581|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04582|                                     {}
04583|                             })
04584|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4581
Line | AML source
--------------------------------------------------------------------------------
04578|                         {
04579|                             Name (RTLG, ResourceTemplate ()
04580|                             {
04581|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04582|                                     {}
04583|                             })
04584|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4581
Line | AML source
--------------------------------------------------------------------------------
04578|                         {
04579|                             Name (RTLG, ResourceTemplate ()
04580|                             {
04581|                                 IRQ (Level, ActiveLow, Shared, _Y15)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04582|                                     {}
04583|                             })
04584|                             CreateWordField (RTLG, \_SB.LNKG._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4629
Line | AML source
--------------------------------------------------------------------------------
04626|                         {
04627|                             Name (RTLH, ResourceTemplate ()
04628|                             {
04629|                                 IRQ (Level, ActiveLow, Shared, _Y16)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04630|                                     {}
04631|                             })
04632|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y16._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4629
Line | AML source
--------------------------------------------------------------------------------
04626|                         {
04627|                             Name (RTLH, ResourceTemplate ()
04628|                             {
04629|                                 IRQ (Level, ActiveLow, Shared, _Y16)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04630|                                     {}
04631|                             })
04632|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y16._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4629
Line | AML source
--------------------------------------------------------------------------------
04626|                         {
04627|                             Name (RTLH, ResourceTemplate ()
04628|                             {
04629|                                 IRQ (Level, ActiveLow, Shared, _Y16)
     |                                                            ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04630|                                     {}
04631|                             })
04632|                             CreateWordField (RTLH, \_SB.LNKH._CRS._Y16._INT, IRQ0)  // _INT: Interrupts
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5319
Line | AML source
--------------------------------------------------------------------------------
05316|                             0x00
05317|                         })
05318|                         Name (_PLD, ToPLD (
05319|                             PLD_Revision       = 0x1,
     |                                       ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05320|                             PLD_IgnoreColor    = 0x1,
05321|                             PLD_Red            = 0x0,
05322|                             PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5422
Line | AML source
--------------------------------------------------------------------------------
05419|                                 0x00
05420|                             })
05421|                             Name (_PLD, ToPLD (
05422|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05423|                                 PLD_IgnoreColor    = 0x1,
05424|                                 PLD_Red            = 0x0,
05425|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5461
Line | AML source
--------------------------------------------------------------------------------
05458|                                 0x00
05459|                             })
05460|                             Name (_PLD, ToPLD (
05461|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05462|                                 PLD_IgnoreColor    = 0x1,
05463|                                 PLD_Red            = 0x0,
05464|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5500
Line | AML source
--------------------------------------------------------------------------------
05497|                                 0x00
05498|                             })
05499|                             Name (_PLD, ToPLD (
05500|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05501|                                 PLD_IgnoreColor    = 0x1,
05502|                                 PLD_Red            = 0x0,
05503|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5539
Line | AML source
--------------------------------------------------------------------------------
05536|                                 0x00
05537|                             })
05538|                             Name (_PLD, ToPLD (
05539|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05540|                                 PLD_IgnoreColor    = 0x1,
05541|                                 PLD_Red            = 0x0,
05542|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5578
Line | AML source
--------------------------------------------------------------------------------
05575|                                 0x00
05576|                             })
05577|                             Name (_PLD, ToPLD (
05578|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05579|                                 PLD_IgnoreColor    = 0x1,
05580|                                 PLD_Red            = 0x0,
05581|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5617
Line | AML source
--------------------------------------------------------------------------------
05614|                                 0x00
05615|                             })
05616|                             Name (_PLD, ToPLD (
05617|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05618|                                 PLD_IgnoreColor    = 0x1,
05619|                                 PLD_Red            = 0x0,
05620|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5699
Line | AML source
--------------------------------------------------------------------------------
05696|                             0x00
05697|                         })
05698|                         Name (_PLD, ToPLD (
05699|                             PLD_Revision       = 0x1,
     |                                       ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05700|                             PLD_IgnoreColor    = 0x1,
05701|                             PLD_Red            = 0x0,
05702|                             PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5736
Line | AML source
--------------------------------------------------------------------------------
05733|                                 0x00
05734|                             })
05735|                             Name (_PLD, ToPLD (
05736|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05737|                                 PLD_IgnoreColor    = 0x1,
05738|                                 PLD_Red            = 0x0,
05739|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5775
Line | AML source
--------------------------------------------------------------------------------
05772|                                 0x00
05773|                             })
05774|                             Name (_PLD, ToPLD (
05775|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05776|                                 PLD_IgnoreColor    = 0x1,
05777|                                 PLD_Red            = 0x0,
05778|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5814
Line | AML source
--------------------------------------------------------------------------------
05811|                                 0x00
05812|                             })
05813|                             Name (_PLD, ToPLD (
05814|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05815|                                 PLD_IgnoreColor    = 0x1,
05816|                                 PLD_Red            = 0x0,
05817|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5853
Line | AML source
--------------------------------------------------------------------------------
05850|                                 0x00
05851|                             })
05852|                             Name (_PLD, ToPLD (
05853|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05854|                                 PLD_IgnoreColor    = 0x1,
05855|                                 PLD_Red            = 0x0,
05856|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5892
Line | AML source
--------------------------------------------------------------------------------
05889|                                 0x00
05890|                             })
05891|                             Name (_PLD, ToPLD (
05892|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05893|                                 PLD_IgnoreColor    = 0x1,
05894|                                 PLD_Red            = 0x0,
05895|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [HIGH] AMLAsmASL_MSG_RESERVED_OPERAND_TYPE: Test 1, Assembler error in
line 5931
Line | AML source
--------------------------------------------------------------------------------
05928|                                 0x00
05929|                             })
05930|                             Name (_PLD, ToPLD (
05931|                                 PLD_Revision       = 0x1,
     |                                           ^
     | Error 6105: Invalid object type for reserved name    (_PLD: found Buffer, Package required)
05932|                                 PLD_IgnoreColor    = 0x1,
05933|                                 PLD_Red            = 0x0,
05934|                                 PLD_Green          = 0x0,
================================================================================

ADVICE: (for Error #6105, ASL_MSG_RESERVED_OPERAND_TYPE): The object type for
the reserved name does not match the expected type.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6783
Line | AML source
--------------------------------------------------------------------------------
06780| 
06781|     Scope (\_PR)
06782|     {
06783|         Method (PPCE, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
06784|         {
06785|             Store (GENS (0x15, 0x00, 0x00), Local0)
06786|             Store (Local0, \_PR.CPU0._PPC) /* External reference */
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6783
Line | AML source
--------------------------------------------------------------------------------
06780| 
06781|     Scope (\_PR)
06782|     {
06783|         Method (PPCE, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg1)
06784|         {
06785|             Store (GENS (0x15, 0x00, 0x00), Local0)
06786|             Store (Local0, \_PR.CPU0._PPC) /* External reference */
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6879
Line | AML source
--------------------------------------------------------------------------------
06876|         Return (TBF3) /* \GETB.TBF3 */
06877|     }
06878| 
06879|     Method (TRAP, 2, Serialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg0)
06880|     {
06881|         Return (0x00)
06882|     }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6879
Line | AML source
--------------------------------------------------------------------------------
06876|         Return (TBF3) /* \GETB.TBF3 */
06877|     }
06878| 
06879|     Method (TRAP, 2, Serialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg1)
06880|     {
06881|         Return (0x00)
06882|     }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6886
Line | AML source
--------------------------------------------------------------------------------
06883| 
06884|     Scope (\_SB.PCI0)
06885|     {
06886|         Method (IINI, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg1)
06887|         {
06888|             If (LNotEqual (Arg0, 0x02))
06889|             {
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 6894
Line | AML source
--------------------------------------------------------------------------------
06891|             }
06892| 
06893|             Store (0x07D0, OSYS) /* \OSYS */
06894|             If (CondRefOf (\_OSI, Local0))
     |                                       ^
     | Warning 3144: Method Local is set but never used    (Local0)
06895|             {
06896|                 If (\_OSI ("Linux"))
06897|                 {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7582
Line | AML source
--------------------------------------------------------------------------------
07579| 
07580|     Scope (\_GPE)
07581|     {
07582|         Method (NWAK, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
07583|         {
07584|             _L01 ()
07585|         }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 7582
Line | AML source
--------------------------------------------------------------------------------
07579| 
07580|     Scope (\_GPE)
07581|     {
07582|         Method (NWAK, 2, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg1)
07583|         {
07584|             _L01 ()
07585|         }
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7648
Line | AML source
--------------------------------------------------------------------------------
07645|         Mutex (SMIX, 0x01)
07646|         Name (SMIB, 0xCF77A000)
07647|         Name (PSMI, 0x000000B2)
07648|         Method (SNVC, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07649|         {
07650|             OperationRegion (WWPR, SystemMemory, SMIB, 0x04)
07651|             Field (WWPR, DWordAcc, Lock, Preserve)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7659
Line | AML source
--------------------------------------------------------------------------------
07656|             Store (Arg0, SCDW) /* \SNVC.SCDW */
07657|         }
07658| 
07659|         Method (SNWB, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07660|         {
07661|             Store (SMIB, Local0)
07662|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7674
Line | AML source
--------------------------------------------------------------------------------
07671|             Store (SVAL, SBY0) /* \SNWB.SBY0 */
07672|         }
07673| 
07674|         Method (SNRB, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07675|         {
07676|             Store (SMIB, Local0)
07677|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7690
Line | AML source
--------------------------------------------------------------------------------
07687|             Return (Arg0)
07688|         }
07689| 
07690|         Method (SNVP, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07691|         {
07692|             Store (SMIB, Local0)
07693|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7705
Line | AML source
--------------------------------------------------------------------------------
07702|             Store (SVAL, SDW0) /* \SNVP.SDW0 */
07703|         }
07704| 
07705|         Method (SNVG, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07706|         {
07707|             Store (SMIB, Local0)
07708|             Add (Local0, Arg1, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7739
Line | AML source
--------------------------------------------------------------------------------
07736|             Return (Local0)
07737|         }
07738| 
07739|         Method (SMBI, 2, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07740|         {
07741|             SNVC (Arg0)
07742|             Add (SMIB, 0x04, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 7767
Line | AML source
--------------------------------------------------------------------------------
07764|             }
07765| 
07766|             SNVC (Arg0)
07767|             Divide (Arg2, 0x04, Local3, Local4)
     |                                             ^
     | Warning 3144: Method Local is set but never used    (Local4)
07768|             Store (0x00, Local0)
07769|             While (LLess (Local0, Local3))
07770|             {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7798
Line | AML source
--------------------------------------------------------------------------------
07795|             Return (Arg1)
07796|         }
07797| 
07798|         Method (ASMI, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07799|         {
07800|             OperationRegion (SMIR, SystemIO, PSMI, 0x01)
07801|             Field (SMIR, ByteAcc, Lock, Preserve)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7968
Line | AML source
--------------------------------------------------------------------------------
07965|                     0x08, 
07966|                     0x03
07967|                 })
07968|                 Method (_STA, 0, NotSerialized)  // _STA: Status
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07969|                 {
07970|                     Name (RET, Zero)
07971|                     Store (0x00, RET) /* \_SB_.PCI0.LPCB.SIO_.MOU_._STA.RET_ */
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7980
Line | AML source
--------------------------------------------------------------------------------
07977|                     Return (RET) /* \_SB_.PCI0.LPCB.SIO_.MOU_._STA.RET_ */
07978|                 }
07979| 
07980|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07981|                 {
07982|                     Name (MOUB, ResourceTemplate ()
07983|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
8056
Line | AML source
--------------------------------------------------------------------------------
08053|                     Release (MX00)
08054|                 }
08055| 
08056|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
08057|                 {
08058|                     Name (BUF0, ResourceTemplate ()
08059|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8060
Line | AML source
--------------------------------------------------------------------------------
08057|                 {
08058|                     Name (BUF0, ResourceTemplate ()
08059|                     {
08060|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08061|                             0x0000,             // Range Minimum
08062|                             0x0000,             // Range Maximum
08063|                             0x08,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8066
Line | AML source
--------------------------------------------------------------------------------
08063|                             0x08,               // Alignment
08064|                             0x08,               // Length
08065|                             _Y1F)
08066|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08067|                             0x0000,             // Range Minimum
08068|                             0x0000,             // Range Maximum
08069|                             0x08,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8074
Line | AML source
--------------------------------------------------------------------------------
08071|                             _Y20)
08072|                         IRQNoFlags (_Y21)
08073|                             {}
08074|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y22)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08075|                             {}
08076|                     })
08077|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8074
Line | AML source
--------------------------------------------------------------------------------
08071|                             _Y20)
08072|                         IRQNoFlags (_Y21)
08073|                             {}
08074|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y22)
     |                                                       ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08075|                             {}
08076|                     })
08077|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8074
Line | AML source
--------------------------------------------------------------------------------
08071|                             _Y20)
08072|                         IRQNoFlags (_Y21)
08073|                             {}
08074|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y22)
     |                                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08075|                             {}
08076|                     })
08077|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8077
Line | AML source
--------------------------------------------------------------------------------
08074|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y22)
08075|                             {}
08076|                     })
08077|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                               ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08078|                     CreateByteField (BUF0, 0x03, IOHI)
08079|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MAX, IORL)  // _MAX: Maximum Base Address
08080|                     CreateByteField (BUF0, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8079
Line | AML source
--------------------------------------------------------------------------------
08076|                     })
08077|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MIN, IOLO)  // _MIN: Minimum Base Address
08078|                     CreateByteField (BUF0, 0x03, IOHI)
08079|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                               ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08080|                     CreateByteField (BUF0, 0x05, IORH)
08081|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._ALN, LALN)  // _ALN: Alignment
08082|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._LEN, LLEN)  // _LEN: Length
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8083
Line | AML source
--------------------------------------------------------------------------------
08080|                     CreateByteField (BUF0, 0x05, IORH)
08081|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._ALN, LALN)  // _ALN: Alignment
08082|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._LEN, LLEN)  // _LEN: Length
08083|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._MIN, DALO)  // _MIN: Minimum Base Address
     |                                                                               ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08084|                     CreateByteField (BUF0, 0x0B, DAHI)
08085|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._MAX, DRLO)  // _MAX: Maximum Base Address
08086|                     CreateByteField (BUF0, 0x0D, DRHI)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8085
Line | AML source
--------------------------------------------------------------------------------
08082|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y1F._LEN, LLEN)  // _LEN: Length
08083|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._MIN, DALO)  // _MIN: Minimum Base Address
08084|                     CreateByteField (BUF0, 0x0B, DAHI)
08085|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._MAX, DRLO)  // _MAX: Maximum Base Address
     |                                                                               ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08086|                     CreateByteField (BUF0, 0x0D, DRHI)
08087|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._ALN, HALN)  // _ALN: Alignment
08088|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._LEN, HLEN)  // _LEN: Length
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8089
Line | AML source
--------------------------------------------------------------------------------
08086|                     CreateByteField (BUF0, 0x0D, DRHI)
08087|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._ALN, HALN)  // _ALN: Alignment
08088|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y20._LEN, HLEN)  // _LEN: Length
08089|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y21._INT, IRQL)  // _INT: Interrupts
     |                                                                               ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08090|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.ECP._CRS._Y22._DMA, DMAC)  // _DMA: Direct Memory Access
08091|                     Acquire (MX00, 0xFFFF)
08092|                     ENCG ()
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [HIGH] AMLAsmASL_MSG_ALIGNMENT: Test 1, Assembler error in line 8170
Line | AML source
--------------------------------------------------------------------------------
08167|                     StartDependentFn (0x01, 0x01)
08168|                     {
08169|                         IO (Decode16,
08170|                             0x03BC,             // Range Minimum
     |                                 ^
     | Error 6001: Must be a multiple of alignment/granularity value  
08171|                             0x03BC,             // Range Maximum
08172|                             0x08,               // Alignment
08173|                             0x08,               // Length
================================================================================

ADVICE: (for Error #6001, ASL_MSG_ALIGNMENT): Addresses must be an exact
multiple of the alignment value.

FAILED [HIGH] AMLAsmASL_MSG_ALIGNMENT: Test 1, Assembler error in line 8171
Line | AML source
--------------------------------------------------------------------------------
08168|                     {
08169|                         IO (Decode16,
08170|                             0x03BC,             // Range Minimum
08171|                             0x03BC,             // Range Maximum
     |                                 ^
     | Error 6001: Must be a multiple of alignment/granularity value  
08172|                             0x08,               // Alignment
08173|                             0x08,               // Length
08174|                             )
================================================================================

ADVICE: (for Error #6001, ASL_MSG_ALIGNMENT): Addresses must be an exact
multiple of the alignment value.

FAILED [HIGH] AMLAsmASL_MSG_ALIGNMENT: Test 1, Assembler error in line 8176
Line | AML source
--------------------------------------------------------------------------------
08173|                             0x08,               // Length
08174|                             )
08175|                         IO (Decode16,
08176|                             0x07BC,             // Range Minimum
     |                                 ^
     | Error 6001: Must be a multiple of alignment/granularity value  
08177|                             0x07BC,             // Range Maximum
08178|                             0x08,               // Alignment
08179|                             0x08,               // Length
================================================================================

ADVICE: (for Error #6001, ASL_MSG_ALIGNMENT): Addresses must be an exact
multiple of the alignment value.

FAILED [HIGH] AMLAsmASL_MSG_ALIGNMENT: Test 1, Assembler error in line 8177
Line | AML source
--------------------------------------------------------------------------------
08174|                             )
08175|                         IO (Decode16,
08176|                             0x07BC,             // Range Minimum
08177|                             0x07BC,             // Range Maximum
     |                                 ^
     | Error 6001: Must be a multiple of alignment/granularity value  
08178|                             0x08,               // Alignment
08179|                             0x08,               // Length
08180|                             )
================================================================================

ADVICE: (for Error #6001, ASL_MSG_ALIGNMENT): Addresses must be an exact
multiple of the alignment value.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
8287
Line | AML source
--------------------------------------------------------------------------------
08284|                     Release (MX00)
08285|                 }
08286| 
08287|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
08288|                 {
08289|                     Name (BUF0, ResourceTemplate ()
08290|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8291
Line | AML source
--------------------------------------------------------------------------------
08288|                 {
08289|                     Name (BUF0, ResourceTemplate ()
08290|                     {
08291|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08292|                             0x03F8,             // Range Minimum
08293|                             0x03F8,             // Range Maximum
08294|                             0x08,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8294
Line | AML source
--------------------------------------------------------------------------------
08291|                         IO (Decode16,
08292|                             0x03F8,             // Range Minimum
08293|                             0x03F8,             // Range Maximum
08294|                             0x08,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08295|                             0x08,               // Length
08296|                             _Y23)
08297|                         IRQNoFlags (_Y24)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8295
Line | AML source
--------------------------------------------------------------------------------
08292|                             0x03F8,             // Range Minimum
08293|                             0x03F8,             // Range Maximum
08294|                             0x08,               // Alignment
08295|                             0x08,               // Length
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08296|                             _Y23)
08297|                         IRQNoFlags (_Y24)
08298|                             {4}
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8300
Line | AML source
--------------------------------------------------------------------------------
08297|                         IRQNoFlags (_Y24)
08298|                             {4}
08299|                     })
08300|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y23._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08301|                     CreateByteField (BUF0, 0x03, IOHI)
08302|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y23._MAX, IORL)  // _MAX: Maximum Base Address
08303|                     CreateByteField (BUF0, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8302
Line | AML source
--------------------------------------------------------------------------------
08299|                     })
08300|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y23._MIN, IOLO)  // _MIN: Minimum Base Address
08301|                     CreateByteField (BUF0, 0x03, IOHI)
08302|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y23._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08303|                     CreateByteField (BUF0, 0x05, IORH)
08304|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y24._INT, IRQL)  // _INT: Interrupts
08305|                     Acquire (MX00, 0xFFFF)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8304
Line | AML source
--------------------------------------------------------------------------------
08301|                     CreateByteField (BUF0, 0x03, IOHI)
08302|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y23._MAX, IORL)  // _MAX: Maximum Base Address
08303|                     CreateByteField (BUF0, 0x05, IORH)
08304|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y24._INT, IRQL)  // _INT: Interrupts
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08305|                     Acquire (MX00, 0xFFFF)
08306|                     ENCG ()
08307|                     SDEV (0x04)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
8454
Line | AML source
--------------------------------------------------------------------------------
08451|                     Release (MX00)
08452|                 }
08453| 
08454|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
08455|                 {
08456|                     Name (BUF0, ResourceTemplate ()
08457|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8458
Line | AML source
--------------------------------------------------------------------------------
08455|                 {
08456|                     Name (BUF0, ResourceTemplate ()
08457|                     {
08458|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08459|                             0x02F8,             // Range Minimum
08460|                             0x02F8,             // Range Maximum
08461|                             0x08,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8461
Line | AML source
--------------------------------------------------------------------------------
08458|                         IO (Decode16,
08459|                             0x02F8,             // Range Minimum
08460|                             0x02F8,             // Range Maximum
08461|                             0x08,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08462|                             0x08,               // Length
08463|                             _Y25)
08464|                         IRQNoFlags (_Y26)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 8462
Line | AML source
--------------------------------------------------------------------------------
08459|                             0x02F8,             // Range Minimum
08460|                             0x02F8,             // Range Maximum
08461|                             0x08,               // Alignment
08462|                             0x08,               // Length
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
08463|                             _Y25)
08464|                         IRQNoFlags (_Y26)
08465|                             {3}
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8467
Line | AML source
--------------------------------------------------------------------------------
08464|                         IRQNoFlags (_Y26)
08465|                             {3}
08466|                     })
08467|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y25._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08468|                     CreateByteField (BUF0, 0x03, IOHI)
08469|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y25._MAX, IORL)  // _MAX: Maximum Base Address
08470|                     CreateByteField (BUF0, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8469
Line | AML source
--------------------------------------------------------------------------------
08466|                     })
08467|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y25._MIN, IOLO)  // _MIN: Minimum Base Address
08468|                     CreateByteField (BUF0, 0x03, IOHI)
08469|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y25._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08470|                     CreateByteField (BUF0, 0x05, IORH)
08471|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y26._INT, IRQL)  // _INT: Interrupts
08472|                     Acquire (MX00, 0xFFFF)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 8471
Line | AML source
--------------------------------------------------------------------------------
08468|                     CreateByteField (BUF0, 0x03, IOHI)
08469|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y25._MAX, IORL)  // _MAX: Maximum Base Address
08470|                     CreateByteField (BUF0, 0x05, IORH)
08471|                     CreateByteField (BUF0, \_SB.PCI0.LPCB.SIO.COM2._CRS._Y26._INT, IRQL)  // _INT: Interrupts
     |                                                                                ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
08472|                     Acquire (MX00, 0xFFFF)
08473|                     ENCG ()
08474|                     SDEV (0x05)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8659
Line | AML source
--------------------------------------------------------------------------------
08656|         }
08657|     }
08658| 
08659|     Method (\AWAK, 1, NotSerialized)
     |                ^
     | Remark 2146: Method Argument is never used    (Arg0)
08660|     {
08661|         Return (Package (0x02)
08662|         {
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8668
Line | AML source
--------------------------------------------------------------------------------
08665|         })
08666|     }
08667| 
08668|     Method (\APTS, 1, NotSerialized)
     |                ^
     | Remark 2146: Method Argument is never used    (Arg0)
08669|     {
08670|     }
08671| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8732
Line | AML source
--------------------------------------------------------------------------------
08729|         }
08730|     }
08731| 
08732|     Method (\EV4, 2, NotSerialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg0)
08733|     {
08734|     }
08735| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 8732
Line | AML source
--------------------------------------------------------------------------------
08729|         }
08730|     }
08731| 
08732|     Method (\EV4, 2, NotSerialized)
     |               ^
     | Remark 2146: Method Argument is never used    (Arg1)
08733|     {
08734|     }
08735| 
================================================================================
Table DSDT (0) reassembly: Found 18 errors, 16 warnings, 66 remarks.


Checking ACPI table SSDT (#1)

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 183
Line | AML source
--------------------------------------------------------------------------------
00180|                 0x00000008
00181|             }
00182|         })
00183|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00184|         {
00185|             0x80000000, 
00186|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 203
Line | AML source
--------------------------------------------------------------------------------
00200|             0x80000000
00201|         }
00202| 
00203|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00204|         {
00205|             0x80000000, 
00206|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 204
Line | AML source
--------------------------------------------------------------------------------
00201|         }
00202| 
00203|         Package (0x06)
00204|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00205|             0x80000000, 
00206|             0x80000000, 
00207|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 223
Line | AML source
--------------------------------------------------------------------------------
00220|             0x80000000
00221|         }
00222| 
00223|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00224|         {
00225|             0x80000000, 
00226|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 224
Line | AML source
--------------------------------------------------------------------------------
00221|         }
00222| 
00223|         Package (0x06)
00224|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00225|             0x80000000, 
00226|             0x80000000, 
00227|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 243
Line | AML source
--------------------------------------------------------------------------------
00240|             0x80000000
00241|         }
00242| 
00243|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00244|         {
00245|             0x80000000, 
00246|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 244
Line | AML source
--------------------------------------------------------------------------------
00241|         }
00242| 
00243|         Package (0x06)
00244|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00245|             0x80000000, 
00246|             0x80000000, 
00247|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 263
Line | AML source
--------------------------------------------------------------------------------
00260|             0x80000000
00261|         }
00262| 
00263|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00264|         {
00265|             0x80000000, 
00266|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 264
Line | AML source
--------------------------------------------------------------------------------
00261|         }
00262| 
00263|         Package (0x06)
00264|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00265|             0x80000000, 
00266|             0x80000000, 
00267|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 283
Line | AML source
--------------------------------------------------------------------------------
00280|             0x80000000
00281|         }
00282| 
00283|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00284|         {
00285|             0x80000000, 
00286|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 284
Line | AML source
--------------------------------------------------------------------------------
00281|         }
00282| 
00283|         Package (0x06)
00284|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00285|             0x80000000, 
00286|             0x80000000, 
00287|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 303
Line | AML source
--------------------------------------------------------------------------------
00300|             0x80000000
00301|         }
00302| 
00303|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00304|         {
00305|             0x80000000, 
00306|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 304
Line | AML source
--------------------------------------------------------------------------------
00301|         }
00302| 
00303|         Package (0x06)
00304|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00305|             0x80000000, 
00306|             0x80000000, 
00307|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 323
Line | AML source
--------------------------------------------------------------------------------
00320|             0x80000000
00321|         }
00322| 
00323|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00324|         {
00325|             0x80000000, 
00326|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 324
Line | AML source
--------------------------------------------------------------------------------
00321|         }
00322| 
00323|         Package (0x06)
00324|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00325|             0x80000000, 
00326|             0x80000000, 
00327|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 343
Line | AML source
--------------------------------------------------------------------------------
00340|             0x80000000
00341|         }
00342| 
00343|         Name (_PSS, Package (0x09)  // _PSS: Performance Supported States
     |           ^
     | Error 6126: syntax error, unexpected PARSEOP_NAME
00344|         {
00345|             Package (0x06)
00346|             {
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 434
Line | AML source
--------------------------------------------------------------------------------
00431|                 0x00001000, 
00432|                 0x00001000
00433|             }
00434|         })
     |         ^
     | Error 6126: syntax error, unexpected ')'  
00435|         Package (0x06)
00436|         {
00437|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 445
Line | AML source
--------------------------------------------------------------------------------
00442|             0x80000000
00443|         }
00444| 
00445|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00446|         {
00447|             0x80000000, 
00448|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 446
Line | AML source
--------------------------------------------------------------------------------
00443|         }
00444| 
00445|         Package (0x06)
00446|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00447|             0x80000000, 
00448|             0x80000000, 
00449|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 465
Line | AML source
--------------------------------------------------------------------------------
00462|             0x80000000
00463|         }
00464| 
00465|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00466|         {
00467|             0x80000000, 
00468|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 466
Line | AML source
--------------------------------------------------------------------------------
00463|         }
00464| 
00465|         Package (0x06)
00466|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00467|             0x80000000, 
00468|             0x80000000, 
00469|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 485
Line | AML source
--------------------------------------------------------------------------------
00482|             0x80000000
00483|         }
00484| 
00485|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00486|         {
00487|             0x80000000, 
00488|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 486
Line | AML source
--------------------------------------------------------------------------------
00483|         }
00484| 
00485|         Package (0x06)
00486|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00487|             0x80000000, 
00488|             0x80000000, 
00489|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 505
Line | AML source
--------------------------------------------------------------------------------
00502|             0x80000000
00503|         }
00504| 
00505|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00506|         {
00507|             0x80000000, 
00508|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 506
Line | AML source
--------------------------------------------------------------------------------
00503|         }
00504| 
00505|         Package (0x06)
00506|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00507|             0x80000000, 
00508|             0x80000000, 
00509|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 525
Line | AML source
--------------------------------------------------------------------------------
00522|             0x80000000
00523|         }
00524| 
00525|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00526|         {
00527|             0x80000000, 
00528|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 526
Line | AML source
--------------------------------------------------------------------------------
00523|         }
00524| 
00525|         Package (0x06)
00526|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00527|             0x80000000, 
00528|             0x80000000, 
00529|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 545
Line | AML source
--------------------------------------------------------------------------------
00542|             0x80000000
00543|         }
00544| 
00545|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00546|         {
00547|             0x80000000, 
00548|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 546
Line | AML source
--------------------------------------------------------------------------------
00543|         }
00544| 
00545|         Package (0x06)
00546|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00547|             0x80000000, 
00548|             0x80000000, 
00549|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 565
Line | AML source
--------------------------------------------------------------------------------
00562|             0x80000000
00563|         }
00564| 
00565|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00566|         {
00567|             0x80000000, 
00568|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 566
Line | AML source
--------------------------------------------------------------------------------
00563|         }
00564| 
00565|         Package (0x06)
00566|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00567|             0x80000000, 
00568|             0x80000000, 
00569|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 585
Line | AML source
--------------------------------------------------------------------------------
00582|             0x80000000
00583|         }
00584| 
00585|         Package (0x06)
     |              ^
     | Error 6126: syntax error, unexpected PARSEOP_PACKAGE
00586|         {
00587|             0x80000000, 
00588|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 586
Line | AML source
--------------------------------------------------------------------------------
00583|         }
00584| 
00585|         Package (0x06)
00586|         {
     |        ^
     | Error 6126: syntax error, unexpected '{'  
00587|             0x80000000, 
00588|             0x80000000, 
00589|             0x80000000, 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] AMLAsmASL_MSG_SYNTAX: Test 1, Assembler error in line 636
Line | AML source
--------------------------------------------------------------------------------
00633|             }
00634|         })
00635|     }
00636| }
     | ^                                         
     | Error 6126: syntax error, unexpected '}', expecting $end and premature End-Of-File
00637| 
================================================================================

ADVICE: (for Error #6126, ASL_MSG_SYNTAX): The disassembled code cannot be
reassembled using the strict IASL compiler as it contains syntax errors.

FAILED [HIGH] SyntaxCheckIASLCompilerAborted: Test 1, Compilation aborted early
due to a parser detected syntax error.

ADVICE: Some subsequent errors may not be detected because the compiler had to
terminate prematurely. If the compiler did not abort early then potentially
correct code may parse incorrectly producing some or many false positive errors.

Table SSDT (1) reassembly: Found 34 errors, 0 warnings, 0 remarks.


Checking ACPI table SSDT (#2)

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 70
Line | AML source
--------------------------------------------------------------------------------
00067|         {
00068|             Store (CPDC (Arg0), Local0)
00069|             GCAP (Local0)
00070|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00071|         }
00072| 
00073|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
80
Line | AML source
--------------------------------------------------------------------------------
00077|             Return (Local0)
00078|         }
00079| 
00080|         Method (CPDC, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00081|         {
00082|             CreateDWordField (Arg0, Zero, REVS)
00083|             CreateDWordField (Arg0, 0x04, SIZE)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 95
Line | AML source
--------------------------------------------------------------------------------
00092|             Return (COSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2))
00093|         }
00094| 
00095|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg2)
00096|         {
00097|             CreateDWordField (Arg3, Zero, STS0)
00098|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
95
Line | AML source
--------------------------------------------------------------------------------
00092|             Return (COSC (ToUUID ("4077a616-290c-47be-9ebd-d87058713953"), REVS, SIZE, Local2))
00093|         }
00094| 
00095|         Method (COSC, 4, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00096|         {
00097|             CreateDWordField (Arg3, Zero, STS0)
00098|             CreateDWordField (Arg3, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 98
Line | AML source
--------------------------------------------------------------------------------
00095|         Method (COSC, 4, NotSerialized)
00096|         {
00097|             CreateDWordField (Arg3, Zero, STS0)
00098|             CreateDWordField (Arg3, 0x04, CAP0)
     |                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [COSC])
00099|             CreateDWordField (Arg0, Zero, IID0)
00100|             CreateDWordField (Arg0, 0x04, IID1)
00101|             CreateDWordField (Arg0, 0x08, IID2)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
124
Line | AML source
--------------------------------------------------------------------------------
00121|             Return (Arg3)
00122|         }
00123| 
00124|         Method (GCAP, 1, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00125|         {
00126|             CreateDWordField (Arg0, Zero, STS0)
00127|             CreateDWordField (Arg0, 0x04, CAP0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 163
Line | AML source
--------------------------------------------------------------------------------
00160|         {
00161|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00162|             GCAP (Local0)
00163|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00164|         }
00165| 
00166|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
202
Line | AML source
--------------------------------------------------------------------------------
00199|             Return (Zero)
00200|         }
00201| 
00202|         Method (APCT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00203|         {
00204|             If (LAnd (And (CFGD, 0x2E), LNot (And (SDTL, 0x20))))
00205|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
212
Line | AML source
--------------------------------------------------------------------------------
00209|             }
00210|         }
00211| 
00212|         Method (APPT, 0, NotSerialized)
     |                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00213|         {
00214|             If (LAnd (And (CFGD, One), LNot (And (SDTL, 0x10))))
00215|             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 229
Line | AML source
--------------------------------------------------------------------------------
00226|         {
00227|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00228|             GCAP (Local0)
00229|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00230|         }
00231| 
00232|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 275
Line | AML source
--------------------------------------------------------------------------------
00272|         {
00273|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00274|             GCAP (Local0)
00275|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00276|         }
00277| 
00278|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 321
Line | AML source
--------------------------------------------------------------------------------
00318|         {
00319|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00320|             GCAP (Local0)
00321|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00322|         }
00323| 
00324|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 367
Line | AML source
--------------------------------------------------------------------------------
00364|         {
00365|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00366|             GCAP (Local0)
00367|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00368|         }
00369| 
00370|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 413
Line | AML source
--------------------------------------------------------------------------------
00410|         {
00411|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00412|             GCAP (Local0)
00413|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00414|         }
00415| 
00416|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_NO_RETURN_VAL: Test 1, Assembler warning
in line 459
Line | AML source
--------------------------------------------------------------------------------
00456|         {
00457|             Store (\_PR.CPU0.CPDC (Arg0), Local0)
00458|             GCAP (Local0)
00459|             Return (Local0)
     |                         ^
     | Warning 3104: Reserved method should not return a value    (_PDC)
00460|         }
00461| 
00462|         Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
================================================================================

ADVICE: (for Warning #3104, ASL_MSG_RESERVED_NO_RETURN_VAL): A reserved method
returned a value however it is not expected to return anything, so this does not
conform to the expected behaviour. The kernel will most probably ignore the
return value, so this is not going to produce any run time errors.

Table SSDT (2) reassembly: Found 0 errors, 8 warnings, 7 remarks.


================================================================================
0 passed, 150 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

stao: STAO Status Override Table test.
--------------------------------------------------------------------------------
ACPI STAO table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

srat: SRAT System Resource Affinity Table test.
--------------------------------------------------------------------------------
ACPI SRAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spmi: SPMI Service Processor Management Interface Description Table test.
--------------------------------------------------------------------------------
ACPI SPMI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spcr: SPCR Serial Port Console Redirection Table test.
--------------------------------------------------------------------------------
ACPI SPCR table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slit: SLIT System Locality Distance Information test.
--------------------------------------------------------------------------------
ACPI SLIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slic: SLIC Software Licensing Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: SLIC Software Licensing Description Table test.
Software Licensing Description Table
SLIC Public Key Structure has had minimal check due to proprietary nature of the
table
SLIC Windows Marker Structure has had minimal check due to proprietary nature of
the table
PASSED: Test 1, No issues found in SLIC table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

sbst: SBST Smart Battery Specification Table test.
--------------------------------------------------------------------------------
ACPI SBST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

rsdt: RSDT Root System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDT Root System Description Table test.
PASSED: Test 1, No issues found in RSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdp: RSDP Root System Description Pointer test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDP Root System Description Pointer test.
PASSED: Test 1, No issues found in RSDP table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pcc: Processor Clocking Control (PCC) test.
--------------------------------------------------------------------------------
Test 1 of 1: Processor Clocking Control (PCC) test.
This test checks the sanity of the Processor Clocking Control as found on some
HP ProLiant machines. Most computers do not use this interface to control the
CPU clock frequency, so this test will be skipped.

This machine does not use Processor Clocking Control (PCC).

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

osilinux: Disassemble DSDT to check for _OSI("Linux").
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble DSDT to check for _OSI("Linux").
This is not strictly a failure mode, it just alerts one that this has been
defined in the DSDT and probably should be avoided since the Linux ACPI driver
matches onto the Windows _OSI strings
            {
                If (\_OSI ("Linux"))
                {
                    Store (0x03E8, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2001"))
                {
                    Store (0x07D1, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2001 SP1"))
                {
                    Store (0x07D1, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2001 SP2"))
                {
                    Store (0x07D2, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2006"))
                {
                    Store (0x07D6, OSYS) /* \OSYS */
                }
                If (\_OSI ("Windows 2009"))
                {
                    Store (0x07D9, OSYS) /* \OSYS */
                }
            }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.

================================================================================
0 passed, 0 failed, 1 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

method: ACPI DSDT Method Semantic tests.
--------------------------------------------------------------------------------
FADT Preferred PM profile indicates this is not a Mobile Platform.
Test 1 of 191: Test Method Names.
Found 1262 Objects 
PASSED: Test 1, Method names contain legal characters.

Test 2 of 191: Test _AEI.
SKIPPED: Test 2, Skipping test for non-existant object _AEI.

Test 3 of 191: Test _EVT (Event Method).
SKIPPED: Test 3, Skipping test for non-existant object _EVT.

Test 4 of 191: Test _DLM (Device Lock Mutex).
SKIPPED: Test 4, Skipping test for non-existant object _DLM.

Test 5 of 191: Test _PIC (Inform AML of Interrupt Model).
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.

Test 6 of 191: Test _CID (Compatible ID).
PASSED: Test 6, \_SB_.PCI0._CID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 6, \_SB_.PCI0.LPCB.CWDT._CID returned an integer 0x020cd041 (EISA
ID PNP0C02).

Test 7 of 191: Test _DDN (DOS Device Name).
PASSED: Test 7, \_SB_.PCI0.LPCB.SIO_.COM1._DDN correctly returned a string.
PASSED: Test 7, \_SB_.PCI0.LPCB.SIO_.COM2._DDN correctly returned a string.

Test 8 of 191: Test _HID (Hardware ID).
PASSED: Test 8, \_SB_.PCI0._HID returned an integer 0x080ad041 (EISA ID
PNP0A08).
PASSED: Test 8, \_SB_.PCI0.LPCB.DMAC._HID returned an integer 0x0002d041 (EISA
ID PNP0200).
PASSED: Test 8, \_SB_.PCI0.LPCB.FWHD._HID returned an integer 0x0008d425 (EISA
ID INT0800).
PASSED: Test 8, \_SB_.PCI0.LPCB.HPET._HID returned an integer 0x0301d041 (EISA
ID PNP0103).
PASSED: Test 8, \_SB_.PCI0.LPCB.IPIC._HID returned an integer 0x0000d041 (EISA
ID PNP0000).
PASSED: Test 8, \_SB_.PCI0.LPCB.MATH._HID returned an integer 0x040cd041 (EISA
ID PNP0C04).
PASSED: Test 8, \_SB_.PCI0.LPCB.LDRC._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPCB.RTC_._HID returned an integer 0x000bd041 (EISA
ID PNP0B00).
PASSED: Test 8, \_SB_.PCI0.LPCB.TIMR._HID returned an integer 0x0001d041 (EISA
ID PNP0100).
PASSED: Test 8, \_SB_.PCI0.LPCB.CWDT._HID returned an integer 0x0d3fd425 (EISA
ID INT3F0D).
PASSED: Test 8, \_SB_.PCI0.LPCB.PS2K._HID returned an integer 0x0303d041 (EISA
ID PNP0303).
PASSED: Test 8, \_SB_.PCI0.LPCB.SIO_._HID returned an integer 0x050ad041 (EISA
ID PNP0A05).
PASSED: Test 8, \_SB_.PCI0.LPCB.SIO_.MOU_._HID returned an integer 0x130fd041
(EISA ID PNP0F13).
PASSED: Test 8, \_SB_.PCI0.LPCB.SIO_.ECP_._HID returned an integer 0x0104d041
(EISA ID PNP0401).
PASSED: Test 8, \_SB_.PCI0.LPCB.SIO_.COM1._HID returned an integer 0x0105d041
(EISA ID PNP0501).
PASSED: Test 8, \_SB_.PCI0.LPCB.SIO_.COM2._HID returned an integer 0x0105d041
(EISA ID PNP0501).
PASSED: Test 8, \_SB_.PCI0.PDRC._HID returned an integer 0x020cd041 (EISA ID
PNP0C02).
PASSED: Test 8, \_SB_.MEM2._HID returned an integer 0x010cd041 (EISA ID
PNP0C01).
PASSED: Test 8, \_SB_.LNKA._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKB._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKC._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKD._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKE._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKF._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKG._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.LNKH._HID returned an integer 0x0f0cd041 (EISA ID
PNP0C0F).
PASSED: Test 8, \_SB_.PWRB._HID returned an integer 0x0c0cd041 (EISA ID
PNP0C0C).

Test 9 of 191: Test _HRV (Hardware Revision Number).
SKIPPED: Test 9, Skipping test for non-existant object _HRV.

Test 10 of 191: Test _MLS (Multiple Language String).
SKIPPED: Test 10, Skipping test for non-existant object _MLS.

Test 11 of 191: Test _PLD (Physical Device Location).
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._PLD correctly returned a sane
looking package.
PASSED: Test 11, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._PLD correctly returned a sane
looking package.

Test 12 of 191: Test _SUB (Subsystem ID).
SKIPPED: Test 12, Skipping test for non-existant object _SUB.

Test 13 of 191: Test _SUN (Slot User Number).
SKIPPED: Test 13, Skipping test for non-existant object _SUN.

Test 14 of 191: Test _STR (String).
SKIPPED: Test 14, Skipping test for non-existant object _STR.

Test 15 of 191: Test _UID (Unique ID).
PASSED: Test 15, \_SB_.PCI0._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPCB.HPET._UID correctly returned sane looking value
0x00000000.
PASSED: Test 15, \_SB_.PCI0.LPCB.LDRC._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.PCI0.LPCB.SIO_.COM1._UID correctly returned sane looking
value 0x00000001.
PASSED: Test 15, \_SB_.PCI0.LPCB.SIO_.COM2._UID correctly returned sane looking
value 0x00000002.
PASSED: Test 15, \_SB_.PCI0.PDRC._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.MEM2._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKA._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.LNKB._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.LNKC._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.LNKD._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \_SB_.LNKE._UID correctly returned sane looking value
0x00000005.
PASSED: Test 15, \_SB_.LNKF._UID correctly returned sane looking value
0x00000006.
PASSED: Test 15, \_SB_.LNKG._UID correctly returned sane looking value
0x00000007.
PASSED: Test 15, \_SB_.LNKH._UID correctly returned sane looking value
0x00000008.
PASSED: Test 15, \_SB_.PWRB._UID correctly returned sane looking value
0x000000aa.

Test 16 of 191: Test _CDM (Clock Domain).
SKIPPED: Test 16, Skipping test for non-existant object _CDM.

Test 17 of 191: Test _CRS (Current Resource Settings).
PASSED: Test 17, \_SB_.PCI0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.DMAC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.FWHD._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.HPET._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.IPIC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.MATH._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.LDRC._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.RTC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.TIMR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.CWDT._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.PS2K._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.SIO_.MOU_._CRS (I/O Port Descriptor) looks
sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.SIO_.ECP_._CRS (I/O Port Descriptor) looks
sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.SIO_.COM1._CRS (I/O Port Descriptor) looks
sane.
PASSED: Test 17, \_SB_.PCI0.LPCB.SIO_.COM2._CRS (I/O Port Descriptor) looks
sane.
PASSED: Test 17, \_SB_.PCI0.PDRC._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.MEM2._CRS (End Tag Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKA._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKB._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKC._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKD._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKE._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKF._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKG._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.LNKH._CRS (IRQ Descriptor) looks sane.

Test 18 of 191: Test _DSD (Device Specific Data).
SKIPPED: Test 18, Skipping test for non-existant object _DSD.

Test 19 of 191: Test _DIS (Disable).
PASSED: Test 19, \_SB_.PCI0.LPCB.SIO_.ECP_._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPCB.SIO_.COM1._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPCB.SIO_.COM2._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKA._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKB._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKC._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKD._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKE._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKF._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKG._DIS returned no values as expected.
PASSED: Test 19, \_SB_.LNKH._DIS returned no values as expected.

Test 20 of 191: Test _DMA (Direct Memory Access).
SKIPPED: Test 20, Skipping test for non-existant object _DMA.

Test 21 of 191: Test _FIX (Fixed Register Resource Provider).
SKIPPED: Test 21, Skipping test for non-existant object _FIX.

Test 22 of 191: Test _GSB (Global System Interrupt Base).
SKIPPED: Test 22, Skipping test for non-existant object _GSB.

Test 23 of 191: Test _HPP (Hot Plug Parameters).
SKIPPED: Test 23, Skipping test for non-existant object _HPP.

Test 24 of 191: Test _PRS (Possible Resource Settings).
PASSED: Test 24, \_SB_.PCI0.LPCB.PS2K._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPCB.SIO_.ECP_._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPCB.SIO_.COM1._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPCB.SIO_.COM2._PRS (Start Dependent Functions
Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKA._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKB._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKC._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKD._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKE._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKF._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKG._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.LNKH._PRS (IRQ Descriptor) looks sane.

Test 25 of 191: Test _PXM (Proximity).
SKIPPED: Test 25, Skipping test for non-existant object _PXM.

Test 26 of 191: Test _CCA (Cache Coherency Attribute).
SKIPPED: Test 26, Skipping test for non-existant object _CCA.

Test 27 of 191: Test _EDL (Eject Device List).
SKIPPED: Test 27, Skipping test for non-existant object _EDL.

Test 28 of 191: Test _EJD (Ejection Dependent Device).
SKIPPED: Test 28, Skipping test for non-existant object _EJD.

Test 29 of 191: Test _EJ0 (Eject).
SKIPPED: Test 29, Skipping test for non-existant object _EJ0.

Test 30 of 191: Test _EJ1 (Eject).
SKIPPED: Test 30, Skipping test for non-existant object _EJ1.

Test 31 of 191: Test _EJ2 (Eject).
SKIPPED: Test 31, Skipping test for non-existant object _EJ2.

Test 32 of 191: Test _EJ3 (Eject).
SKIPPED: Test 32, Skipping test for non-existant object _EJ3.

Test 33 of 191: Test _EJ4 (Eject).
SKIPPED: Test 33, Skipping test for non-existant object _EJ4.

Test 34 of 191: Test _LCK (Lock).
SKIPPED: Test 34, Skipping test for non-existant object _LCK.

Test 35 of 191: Test _RMV (Remove).
SKIPPED: Test 35, Skipping test for non-existant object _RMV.

Test 36 of 191: Test _STA (Status).
PASSED: Test 36, \_SB_.PCI0.LPCB.HPET._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.CWDT._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.LPCB.PS2K._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.SIO_.MOU_._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.SIO_.ECP_._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.SIO_.COM1._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPCB.SIO_.COM2._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.LNKA._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKB._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKC._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKD._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKE._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKF._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKG._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.LNKH._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.PWRB._STA correctly returned sane looking value
0x0000000b.

Test 37 of 191: Test _DEP (Operational Region Dependencies).
SKIPPED: Test 37, Skipping test for non-existant object _DEP.

Test 38 of 191: Test _BDN (BIOS Dock Name).
SKIPPED: Test 38, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BDN.

Test 39 of 191: Test _BBN (Base Bus Number).
PASSED: Test 39, \_SB_.PCI0._BBN correctly returned an integer.

Test 40 of 191: Test _DCK (Dock).
SKIPPED: Test 40, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _DCK.

Test 41 of 191: Test _INI (Initialize).
PASSED: Test 41, \_SB_.PCI0._INI returned no values as expected.

Test 42 of 191: Test _GLK (Global Lock).
SKIPPED: Test 42, Skipping test for non-existant object _GLK.

Test 43 of 191: Test _SEG (Segment).
SKIPPED: Test 43, Skipping test for non-existant object _SEG.

Test 44 of 191: Test _OFF (Set resource off).
SKIPPED: Test 44, Skipping test for non-existant object _OFF.

Test 45 of 191: Test _ON (Set resource on).
SKIPPED: Test 45, Skipping test for non-existant object _ON.

Test 46 of 191: Test _DSW (Device Sleep Wake).
SKIPPED: Test 46, Skipping test for non-existant object _DSW.

Test 47 of 191: Test _IRC (In Rush Current).
SKIPPED: Test 47, Skipping test for non-existant object _IRC.

Test 48 of 191: Test _PRE (Power Resources for Enumeration).
SKIPPED: Test 48, Skipping test for non-existant object _PRE.

Test 49 of 191: Test _PR0 (Power Resources for D0).
SKIPPED: Test 49, Skipping test for non-existant object _PR0.

Test 50 of 191: Test _PR1 (Power Resources for D1).
SKIPPED: Test 50, Skipping test for non-existant object _PR1.

Test 51 of 191: Test _PR2 (Power Resources for D2).
SKIPPED: Test 51, Skipping test for non-existant object _PR2.

Test 52 of 191: Test _PR3 (Power Resources for D3).
SKIPPED: Test 52, Skipping test for non-existant object _PR3.

Test 53 of 191: Test _PRW (Power Resources for Wake).
PASSED: Test 53, \_SB_.PCI0.LPCB.PS2K._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.LPCB.SIO_.MOU_._PRW correctly returned a sane
looking package.
PASSED: Test 53, \_SB_.PCI0.EHC1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.EHC2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.HDEF._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP01.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP01._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP02.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP02._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP03.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP03._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP04.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP04._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP05.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP05._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP06.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP06._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP07.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP07._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.RP08.PXSX._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.RP08._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PEG0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PEG0.PEGP._PRW correctly returned a sane looking
package.
PASSED: Test 53, \_SB_.PCI0.PEG1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PEG2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PEG3._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.P0P1._PRW correctly returned a sane looking package.

Test 54 of 191: Test _PS0 (Power State 0).
SKIPPED: Test 54, Skipping test for non-existant object _PS0.

Test 55 of 191: Test _PS1 (Power State 1).
SKIPPED: Test 55, Skipping test for non-existant object _PS1.

Test 56 of 191: Test _PS2 (Power State 2).
SKIPPED: Test 56, Skipping test for non-existant object _PS2.

Test 57 of 191: Test _PS3 (Power State 3).
SKIPPED: Test 57, Skipping test for non-existant object _PS3.

Test 58 of 191: Test _PSC (Power State Current).
SKIPPED: Test 58, Skipping test for non-existant object _PSC.

Test 59 of 191: Test _PSE (Power State for Enumeration).
SKIPPED: Test 59, Skipping test for non-existant object _PSE.

Test 60 of 191: Test _PSW (Power State Wake).
PASSED: Test 60, \_SB_.PCI0.EHC1._PSW returned no values as expected.
PASSED: Test 60, \_SB_.PCI0.EHC2._PSW returned no values as expected.

Test 61 of 191: Test _S1D (S1 Device State).
SKIPPED: Test 61, Skipping test for non-existant object _S1D.

Test 62 of 191: Test _S2D (S2 Device State).
SKIPPED: Test 62, Skipping test for non-existant object _S2D.

Test 63 of 191: Test _S3D (S3 Device State).
PASSED: Test 63, \_SB_.PCI0.EHC1._S3D correctly returned an integer.
PASSED: Test 63, \_SB_.PCI0.EHC2._S3D correctly returned an integer.

Test 64 of 191: Test _S4D (S4 Device State).
PASSED: Test 64, \_SB_.PCI0.EHC1._S4D correctly returned an integer.
PASSED: Test 64, \_SB_.PCI0.EHC2._S4D correctly returned an integer.

Test 65 of 191: Test _S0W (S0 Device Wake State).
SKIPPED: Test 65, Skipping test for non-existant object _S0W.

Test 66 of 191: Test _S1W (S1 Device Wake State).
SKIPPED: Test 66, Skipping test for non-existant object _S1W.

Test 67 of 191: Test _S2W (S2 Device Wake State).
SKIPPED: Test 67, Skipping test for non-existant object _S2W.

Test 68 of 191: Test _S3W (S3 Device Wake State).
SKIPPED: Test 68, Skipping test for non-existant object _S3W.

Test 69 of 191: Test _S4W (S4 Device Wake State).
SKIPPED: Test 69, Skipping test for non-existant object _S4W.

Test 70 of 191: Test _RST (Device Reset).
SKIPPED: Test 70, Skipping test for non-existant object _RST.

Test 71 of 191: Test _PRR (Power Resource for Reset).
SKIPPED: Test 71, Skipping test for non-existant object _PRR.

Test 72 of 191: Test _S0_ (S0 System State).
\_S0_ PM1a_CNT.SLP_TYP value: 0x00000000
\_S0_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 72, \_S0_ correctly returned a sane looking package.

Test 73 of 191: Test _S1_ (S1 System State).
SKIPPED: Test 73, Skipping test for non-existant object _S1_.

Test 74 of 191: Test _S2_ (S2 System State).
SKIPPED: Test 74, Skipping test for non-existant object _S2_.

Test 75 of 191: Test _S3_ (S3 System State).
\_S3_ PM1a_CNT.SLP_TYP value: 0x00000005
\_S3_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 75, \_S3_ correctly returned a sane looking package.

Test 76 of 191: Test _S4_ (S4 System State).
\_S4_ PM1a_CNT.SLP_TYP value: 0x00000006
\_S4_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 76, \_S4_ correctly returned a sane looking package.

Test 77 of 191: Test _S5_ (S5 System State).
\_S5_ PM1a_CNT.SLP_TYP value: 0x00000007
\_S5_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 77, \_S5_ correctly returned a sane looking package.

Test 78 of 191: Test _SWS (System Wake Source).
SKIPPED: Test 78, Skipping test for non-existant object _SWS.

Test 79 of 191: Test _PSS (Performance Supported States).
\_PR_.CPU0._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3101    95000    10        10
   1      3100    95000    10        10
   2      2800    82600    10        10
   3      2600    74419    10        10
   4      2400    67443    10        10
   5      2200    59864    10        10
   6      2000    53437    10        10
   7      1800    47257    10        10
   8      1600    40536    10        10
PASSED: Test 79, \_PR_.CPU0._PSS correctly returned a sane looking package.

Test 80 of 191: Test _CPC (Continuous Performance Control).
SKIPPED: Test 80, Skipping test for non-existant object _CPC.

Test 81 of 191: Test _CSD (C State Dependencies).
SKIPPED: Test 81, Skipping test for non-existant object _CSD.

Test 82 of 191: Test _CST (C States).
SKIPPED: Test 82, Skipping test for non-existant object _CST.

Test 83 of 191: Test _PCT (Performance Control).
PASSED: Test 83, \_PR_.CPU0._PCT correctly returned a sane looking package.

Test 84 of 191: Test _PDL (P-State Depth Limit).
SKIPPED: Test 84, Skipping test for non-existant object _PDL.

Test 85 of 191: Test _PPC (Performance Present Capabilities).
PASSED: Test 85, \_PR_.CPU0._PPC correctly returned an integer.

Test 86 of 191: Test _PPE (Polling for Platform Error).
SKIPPED: Test 86, Skipping test for non-existant object _PPE.

Test 87 of 191: Test _PSD (Power State Dependencies).
PASSED: Test 87, \_PR_.CPU0._PSD correctly returned a sane looking package.

Test 88 of 191: Test _PTC (Processor Throttling Control).
SKIPPED: Test 88, Skipping test for non-existant object _PTC.

Test 89 of 191: Test _TDL (T-State Depth Limit).
SKIPPED: Test 89, Skipping test for non-existant object _TDL.

Test 90 of 191: Test _TPC (Throttling Present Capabilities).
SKIPPED: Test 90, Skipping test for non-existant object _TPC.

Test 91 of 191: Test _TSD (Throttling State Dependencies).
SKIPPED: Test 91, Skipping test for non-existant object _TSD.

Test 92 of 191: Test _TSS (Throttling Supported States).
SKIPPED: Test 92, Skipping test for non-existant object _TSS.

Test 93 of 191: Test _PUR (Processor Utilization Request).
SKIPPED: Test 93, Skipping test for non-existant object _PUR.

Test 94 of 191: Test _MSG (Message).
SKIPPED: Test 94, Skipping test for non-existant object _MSG.

Test 95 of 191: Test _SST (System Status).
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.
PASSED: Test 95, \_SI_._SST returned no values as expected.

Test 96 of 191: Test _ALC (Ambient Light Colour Chromaticity).
SKIPPED: Test 96, Skipping test for non-existant object _ALC.

Test 97 of 191: Test _ALI (Ambient Light Illuminance).
SKIPPED: Test 97, Skipping test for non-existant object _ALI.

Test 98 of 191: Test _ALT (Ambient Light Temperature).
SKIPPED: Test 98, Skipping test for non-existant object _ALT.

Test 99 of 191: Test _ALP (Ambient Light Polling).
SKIPPED: Test 99, Skipping test for non-existant object _ALP.

Test 100 of 191: Test _ALR (Ambient Light Response).
SKIPPED: Test 100, Skipping test for non-existant object _ALR.

Test 101 of 191: Test _LID (Lid Status).
SKIPPED: Test 101, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _LID.

Test 102 of 191: Test _GTF (Get Task File).
SKIPPED: Test 102, Skipping test for non-existant object _GTF.

Test 103 of 191: Test _GTM (Get Timing Mode).
SKIPPED: Test 103, Skipping test for non-existant object _GTM.

Test 104 of 191: Test _MBM (Memory Bandwidth Monitoring Data).
SKIPPED: Test 104, Skipping test for non-existant object _MBM.

Test 105 of 191: Test _UPC (USB Port Capabilities).
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._UPC correctly returned a sane
looking package.
PASSED: Test 105, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._UPC correctly returned a sane
looking package.

Test 106 of 191: Test _UPD (User Presence Detect).
SKIPPED: Test 106, Skipping test for non-existant object _UPD.

Test 107 of 191: Test _UPP (User Presence Polling).
SKIPPED: Test 107, Skipping test for non-existant object _UPP.

Test 108 of 191: Test _GCP (Get Capabilities).
SKIPPED: Test 108, Skipping test for non-existant object _GCP.

Test 109 of 191: Test _GRT (Get Real Time).
SKIPPED: Test 109, Skipping test for non-existant object _GRT.

Test 110 of 191: Test _GWS (Get Wake Status).
SKIPPED: Test 110, Skipping test for non-existant object _GWS.

Test 111 of 191: Test _CWS (Clear Wake Status).
SKIPPED: Test 111, Skipping test for non-existant object _CWS.

Test 112 of 191: Test _STP (Set Expired Timer Wake Policy).
SKIPPED: Test 112, Skipping test for non-existant object _STP.

Test 113 of 191: Test _STV (Set Timer Value).
SKIPPED: Test 113, Skipping test for non-existant object _STV.

Test 114 of 191: Test _TIP (Expired Timer Wake Policy).
SKIPPED: Test 114, Skipping test for non-existant object _TIP.

Test 115 of 191: Test _TIV (Timer Values).
SKIPPED: Test 115, Skipping test for non-existant object _TIV.

Test 116 of 191: Test _SBS (Smart Battery Subsystem).
SKIPPED: Test 116, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _SBS.

Test 117 of 191: Test _BCT (Battery Charge Time).
SKIPPED: Test 117, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BCT.

Test 118 of 191: Test _BIF (Battery Information).
SKIPPED: Test 118, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIF.

Test 119 of 191: Test _BIX (Battery Information Extended).
SKIPPED: Test 119, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIX.

Test 120 of 191: Test _BMA (Battery Measurement Averaging).
SKIPPED: Test 120, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMA.

Test 121 of 191: Test _BMC (Battery Maintenance Control).
SKIPPED: Test 121, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMC.

Test 122 of 191: Test _BMD (Battery Maintenance Data).
SKIPPED: Test 122, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMD.

Test 123 of 191: Test _BMS (Battery Measurement Sampling Time).
SKIPPED: Test 123, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMS.

Test 124 of 191: Test _BST (Battery Status).
SKIPPED: Test 124, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BST.

Test 125 of 191: Test _BTP (Battery Trip Point).
SKIPPED: Test 125, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTP.

Test 126 of 191: Test _BTH (Battery Throttle Limit).
SKIPPED: Test 126, Skipping test for non-existant object _BTH.

Test 127 of 191: Test _BTM (Battery Time).
SKIPPED: Test 127, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTM.

Test 128 of 191: Test _PCL (Power Consumer List).
SKIPPED: Test 128, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _PCL.

Test 129 of 191: Test _PIF (Power Source Information).
SKIPPED: Test 129, Skipping test for non-existant object _PIF.

Test 130 of 191: Test _PRL (Power Source Redundancy List).
SKIPPED: Test 130, Skipping test for non-existant object _PRL.

Test 131 of 191: Test _PSR (Power Source).
SKIPPED: Test 131, Skipping test for non-existant object _PSR.

Test 132 of 191: Test _GAI (Get Averaging Level).
SKIPPED: Test 132, Skipping test for non-existant object _GAI.

Test 133 of 191: Test _GHL (Get Harware Limit).
SKIPPED: Test 133, Skipping test for non-existant object _GHL.

Test 134 of 191: Test _PMD (Power Meter Devices).
SKIPPED: Test 134, Skipping test for non-existant object _PMD.

Test 135 of 191: Test _PMM (Power Meter Measurement).
SKIPPED: Test 135, Skipping test for non-existant object _PMM.

Test 136 of 191: Test _FIF (Fan Information).
SKIPPED: Test 136, Skipping test for non-existant object _FIF.

Test 137 of 191: Test _FPS (Fan Performance States).
SKIPPED: Test 137, Skipping test for non-existant object _FPS.

Test 138 of 191: Test _FSL (Fan Set Level).
SKIPPED: Test 138, Skipping test for non-existant object _FSL.

Test 139 of 191: Test _FST (Fan Status).
SKIPPED: Test 139, Skipping test for non-existant object _FST.

Test 140 of 191: Test _ACx (Active Cooling).
SKIPPED: Test 140, Skipping test for non-existant object _AC0.

SKIPPED: Test 140, Skipping test for non-existant object _AC1.

SKIPPED: Test 140, Skipping test for non-existant object _AC2.

SKIPPED: Test 140, Skipping test for non-existant object _AC3.

SKIPPED: Test 140, Skipping test for non-existant object _AC4.

SKIPPED: Test 140, Skipping test for non-existant object _AC5.

SKIPPED: Test 140, Skipping test for non-existant object _AC6.

SKIPPED: Test 140, Skipping test for non-existant object _AC7.

SKIPPED: Test 140, Skipping test for non-existant object _AC8.

SKIPPED: Test 140, Skipping test for non-existant object _AC9.


Test 141 of 191: Test _ART (Active Cooling Relationship Table).
SKIPPED: Test 141, Skipping test for non-existant object _ART.

Test 142 of 191: Test _CRT (Critical Trip Point).
SKIPPED: Test 142, Skipping test for non-existant object _CRT.

Test 143 of 191: Test _CR3 (Warm/Standby Temperature).
SKIPPED: Test 143, Skipping test for non-existant object _CR3.

Test 144 of 191: Test _DTI (Device Temperature Indication).
SKIPPED: Test 144, Skipping test for non-existant object _DTI.

Test 145 of 191: Test _HOT (Hot Temperature).
SKIPPED: Test 145, Skipping test for non-existant object _HOT.

Test 146 of 191: Test _MTL (Minimum Throttle Limit).
SKIPPED: Test 146, Skipping test for non-existant object _MTL.

Test 147 of 191: Test _NTT (Notification Temp Threshold).
SKIPPED: Test 147, Skipping test for non-existant object _NTT.

Test 148 of 191: Test _PSL (Passive List).
SKIPPED: Test 148, Skipping test for non-existant object _PSL.

Test 149 of 191: Test _PSV (Passive Temp).
SKIPPED: Test 149, Skipping test for non-existant object _PSV.

Test 150 of 191: Test _RTV (Relative Temp Values).
SKIPPED: Test 150, Skipping test for non-existant object _RTV.

Test 151 of 191: Test _SCP (Set Cooling Policy).
SKIPPED: Test 151, Skipping test for non-existant object _DTI.

Test 152 of 191: Test _TC1 (Thermal Constant 1).
SKIPPED: Test 152, Skipping test for non-existant object _TC1.

Test 153 of 191: Test _TC2 (Thermal Constant 2).
SKIPPED: Test 153, Skipping test for non-existant object _TC2.

Test 154 of 191: Test _TFP (Thermal fast Sampling Period).
SKIPPED: Test 154, Skipping test for non-existant object _TFP.

Test 155 of 191: Test _TMP (Thermal Zone Current Temp).
SKIPPED: Test 155, Skipping test for non-existant object _TMP.

Test 156 of 191: Test _TPT (Trip Point Temperature).
SKIPPED: Test 156, Skipping test for non-existant object _TPT.

Test 157 of 191: Test _TRT (Thermal Relationship Table).
SKIPPED: Test 157, Skipping test for non-existant object _TRT.

Test 158 of 191: Test _TSN (Thermal Sensor Device).
SKIPPED: Test 158, Skipping test for non-existant object _TSN.

Test 159 of 191: Test _TSP (Thermal Sampling Period).
SKIPPED: Test 159, Skipping test for non-existant object _TSP.

Test 160 of 191: Test _TST (Temperature Sensor Threshold).
SKIPPED: Test 160, Skipping test for non-existant object _TST.

Test 161 of 191: Test _TZD (Thermal Zone Devices).
SKIPPED: Test 161, Skipping test for non-existant object _TZD.

Test 162 of 191: Test _TZM (Thermal Zone member).
SKIPPED: Test 162, Skipping test for non-existant object _TZM.

Test 163 of 191: Test _TZP (Thermal Zone Polling).
SKIPPED: Test 163, Skipping test for non-existant object _TZP.

Test 164 of 191: Test _GPE (General Purpose Events).
SKIPPED: Test 164, Skipping test for non-existant object _GPE.

Test 165 of 191: Test _EC (EC Offset Query).
SKIPPED: Test 165, Skipping test for non-existant object _EC.

Test 166 of 191: Test _PTS (Prepare to Sleep).
Test _PTS(1).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(2).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(3).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(4).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(5).
PASSED: Test 166, \_PTS returned no values as expected.


Test 167 of 191: Test _TTS (Transition to State).
SKIPPED: Test 167, Optional control method _TTS does not exist.

Test 168 of 191: Test _S0 (System S0 State).
SKIPPED: Test 168, Skipping test for non-existant object _S0.

Test 169 of 191: Test _S1 (System S1 State).
SKIPPED: Test 169, Skipping test for non-existant object _S1.

Test 170 of 191: Test _S2 (System S2 State).
SKIPPED: Test 170, Skipping test for non-existant object _S2.

Test 171 of 191: Test _S3 (System S3 State).
SKIPPED: Test 171, Skipping test for non-existant object _S3.

Test 172 of 191: Test _S4 (System S4 State).
SKIPPED: Test 172, Skipping test for non-existant object _S4.

Test 173 of 191: Test _S5 (System S5 State).
SKIPPED: Test 173, Skipping test for non-existant object _S5.

Test 174 of 191: Test _WAK (System Wake).
Test _WAK(1) System Wake, State S1.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(2) System Wake, State S2.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(3) System Wake, State S3.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(4) System Wake, State S4.
PASSED: Test 174, \_WAK correctly returned a sane looking package.

Test _WAK(5) System Wake, State S5.
PASSED: Test 174, \_WAK correctly returned a sane looking package.


Test 175 of 191: Test _ADR (Return Unique ID for Device).
PASSED: Test 175, \_SB_.PCI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD04._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD07._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.GFX0.DD08._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LPCB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR11._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR12._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR13._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR14._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR15._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR16._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR17._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC1.HUBN.PR01.PR18._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR11._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR12._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR13._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR14._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR15._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.EHC2.HUBN.PR01.PR16._ADR correctly returned an
integer.
PASSED: Test 175, \_SB_.PCI0.HDEF._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP01._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP01.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP02.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP03.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP04._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP04.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP05.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP06.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP07._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP07.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP08._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.RP08.PXSX._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG0.PEGP._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PEG3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.B0D4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.P0P1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SAT1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SBUS._ADR correctly returned an integer.

Test 176 of 191: Test _BCL (Query List of Brightness Control Levels Supported).
Brightness levels for \_SB_.PCI0.GFX0.DD02._BCL:
  Level on full power   : 80
  Level on battery power: 50
  Brightness Levels     : 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100
PASSED: Test 176, \_SB_.PCI0.GFX0.DD02._BCL returned a sane package of 23
integers.

Test 177 of 191: Test _BCM (Set Brightness Level).
PASSED: Test 177, \_SB_.PCI0.GFX0.DD02._BCM returned no values as expected.

Test 178 of 191: Test _BQC (Brightness Query Current Level).
PASSED: Test 178, \_SB_.PCI0.GFX0.DD02._BQC correctly returned an integer.

Test 179 of 191: Test _DCS (Return the Status of Output Device).
PASSED: Test 179, \_SB_.PCI0.GFX0.DD01._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD02._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD03._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD04._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD05._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD06._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD07._DCS correctly returned an integer.
PASSED: Test 179, \_SB_.PCI0.GFX0.DD08._DCS correctly returned an integer.

Test 180 of 191: Test _DDC (Return the EDID for this Device).
SKIPPED: Test 180, Skipping test for non-existant object _DDC.

Test 181 of 191: Test _DSS (Device Set State).
PASSED: Test 181, \_SB_.PCI0.GFX0.DD01._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD02._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD03._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD04._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD05._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD06._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD07._DSS returned no values as expected.
PASSED: Test 181, \_SB_.PCI0.GFX0.DD08._DSS returned no values as expected.

Test 182 of 191: Test _DGS (Query Graphics State).
PASSED: Test 182, \_SB_.PCI0.GFX0.DD01._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD02._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD03._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD04._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD05._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD06._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD07._DGS correctly returned an integer.
PASSED: Test 182, \_SB_.PCI0.GFX0.DD08._DGS correctly returned an integer.

Test 183 of 191: Test _DOD (Enumerate All Devices Attached to Display Adapter).
Device 0:
  Instance:                0
  Display port attachment: 0
  Type of display:         4 (Internal/Integrated Digital Flat Panel)
  BIOS can detect device:  0
  Non-VGA device:          0
  Head or pipe ID:         0
PASSED: Test 183, \_SB_.PCI0.GFX0._DOD correctly returned a sane looking
package.

Test 184 of 191: Test _DOS (Enable/Disable Output Switching).
PASSED: Test 184, \_SB_.PCI0.GFX0._DOS returned no values as expected.

Test 185 of 191: Test _GPD (Get POST Device).
SKIPPED: Test 185, Skipping test for non-existant object _GPD.

Test 186 of 191: Test _ROM (Get ROM Data).
SKIPPED: Test 186, Skipping test for non-existant object _ROM.

Test 187 of 191: Test _SPD (Set POST Device).
SKIPPED: Test 187, Skipping test for non-existant object _SPD.

Test 188 of 191: Test _VPO (Video POST Options).
SKIPPED: Test 188, Skipping test for non-existant object _VPO.

Test 189 of 191: Test _CBA (Configuration Base Address).
SKIPPED: Test 189, Skipping test for non-existant object _CBA.

Test 190 of 191: Test _IFT (IPMI Interface Type).
SKIPPED: Test 190, Skipping test for non-existant object _IFT.

Test 191 of 191: Test _SRV (IPMI Interface Revision).
SKIPPED: Test 191, Skipping test for non-existant object _SRV.

================================================================================
292 passed, 0 failed, 0 warning, 0 aborted, 162 skipped, 0 info only.
================================================================================

msdm: MSDM Microsoft Data Management Table test.
--------------------------------------------------------------------------------
ACPI MSDM table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mchi: MCHI Management Controller Host Interface Table test.
--------------------------------------------------------------------------------
ACPI MCHI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mcfg: MCFG PCI Express* memory mapped config space test.
--------------------------------------------------------------------------------
Test 1 of 2: Validate MCFG table.
This test tries to validate the MCFG table by comparing the first 16 bytes in
the MMIO mapped config space with the 'traditional' config space of the first
PCI device (root bridge). The MCFG data is only trusted if it is marked reserved
in the Int 15 AX=E820 BIOS memory map

Memory Map Layout
-----------------
0x0000000000000000 - 0x000000000009bfff (System RAM)
0x000000000009c000 - 0x000000000009ffff (reserved)
0x00000000000e0000 - 0x00000000000fffff (reserved)
0x0000000000100000 - 0x00000000cf231fff (System RAM)
0x00000000cf232000 - 0x00000000cf275fff (reserved)
0x00000000cf276000 - 0x00000000cf5b6fff (System RAM)
0x00000000cf5b7000 - 0x00000000cf5e6fff (reserved)
0x00000000cf5e7000 - 0x00000000cf7e6fff (ACPI Non-volatile Storage)
0x00000000cf7e7000 - 0x00000000cf7fefff (ACPI Non-volatile Storage)
0x00000000cf7ff000 - 0x00000000cf7fffff (System RAM)
0x00000000fed1c000 - 0x00000000fed1ffff (reserved)
0x00000000ffd80000 - 0x00000000ffd9ffff (reserved)
0x0000000100000000 - 0x000000012effffff (System RAM)

MCFG table found, size is 16 bytes (excluding header) (1 entries).
Configuration Entry #0:
  Base Address  : 0xf8000000
  Segment       : 0
  Start bus     : 0
  End bus       : 63
FAILED [LOW] MCFGMMIONotReserved: Test 1, MCFG MMIO config space at 0xf8000000
is not reserved in the memory map table

ADVICE: The PCI Express specification states that the PCI Express configuration
space should be defined in the MCFG table and *maybe* optionally defined in the
Int 15 AX=E820 BIOS memory map if ACPI MCFG is present. Linux checks if the
region is reserved in the memory map table and will reject the MMCONFIG if there
is a discrepency between MCFG and the memory map table for the PCI Express
region. [See arch/x86/pci/mmconfig-shared.c pci_mmcfg_reject_broken()]. It is
recommended that this is defined in the Int 15 AX=E820 BIOS memory map table for
Linux.


Test 2 of 2: Validate MCFG PCI config space.
PASSED: Test 2, PCI config space verified.

================================================================================
1 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

madt: MADT Multiple APIC Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MADT Multiple APIC Description Table test.
PASSED: Test 1, No issues found in MADT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

lpit: LPIT Low Power Idle Table test.
--------------------------------------------------------------------------------
ACPI LPIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

iort: IORT IO Remapping Table test.
--------------------------------------------------------------------------------
ACPI IORT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

hpet: HPET IA-PC High Precision Event Timer Table tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table.
Hardware ID of Event Block:
  PCI Vendor ID              : 0x8086
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 7
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x0
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x37ee
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT.
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x8086.
PASSED: Test 4, Valid clock period 69841279.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hest: HEST Hardware Error Source Table test.
--------------------------------------------------------------------------------
ACPI HEST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

gtdt: GTDT Generic Timer Description Table test.
--------------------------------------------------------------------------------
ACPI GTDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fpdt: FPDT Firmware Performance Data Table test.
--------------------------------------------------------------------------------
ACPI FPDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fan: Simple fan tests.
--------------------------------------------------------------------------------
Test 1 of 2: Test fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
PASSED: Test 1, Fan cooling_device0 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device1 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device2 of type Processor has max cooling state 10
and current cooling state 0.
PASSED: Test 1, Fan cooling_device3 of type Processor has max cooling state 10
and current cooling state 0.
FAILED [MEDIUM] NoFanCurState: Test 1, Fan present but has no cur_state present.

Test 2 of 2: Load system, check CPU fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
Loading CPUs for 20 seconds to try and get fan speeds to change.
Fan cooling_device0 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device1 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device2 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device3 current state did not change from value 0 while CPUs were
busy.

ADVICE: Did not detect any change in the CPU related thermal cooling device
states. It could be that the devices are returning static information back to
the driver and/or the fan speed is automatically being controlled by firmware
using System Management Mode in which case the kernel interfaces being examined
may not work anyway.


================================================================================
4 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fadt: FADT Fixed ACPI Description Table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test FADT ACPI Description Table tests.
FAILED [MEDIUM] FwCtrl32and64Differ: Test 1, FIRMWARE_CONTROL is 0xcf7e4e40 and
differs from X_FIRMWARE_CONTROL 0xcf7e4d40

ADVICE: One would expect the 32 bit FIRMWARE_CTRL and 64 bit X_FIRMWARE_CTRL
pointers to point to the same FACS, however they don't which is clearly
ambiguous and wrong. The kernel works around this by using the 64 bit
X_FIRMWARE_CTRL pointer to the FACS. 


Test 2 of 3: Test FADT SCI_EN bit is enabled.
FADT Preferred PM Profile: 0 (Unspecified) 
FADT is greater than ACPI version 1.0
PASSED: Test 2, SCI_EN bit in PM1a Control Register Block is enabled.

Test 3 of 3: Test FADT reset register.
PASSED: Test 3, FADT reset register width is 8 bits wide as expected.
PASSED: Test 3, FADT register bit offset is 0 as expected.

================================================================================
3 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

facs: FACS Firmware ACPI Control Structure test.
--------------------------------------------------------------------------------
Test 1 of 1: FACS Firmware ACPI Control Structure test.
FACS Firmware ACPI Control Structure:
  Signature:                'FACS'
  Length:                   0x00000040
  Hardware Signature:       0x00000000
  Firmware Waking Vector:   0x00000000
  Global Lock:              0x00000000
  Flags:                    0x00000000
  X-Firmware Waking Vector: 0x0000000000000000
  Version:                  0x01
  Reserved:                 0x00 0x00 0x00
  OSPM Flags:               0x00000000
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
PASSED: Test 1, No issues found in FACS table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

erst: ERST Error Record Serialization Table test.
--------------------------------------------------------------------------------
ACPI ERST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

ecdt: ECDT Embedded Controller Boot Resources Table test.
--------------------------------------------------------------------------------
ACPI ECDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dmar: DMA Remapping (VT-d) test.
--------------------------------------------------------------------------------
Test 1 of 1: DMA Remapping test.
PASSED: Test 1, DMAR ACPI table has passed test.
PASSED: Test 1, Found no DMAR errors in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

dbg2: DBG2 (Debug Port Table 2) test.
--------------------------------------------------------------------------------
ACPI DBG2 table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbgp: DBGP (Debug Port) Table test.
--------------------------------------------------------------------------------
ACPI DBGP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cstates: Processor C state support test.
--------------------------------------------------------------------------------
Test 1 of 1: Test all CPUs C-states.
This test checks if all processors have the same number of C-states, if the
C-state counter works and if C-state transitions happen.
Processor 0 has not reached C3 during tests. This is not a failure, however it
is not a complete and thorough test.
PASSED: Test 1, Processor 1 has reached all C-states: C1 C3 C6 
PASSED: Test 1, Processor 1 has the same number of C-states as processor 0
Processor 2 has not reached C1 C3 during tests. This is not a failure, however
it is not a complete and thorough test.
PASSED: Test 1, Processor 2 has the same number of C-states as processor 0
Processor 3 has not reached C1 C3 during tests. This is not a failure, however
it is not a complete and thorough test.
PASSED: Test 1, Processor 3 has the same number of C-states as processor 0

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csrt: CSRT Core System Resource Table test.
--------------------------------------------------------------------------------
ACPI CSRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cpep: CPEP Corrected Platform Error Polling Table test.
--------------------------------------------------------------------------------
ACPI CPEP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

checksum: ACPI table checksum test.
--------------------------------------------------------------------------------
Test 1 of 1: ACPI table checksum test.
PASSED: Test 1, Table RSDP has correct checksum 0x39.
PASSED: Test 1, Table RSDP has correct extended checksum 0x98.
PASSED: Test 1, Table XSDT has correct checksum 0x63
PASSED: Test 1, Table DSDT has correct checksum 0x87
PASSED: Test 1, Table FACP has correct checksum 0x53
PASSED: Test 1, Table APIC has correct checksum 0x3b
PASSED: Test 1, Table MCFG has correct checksum 0x94
PASSED: Test 1, Table HPET has correct checksum 0x3e
PASSED: Test 1, Table BOOT has correct checksum 0x68
PASSED: Test 1, Table SSDT has correct checksum 0xe4
PASSED: Test 1, Table SSDT has correct checksum 0x20
PASSED: Test 1, Table DMAR has correct checksum 0xd8
PASSED: Test 1, Table SLIC has correct checksum 0x4f
PASSED: Test 1, Table RSDT has correct checksum 0x0b
PASSED: Test 1, Table FACP has correct checksum 0x50

================================================================================
15 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

autobrightness: Automated LCD brightness test.
--------------------------------------------------------------------------------
Test 1 of 2: Test for maximum and actual brightness.

Test 2 of 2: Change actual brightness.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

boot: BOOT Table test.
--------------------------------------------------------------------------------
Test 1 of 1: BOOT Table test.
BOOT Table:
  CMOS Index:               0xf3
  Reserved:                 0x00
  Reserved:                 0x00
  Reserved:                 0x00

CMOS value:             Bit 0x1
  PnP OS                [0] 0x1
  Booting Bit           [1] 0x0
  DIAG Bit              [2] 0x0
  SUPPRESSBOOTDISPLAY   [3] 0x0
  RESERVED            [4-6] 0x0
  PARITY                [7] 0x0
PASSED: Test 1, No issues found in BOOT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bgrt: BGRT Boot Graphics Resource Table test.
--------------------------------------------------------------------------------
ACPI BGRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bert: BERT Boot Error Record Table test.
--------------------------------------------------------------------------------
ACPI BERT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

aspt: ASPT Table test.
--------------------------------------------------------------------------------
ACPI ASPT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

asf: ASF! Alert Standard Format Table test.
--------------------------------------------------------------------------------
ACPI ASF! table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

apicinstance: Test for single instance of APIC/MADT table.
--------------------------------------------------------------------------------
Test 1 of 1: Test for single instance of APIC/MADT table.
Found APIC/MADT table APIC @ cf7fcf18, length 0x204 
PASSED: Test 1, Found 1 APIC/MADT table(s), as expected.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpitables: ACPI table headers sanity tests.
--------------------------------------------------------------------------------
Test 1 of 1: Test ACPI headers.
PASSED: Test 1, Table XSDT has valid signature and ID strings.
PASSED: Test 1, Table DSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.
PASSED: Test 1, Table APIC has valid signature and ID strings.
PASSED: Test 1, Table MCFG has valid signature and ID strings.
PASSED: Test 1, Table HPET has valid signature and ID strings.
PASSED: Test 1, Table BOOT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table DMAR has valid signature and ID strings.
PASSED: Test 1, Table SLIC has valid signature and ID strings.
PASSED: Test 1, Table RSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.

================================================================================
13 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================


579 passed, 176 failed, 7 warnings, 62 aborted, 194 skipped, 10 info only.

Test Failure Summary
================================================================================

Critical failures: NONE

High failures: 59
 klog: HIGH Kernel message: [    0.122557] \_SB_.PCI0:_OSC invalid UUID
 klog: HIGH Kernel message: [   20.429024] ACPI Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with OpRegion 0x0000000000000400-0x000000000000047F (\PMIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   20.429033] ACPI Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   20.429036] ACPI Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)
 klog: HIGH Kernel message: [   20.429039] ACPI Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20150619/utaddress-254)
 msr: SMRR: SMRR_TYPE is 0x4, should be 0x6 (Write-Back).
 syntaxcheck: Assembler error in line 5319
 syntaxcheck: Assembler error in line 5422
 syntaxcheck: Assembler error in line 5461
 syntaxcheck: Assembler error in line 5500
 syntaxcheck: Assembler error in line 5539
 syntaxcheck: Assembler error in line 5578
 syntaxcheck: Assembler error in line 5617
 syntaxcheck: Assembler error in line 5699
 syntaxcheck: Assembler error in line 5736
 syntaxcheck: Assembler error in line 5775
 syntaxcheck: Assembler error in line 5814
 syntaxcheck: Assembler error in line 5853
 syntaxcheck: Assembler error in line 5892
 syntaxcheck: Assembler error in line 5931
 syntaxcheck: Assembler error in line 8170
 syntaxcheck: Assembler error in line 8171
 syntaxcheck: Assembler error in line 8176
 syntaxcheck: Assembler error in line 8177
 syntaxcheck: Assembler error in line 183
 syntaxcheck: Assembler error in line 203
 syntaxcheck: Assembler error in line 204
 syntaxcheck: Assembler error in line 223
 syntaxcheck: Assembler error in line 224
 syntaxcheck: Assembler error in line 243
 syntaxcheck: Assembler error in line 244
 syntaxcheck: Assembler error in line 263
 syntaxcheck: Assembler error in line 264
 syntaxcheck: Assembler error in line 283
 syntaxcheck: Assembler error in line 284
 syntaxcheck: Assembler error in line 303
 syntaxcheck: Assembler error in line 304
 syntaxcheck: Assembler error in line 323
 syntaxcheck: Assembler error in line 324
 syntaxcheck: Assembler error in line 343
 syntaxcheck: Assembler error in line 434
 syntaxcheck: Assembler error in line 445
 syntaxcheck: Assembler error in line 446
 syntaxcheck: Assembler error in line 465
 syntaxcheck: Assembler error in line 466
 syntaxcheck: Assembler error in line 485
 syntaxcheck: Assembler error in line 486
 syntaxcheck: Assembler error in line 505
 syntaxcheck: Assembler error in line 506
 syntaxcheck: Assembler error in line 525
 syntaxcheck: Assembler error in line 526
 syntaxcheck: Assembler error in line 545
 syntaxcheck: Assembler error in line 546
 syntaxcheck: Assembler error in line 565
 syntaxcheck: Assembler error in line 566
 syntaxcheck: Assembler error in line 585
 syntaxcheck: Assembler error in line 586
 syntaxcheck: Assembler error in line 636
 syntaxcheck: Compilation aborted early due to a parser detected syntax error.

Medium failures: 33
 msr: MSR 0x000004c8 A_PMC7 has 3 inconsistent values across 4 CPUs (shift: 0 mask: 0xffffffffffffffff).
 cpufreq: CPU max frequency is unreachable
 cpufreq: Can't set CPU frequencies
 apicedge: Non-Legacy interrupt 0 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 1 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 4 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 8 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 12 is incorrectly level triggered.
 syntaxcheck: Assembler warning in line 181
 syntaxcheck: Assembler warning in line 4245
 syntaxcheck: Assembler warning in line 6894
 syntaxcheck: Assembler warning in line 7767
 syntaxcheck: Assembler warning in line 8077
 syntaxcheck: Assembler warning in line 8079
 syntaxcheck: Assembler warning in line 8083
 syntaxcheck: Assembler warning in line 8085
 syntaxcheck: Assembler warning in line 8089
 syntaxcheck: Assembler warning in line 8300
 syntaxcheck: Assembler warning in line 8302
 syntaxcheck: Assembler warning in line 8304
 syntaxcheck: Assembler warning in line 8467
 syntaxcheck: Assembler warning in line 8469
 syntaxcheck: Assembler warning in line 8471
 syntaxcheck: Assembler warning in line 70
 syntaxcheck: Assembler warning in line 163
 syntaxcheck: Assembler warning in line 229
 syntaxcheck: Assembler warning in line 275
 syntaxcheck: Assembler warning in line 321
 syntaxcheck: Assembler warning in line 367
 syntaxcheck: Assembler warning in line 413
 syntaxcheck: Assembler warning in line 459
 fan: Fan present but has no cur_state present.
 fadt: FIRMWARE_CONTROL is 0xcf7e4e40 and differs from X_FIRMWARE_CONTROL 0xcf7e4d40

Low failures: 58
 klog: LOW Kernel message: [   20.429042] lpc_ich: Resource conflict(s) found affecting gpio_ich
 dmicheck: String index 0x04 in table entry 'Processor Information (Type 4)' @ 0x000f43c8, field 'Serial Number', offset 0x20 has a default value 'Not Specified' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Processor Information (Type 4)' @ 0x000f43c8, field 'Asset Tag', offset 0x21 has a default value 'Not Specified' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x06 in table entry 'Processor Information (Type 4)' @ 0x000f43c8, field 'Part Number', offset 0x22 has a default value 'Not Specified' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Memory Device (Type 17)' @ 0x000f4826, field 'Asset Tag', offset 0x19 has a default value '9876543210' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x03 in table entry 'Memory Device (Type 17)' @ 0x000f488e, field 'Manufacturer', offset 0x17 has a default value '[Empty]' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x04 in table entry 'Memory Device (Type 17)' @ 0x000f488e, field 'Serial Number', offset 0x18 has a default value '[Empty]' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x05 in table entry 'Memory Device (Type 17)' @ 0x000f488e, field 'Asset Tag', offset 0x19 has a default value '9876543210' and probably has not been updated by the BIOS vendor.
 dmicheck: String index 0x06 in table entry 'Memory Device (Type 17)' @ 0x000f488e, field 'Part Number', offset 0x1a has a default value '[Empty]' and probably has not been updated by the BIOS vendor.
 syntaxcheck: Assembler remark in line 98
 syntaxcheck: Assembler remark in line 121
 syntaxcheck: Assembler remark in line 146
 syntaxcheck: Assembler remark in line 155
 syntaxcheck: Assembler remark in line 218
 syntaxcheck: Assembler remark in line 223
 syntaxcheck: Assembler remark in line 2827
 syntaxcheck: Assembler remark in line 4293
 syntaxcheck: Assembler remark in line 4341
 syntaxcheck: Assembler remark in line 4389
 syntaxcheck: Assembler remark in line 4437
 syntaxcheck: Assembler remark in line 4485
 syntaxcheck: Assembler remark in line 4533
 syntaxcheck: Assembler remark in line 4581
 syntaxcheck: Assembler remark in line 4629
 syntaxcheck: Assembler remark in line 6783
 syntaxcheck: Assembler remark in line 6879
 syntaxcheck: Assembler remark in line 6886
 syntaxcheck: Assembler remark in line 7582
 syntaxcheck: Assembler remark in line 7648
 syntaxcheck: Assembler remark in line 7659
 syntaxcheck: Assembler remark in line 7674
 syntaxcheck: Assembler remark in line 7690
 syntaxcheck: Assembler remark in line 7705
 syntaxcheck: Assembler remark in line 7739
 syntaxcheck: Assembler remark in line 7798
 syntaxcheck: Assembler remark in line 7968
 syntaxcheck: Assembler remark in line 7980
 syntaxcheck: Assembler remark in line 8056
 syntaxcheck: Assembler remark in line 8060
 syntaxcheck: Assembler remark in line 8066
 syntaxcheck: Assembler remark in line 8074
 syntaxcheck: Assembler remark in line 8287
 syntaxcheck: Assembler remark in line 8291
 syntaxcheck: Assembler remark in line 8294
 syntaxcheck: Assembler remark in line 8295
 syntaxcheck: Assembler remark in line 8454
 syntaxcheck: Assembler remark in line 8458
 syntaxcheck: Assembler remark in line 8461
 syntaxcheck: Assembler remark in line 8462
 syntaxcheck: Assembler remark in line 8659
 syntaxcheck: Assembler remark in line 8668
 syntaxcheck: Assembler remark in line 8732
 syntaxcheck: Assembler remark in line 80
 syntaxcheck: Assembler remark in line 95
 syntaxcheck: Assembler remark in line 124
 syntaxcheck: Assembler remark in line 202
 syntaxcheck: Assembler remark in line 212
 mcfg: MCFG MMIO config space at 0xf8000000 is not reserved in the memory map table

Other failures: NONE

Test           |Pass |Fail |Abort|Warn |Skip |Info |
---------------+-----+-----+-----+-----+-----+-----+
acpiinfo       |     |     |     |     |     |    3|
acpitables     |   13|     |     |     |     |     |
apicedge       |     |    5|     |     |     |     |
apicinstance   |    1|     |     |     |     |     |
asf            |     |     |     |     |    1|     |
aspm           |    2|     |     |    2|     |     |
aspt           |     |     |     |     |    1|     |
autobrightness |     |     |     |     |     |     |
bert           |     |     |     |     |    1|     |
bgrt           |     |     |     |     |    1|     |
bios32         |    4|     |     |     |     |     |
bios_info      |     |     |     |     |     |    1|
boot           |    1|     |     |     |     |     |
checksum       |   15|     |     |     |     |     |
cpep           |     |     |     |     |    1|     |
cpufreq        |    3|    2|     |    4|    2|     |
crs            |    1|     |     |     |     |     |
csm            |     |     |     |     |     |    1|
csrt           |     |     |     |     |    1|     |
cstates        |    4|     |     |     |     |     |
dbg2           |     |     |     |     |    1|     |
dbgp           |     |     |     |     |    1|     |
dmar           |    2|     |     |     |     |     |
dmicheck       |   75|    8|     |     |    1|     |
ebda           |    1|     |     |     |     |     |
ecdt           |     |     |     |     |    1|     |
erst           |     |     |     |     |    1|     |
facs           |    1|     |     |     |     |     |
fadt           |    3|    1|     |     |     |     |
fan            |    4|    1|     |     |     |     |
fpdt           |     |     |     |     |    1|     |
gtdt           |     |     |     |     |    1|     |
hda_audio      |    5|     |     |     |     |     |
hest           |     |     |     |     |    1|     |
hpet           |    5|     |     |     |     |     |
iort           |     |     |     |     |    1|     |
klog           |     |    6|     |     |     |     |
lpit           |     |     |     |     |    1|     |
madt           |    1|     |     |     |     |     |
maxfreq        |    1|     |     |     |     |     |
maxreadreq     |    1|     |     |     |     |     |
mcfg           |    1|    1|     |     |     |     |
mchi           |     |     |     |     |    1|     |
method         |  292|     |     |     |  162|     |
microcode      |     |     |     |     |    1|     |
mpcheck        |    9|     |     |     |     |     |
msdm           |     |     |     |     |    1|     |
msr            |  111|    2|     |     |     |     |
mtrr           |    2|     |     |     |    1|     |
nx             |    3|     |     |     |     |     |
oops           |    2|     |     |     |     |     |
osilinux       |     |     |     |    1|     |     |
pcc            |     |     |     |     |     |    1|
pciirq         |    4|     |     |     |     |     |
pnp            |    3|     |     |     |     |     |
rsdp           |    1|     |     |     |     |     |
rsdt           |    1|     |     |     |     |     |
sbst           |     |     |     |     |    1|     |
securebootcert |     |     |     |     |    1|     |
slic           |    1|     |     |     |     |     |
slit           |     |     |     |     |    1|     |
spcr           |     |     |     |     |    1|     |
spmi           |     |     |     |     |    1|     |
srat           |     |     |     |     |    1|     |
stao           |     |     |     |     |    1|     |
syntaxcheck    |     |  150|     |     |     |     |
tcpa           |     |     |    1|     |     |     |
tpm2           |     |     |    1|     |     |     |
uefi           |     |     |     |     |    1|     |
uefibootpath   |     |     |    1|     |     |     |
uefirtauthvar  |     |     |   12|     |     |     |
uefirtmisc     |     |     |    3|     |     |     |
uefirttime     |     |     |   35|     |     |     |
uefirtvariable |     |     |    8|     |     |     |
version        |     |     |     |     |     |    4|
virt           |    1|     |     |     |     |     |
waet           |     |     |     |     |    1|     |
wakealarm      |    4|     |     |     |     |     |
wdat           |     |     |     |     |    1|     |
wmi            |     |     |     |     |     |     |
xenv           |     |     |    1|     |     |     |
xsdt           |    1|     |     |     |     |     |
---------------+-----+-----+-----+-----+-----+-----+
Total:         |  579|  176|   62|    7|  194|   10|
---------------+-----+-----+-----+-----+-----+-----+
