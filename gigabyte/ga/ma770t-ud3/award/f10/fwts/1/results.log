Results generated by fwts: Version V16.01.00 (2016-01-13 08:23:12).

Some of this work - Copyright (c) 1999 - 2016, Intel Corp. All rights reserved.
Some of this work - Copyright (c) 2010 - 2016, Canonical.

This test run on 08/02/16 at 16:03:50 on host Linux fwts-live 4.2.0-18-generic
#22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC 2015 x86_64.

Command: "fwts --force-clean --skip-test=s3 --batch --uefitests
--show-progress-dialog --log-type plaintext".
Running tests: version bios_info oops klog mtrr acpiinfo uefirtauthvar
uefibootpath securebootcert uefirtmisc uefirtvariable uefirttime csm maxreadreq
crs aspm dmicheck microcode msr nx cpufreq maxfreq virt pnp pciirq mpcheck
hda_audio ebda bios32 apicedge xenv xsdt wmi wdat wakealarm waet uefi tpm2 tcpa
syntaxcheck stao srat spmi spcr slit slic sbst rsdt rsdp pcc osilinux method
msdm mchi mcfg madt lpit iort hpet hest gtdt fpdt fan fadt facs erst ecdt dmar
dbg2 dbgp cstates csrt cpep checksum autobrightness boot bgrt bert aspt asf
apicinstance acpitables.

version: Gather kernel system information.
--------------------------------------------------------------------------------
Test 1 of 4: Gather kernel signature.
Signature: Ubuntu 4.2.0-18.22~14.04.1-generic 4.2.3

Test 2 of 4: Gather kernel system information.
Kernel Version: Linux version 4.2.0-18-generic (buildd@lgw01-55) (gcc version
4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #22~14.04.1-Ubuntu SMP Fri Nov 6 22:20:11 UTC
2015

Test 3 of 4: Gather kernel boot command line.
Kernel boot command line: initrd=/casper/initrd.lz boot=casper config
ip=frommedia persistent noprompt splash quiet FWTS_AUTO_SHUTDOWN=1
username=ubuntu hostname=fwts-live quiet BOOT_IMAGE=/casper/vmlinuz

Test 4 of 4: Gather ACPI driver version.
ACPI Version: 20150619

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 4 info only.
================================================================================

bios_info: Gather BIOS DMI information.
--------------------------------------------------------------------------------
Test 1 of 1: Gather BIOS DMI information
BIOS Vendor       : Award Software International, Inc.
BIOS Version      : F10
BIOS Release Date : 03/22/2011
Board Name        : GA-MA770T-UD3
Board Serial #    : 
Board Version     : x.x
Board Asset Tag   : 
Chassis Serial #  : 
Chassis Type      : 3
Chassis Vendor    : Gigabyte Technology Co., Ltd.
Chassis Version   : 
Chassic Asset Tag : 
Product Name      : GA-MA770T-UD3
Product Serial #  : 
Product UUID      : 36434630-3439-3033-3432-4231FFFFFFFF
Product Version   : 
System Vendor     : Gigabyte Technology Co., Ltd.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

oops: Scan kernel log for Oopses.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log oops check.
PASSED: Test 1, Found no oopses in kernel log.
PASSED: Test 1, Found no WARN_ON warnings in kernel log.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

klog: Scan kernel log for errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Kernel log error check.
Kernel message: [ 0.637507] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep
State [\_S2_] (20150619/hwxface-580)

ADVICE: The exception comes from kernel cannot find _S2 namespace object that
contains the register values for the sleep state when kernel would like to setup
all the sleep state information. This means that the kernel does not know how to
enter the S2 sleep state, however, it should not be a problem if the S2 sleep
state isn't supported intentionally.

FAILED [HIGH] KlogAcpiSleepStateEvalFailed: Test 1, HIGH Kernel message: [
0.637511] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep State [\_S3_]
(20150619/hwxface-580)

ADVICE: Failed to evaluate _Sx namespace object that contains the register
values for the sleep state.

FAILED [HIGH] KlogAcpiFirmwareError: Test 1, HIGH Kernel message: [ 0.641048]
pci 0000:00:00.0: [Firmware Bug]: reg 0x1c: invalid BAR (can't size)

ADVICE: The kernel has detected a Firmware bug in the BIOS or ACPI which needs
investigating and fixing.

FAILED [HIGH] KlogAcpiBadAmlCode: Test 1, HIGH Kernel message: [ 26.429974] ACPI
Warning: SystemIO range 0x0000000000000B00-0x0000000000000B07 conflicts with
OpRegion 0x0000000000000B00-0x0000000000000B0F (\SOR1) (20150619/utaddress-254)

ADVICE: ACPI AML intepreter has found some non-conforming AML code. This should
be investigated and fixed.

Found 3 unique errors in kernel log.

================================================================================
0 passed, 3 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mtrr: MTRR tests.
--------------------------------------------------------------------------------
MTRR overview
-------------
Reg 0: 0x0000000000000000 - 0x0000000080000000 (  2048 MB)   Write-Back
Reg 1: 0x0000000080000000 - 0x00000000c0000000 (  1024 MB)   Write-Back
Reg 2: 0x00000000c0000000 - 0x00000000d0000000 (   256 MB)   Write-Back
Reg 3: 0x00000000cfe00000 - 0x00000000d0000000 (     2 MB)   Uncached

Test 1 of 3: Validate the kernel MTRR IOMEM setup.
FAILED [MEDIUM] MTRRIncorrectAttr: Test 1, Memory range 0x100000000 to
0x22fffffff (System RAM) has incorrect attribute Default (Most probably
Uncached).
FAILED [MEDIUM] MTRRLackingAttr: Test 1, Memory range 0x100000000 to 0x22fffffff
(System RAM) is lacking attribute Write-Back.

Test 2 of 3: Validate the MTRR setup across all processors.
PASSED: Test 2, All processors have the a consistent MTRR setup.

Test 3 of 3: Test for AMD MtrrFixDramModEn being cleared by the BIOS.
PASSED: Test 3, No MtrrFixDramModEn error detected.

================================================================================
2 passed, 2 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpiinfo: General ACPI information test.
--------------------------------------------------------------------------------
Test 1 of 3: Determine Kernel ACPI version.
Kernel ACPICA driver version: 20150619, supports ACPI 5.0

Test 2 of 3: Determine machine's ACPI version.
FACP ACPI Version: 1.0 

Test 3 of 3: Determine AML compiler.
Determine the compiler used to generate the ACPI AML in the DSDT and SSDT.
Table DSDT, OEM GBT , created with MSFT (Microsoft) compiler.
Table SSDT0, OEM PTLTD , created with LTP (Unknown ( LTP)) compiler.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 3 info only.
================================================================================

uefirtauthvar: Authenticated variable tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 12 aborted, 0 skipped, 0 info only.
================================================================================

uefibootpath: Sanity check for UEFI Boot Path Boot####.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

securebootcert: UEFI secure boot test.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefirtmisc: UEFI miscellaneous runtime service interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 3 aborted, 0 skipped, 0 info only.
================================================================================

uefirtvariable: UEFI Runtime service variable interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 8 aborted, 0 skipped, 0 info only.
================================================================================

uefirttime: UEFI Runtime service time interface tests.
--------------------------------------------------------------------------------
Cannot detect any UEFI firmware. Aborted.
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 35 aborted, 0 skipped, 0 info only.
================================================================================

csm: UEFI Compatibility Support Module test.
--------------------------------------------------------------------------------
Test 1 of 1: UEFI Compatibility Support Module test.
Checking for UEFI Compatibility Support Module (CSM)
Int 10h jumps to 0xc0412 in option ROM at: 0xc0000..0xd0000
No CSM: Legacy BIOS firmware has video option ROM with Int 10h support.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

maxreadreq: Test firmware has set PCI Express MaxReadReq to a higher value on
non-motherboard devices.
--------------------------------------------------------------------------------
Test 1 of 1: Test firmware settings MaxReadReq for PCI Express devices.
PASSED: Test 1, All devices have MaxReadReq set > 128.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

crs: Test PCI host bridge configuration using _CRS.
--------------------------------------------------------------------------------
Test 1 of 1: Test PCI host bridge configuration using _CRS.
PASSED: Test 1, The kernel has detected a BIOS newer than the end of 2007 (3/22
/2011) and has assumed that your BIOS can correctly specify the host bridge MMIO
aperture using _CRS. If this does not work correctly you can override this by
booting with "pci=nocrs".

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

aspm: PCIe ASPM test.
--------------------------------------------------------------------------------
Test 1 of 2: PCIe ASPM ACPI test.
PCIe ASPM is controlled by Linux kernel.

Test 2 of 2: PCIe ASPM registers test.
WARNING: Test 2, RP 00h:02h.00h L0s not enabled.
WARNING: Test 2, RP 00h:02h.00h L1 not enabled.
WARNING: Test 2, Device 01h:00h.00h L0s not enabled.
WARNING: Test 2, Device 01h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.
PASSED: Test 2, PCIe ASPM setting matched was matched.
WARNING: Test 2, RP 00h:0Ah.00h L0s not enabled.
WARNING: Test 2, RP 00h:0Ah.00h L1 not enabled.
WARNING: Test 2, Device 02h:00h.00h L0s not enabled.
WARNING: Test 2, Device 02h:00h.00h L1 not enabled.

ADVICE: The ASPM L0s low power Link state is optimized for short entry and exit
latencies, while providing substantial power savings. Disabling L0s of a PCIe
device may increases power consumption, and will impact the battery life of a
mobile system.


ADVICE: The ASPM L1 low power Link state is optimized for maximum power savings
with longer entry and exit latencies. Disabling L1 of a PCIe device may
increases power consumption, and will impact the battery life of a mobile system
significantly.

PASSED: Test 2, PCIe ASPM setting matched was matched.

================================================================================
3 passed, 0 failed, 8 warnings, 0 aborted, 0 skipped, 0 info only.
================================================================================

dmicheck: DMI/SMBIOS table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Find and test SMBIOS Table Entry Points.
This test tries to find and sanity check the SMBIOS data structures.
PASSED: Test 1, Found SMBIOS Table Entry Point at 0xf10e0
SMBIOS Entry Point Structure:
  Anchor String          : _SM_
  Checksum               : 0x89
  Entry Point Length     : 0x1f
  Major Version          : 0x02
  Minor Version          : 0x04
  Maximum Struct Size    : 0xf4
  Entry Point Revision   : 0x00
  Formatted Area         : 0x00 0x00 0x00 0x00 0x00
  Intermediate Anchor    : _DMI_
  Intermediate Checksum  : 0xef
  Structure Table Length : 0x0b03
  Structure Table Address: 0x000f0100
  # of SMBIOS Structures : 0x0037
  SBMIOS BCD Revision    : 24

PASSED: Test 1, SMBIOS Table Entry Point Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Point Length is valid.
PASSED: Test 1, SMBIOS Table Entry Intermediate Anchor String _DMI_ is valid.
PASSED: Test 1, SMBIOS Table Entry Point Intermediate Checksum is valid.
PASSED: Test 1, SMBIOS Table Entry Structure Table Address and Length looks
valid.

Test 2 of 3: Test DMI/SMBIOS tables for errors.
PASSED: Test 2, Entry @ 0x000f0100 'BIOS Information (Type 0)'
PASSED: Test 2, Entry @ 0x000f014b 'System Information (Type 1)'
PASSED: Test 2, Entry @ 0x000f019b 'Base Board Information (Type 2)'
PASSED: Test 2, Entry @ 0x000f01d6 'Chassis Information (Type 3)'
PASSED: Test 2, Entry @ 0x000f020c 'Processor Information (Type 4)'
PASSED: Test 2, Entry @ 0x000f0267 'Memory Controller Information (Type 5)'
PASSED: Test 2, Entry @ 0x000f0282 'Memory Module Information (Type 6)'
PASSED: Test 2, Entry @ 0x000f0292 'Memory Module Information (Type 6)'
PASSED: Test 2, Entry @ 0x000f02a2 'Memory Module Information (Type 6)'
PASSED: Test 2, Entry @ 0x000f02b2 'Memory Module Information (Type 6)'
PASSED: Test 2, Entry @ 0x000f02c2 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f02e5 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f0308 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f032b 'Cache Information (Type 7)'
PASSED: Test 2, Entry @ 0x000f034e 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f0366 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f0376 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f0387 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f0398 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f03a9 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f03be 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f03df 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f03ef 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f03ff 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f040f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f041f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f042f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f043f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f044f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f045f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f046f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f047f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f048f 'Port Connector Information (Type 8)'
PASSED: Test 2, Entry @ 0x000f049f 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f04b1 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f04c3 'System Slot Information (Type 9)'
PASSED: Test 2, Entry @ 0x000f04e1 'BIOS Language Information (Type 13)'
PASSED: Test 2, Entry @ 0x000f0532 'Physical Memory Array (Type 16)'
PASSED: Test 2, Entry @ 0x000f0544 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000f0573 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000f05a2 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000f05d1 'Memory Device (Type 17)'
PASSED: Test 2, Entry @ 0x000f0600 'Memory Array Mapped Address (Type 19)'
PASSED: Test 2, Entry @ 0x000f0612 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000f0628 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000f063e 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000f0654 'Memory Device Mapped Address (Type 20)'
PASSED: Test 2, Entry @ 0x000f066a 'System Boot Information (Type 32)'
PASSED: Test 2, Entry @ 0x000f0678 'Unknown (Type 188)'
PASSED: Test 2, Entry @ 0x000f074e 'Unknown (Type 190)'
PASSED: Test 2, Entry @ 0x000f0824 'Unknown (Type 192)'
PASSED: Test 2, Entry @ 0x000f091a 'Unknown (Type 194)'
PASSED: Test 2, Entry @ 0x000f0a10 'Unknown (Type 196)'
PASSED: Test 2, Entry @ 0x000f0b06 'Unknown (Type 198)'
PASSED: Test 2, Entry @ 0x000f0bfc 'End of Table (Type 127)'

Test 3 of 3: Test DMI/SMBIOS3 tables for errors.
SKIPPED: Test 3, Cannot find SMBIOS30 table entry, skip the test.

================================================================================
61 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

microcode: Test if system is using latest microcode.
--------------------------------------------------------------------------------
The microcode test currently only supports Intel processors.
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

msr: MSR register tests.
--------------------------------------------------------------------------------
Test 1 of 5: Test CPU generic MSRs.
PASSED: Test 1, MSR 0x000000fe MTRRCAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000174 SYSENTER_CS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000175 SYSENTER_ESP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000176 SYSENTER_EIP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000179 MCG_CAP is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000017a MCG_STATUS is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000017b MCG_CTL is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000200 MTRR_PHYSBASE0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000201 MTRR_PHYSMASK0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000202 MTRR_PHYSBASE1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000203 MTRR_PHYSMASK1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000204 MTRR_PHYSBASE2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000205 MTRR_PHYSMASK2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000206 MTRR_PHYSBASE3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000207 MTRR_PHYSMASK3 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000208 MTRR_PHYSBASE4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000209 MTRR_PHYSMASK4 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020a MTRR_PHYSBASE5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020b MTRR_PHYSMASK5 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020c MTRR_PHYSBASE6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020d MTRR_PHYSMASK6 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020e MTRR_PHYSBASE7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000020f MTRR_PHYSMASK7 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000250 MTRR_FIX64K_000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000258 MTRR_FIX16K_800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000259 MTRR_FIX16K_a00 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000268 MTRR_FIX4K_C000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000269 MTRR_FIX4K_C800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026a MTRR_FIX4K_D000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026b MTRR_FIX4K_D800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026c MTRR_FIX4K_E000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026d MTRR_FIX4K_E800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026e MTRR_FIX4K_F000 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x0000026f MTRR_FIX4K_F800 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x00000277 PAT is consistent across 4 CPUs.
PASSED: Test 1, MSR 0x000002ff MTRR_DEF_TYPE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000080 EFER is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000081 STAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000082 LSTAR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000084 FMASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0000102 KERNEL_GS_BASE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010010 SYSCFG is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010016 IORRBase0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010017 IORRMask0 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010018 IORRBase1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010019 IORRMask1 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc001001a TOP_MEM is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc001001d TOP_MEM2 is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010030 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010031 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010032 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010033 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010034 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010035 Processor_Name_String is consistent across 4
CPUs.
PASSED: Test 1, MSR 0xc0010112 SMM_ADDR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010113 SMM_MASK is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010114 VM_CR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010115 IGNNE is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010117 VM_HSAVE_PA is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010118 SVM_KEY_MSR is consistent across 4 CPUs.
PASSED: Test 1, MSR 0xc0010140 OSVW_ID_Length is consistent across 4 CPUs.

Test 2 of 5: Test CPU specific model MSRs.
SKIPPED: Test 2, Non-Intel CPU, test skipped.

Test 3 of 5: Test all P State Ratios.
SKIPPED: Test 3, Non-Intel CPU, test skipped.

Test 4 of 5: Test C1 and C3 autodemotion.
SKIPPED: Test 4, Non-Intel CPU, test skipped.

Test 5 of 5: Test SMRR MSR registers.
SKIPPED: Test 5, Non-Intel CPU, test skipped.

================================================================================
61 passed, 0 failed, 0 warning, 0 aborted, 4 skipped, 0 info only.
================================================================================

nx: Test if CPU NX is disabled by the BIOS.
--------------------------------------------------------------------------------
Test 1 of 3: Test CPU NX capability.
PASSED: Test 1, CPU has NX flags, BIOS is not disabling it.

Test 2 of 3: Test all CPUs have same BIOS set NX flag.
This test verifies that all CPUs have the same NX flag setting. Although rare,
BIOS may set the NX flag differently per CPU. 
PASSED: Test 2, All 4 CPUs have the same NX flag set.

Test 3 of 3: Test all CPUs have same msr setting in MSR 0x1a0.
This test verifies that all CPUs have the same NX flag setting by examining the
per CPU MSR register 0x1a0.
Non-Intel CPU, skipping test.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

cpufreq: CPU frequency scaling tests.
--------------------------------------------------------------------------------
Test 1 of 7: CPU frequency table consistency
PASSED: Test 1, CPU frequency tables are consistent

Test 2 of 7: CPU frequency table duplicates
PASSED: Test 2, No duplicates in CPU frequency table

Test 3 of 7: CPU frequency firmware limits
PASSED: Test 3, CPU BIOS limit OK

Test 4 of 7: CPU frequency claimed maximum
PASSED: Test 4, CPU max frequencies OK

Test 5 of 7: CPU frequency SW_ANY control
PASSED: Test 5, P-state coordination under hardware control.

Test 6 of 7: CPU frequency SW_ALL control
PASSED: Test 6, Firmware SW_ALL OK

Test 7 of 7: CPU frequency performance tests.
CPU 0: 4 CPU frequency steps supported.
 Frequency | Relative Speed |  Cycles    | Bogo loops
-----------+----------------+------------+-----------
800.000 MHz |      25.0 %    |  803642026 |     33797
 2.100 GHz |      65.6 %    | 2108666614 |     88759
 2.500 GHz |      78.1 %    | 2510973540 |    105661
 3.200 GHz |     100.0 %    | 3213878169 |    135205

CPU 0 performance scaling OK
CPU 1: 4 CPU frequency steps supported.
 Frequency | Relative Speed |  Cycles    | Bogo loops
-----------+----------------+------------+-----------
800.000 MHz |      25.0 %    |  803644796 |     33833
 2.100 GHz |      65.6 %    | 2108909992 |     88768
 2.500 GHz |      78.1 %    | 2510973068 |    105613
 3.200 GHz |     100.0 %    | 3213867100 |    135200

CPU 1 performance scaling OK
CPU 2: 4 CPU frequency steps supported.
 Frequency | Relative Speed |  Cycles    | Bogo loops
-----------+----------------+------------+-----------
800.000 MHz |      25.0 %    |  803646109 |     33819
 2.100 GHz |      65.6 %    | 2108949488 |     88804
 2.500 GHz |      78.1 %    | 2510977704 |    105666
 3.200 GHz |     100.0 %    | 3213861138 |    135197

CPU 2 performance scaling OK
CPU 3: 4 CPU frequency steps supported.
 Frequency | Relative Speed |  Cycles    | Bogo loops
-----------+----------------+------------+-----------
800.000 MHz |      25.0 %    |  803646459 |     33830
 2.100 GHz |      65.6 %    | 2108891492 |     88752
 2.500 GHz |      78.1 %    | 2510981360 |    105641
 3.200 GHz |     100.0 %    | 3213855494 |    135165

CPU 3 performance scaling OK
PASSED: Test 7, CPU performance scaling OK

================================================================================
7 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

maxfreq: Test max CPU frequencies against max scaling frequency.
--------------------------------------------------------------------------------
Test 1 of 1: Maximum CPU frequency test.
This test checks the maximum CPU frequency as detected by the kernel for each
CPU against maxiumum frequency as specified by the BIOS frequency scaling
settings.
SKIPPED: Test 1, Cannot read CPU frequencies from /proc/cpuinfo, this generally
happens on AMD CPUs, skipping test.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

virt: CPU Virtualisation Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: CPU Virtualisation Configuration test.
Check SVM Virtualization extensions are set up correctly.
PASSED: Test 1, Virtualization extensions supported and enabled by BIOS.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pnp: BIOS Support Installation structure test.
--------------------------------------------------------------------------------
Test 1 of 1: PnP BIOS Support Installation structure test.
This test tries to find and sanity check the Plug and Play BIOS Support
Installation Check structure. 

Found PnP Installation Check structure at 0x000fc130
  Signature                          : $PnP
  Version                            : 0x10 (1.0)
  Length                             : 0x0021 bytes
  Control Field                      : 0x0000 (Not supported)
  Event Notification Flag Address    : 0x000f0000
  Real Mode 16 bit Code Address      : 0xf000:c188
  Real Mode 16 bit Data Address      : 0xf000:0000
  16 bit Protected Mode Code Address : 0x000fc160
  16 bit Protected Mode Data Address : 0x000f0000
  OEM Device Identifier              : 0x00000000 (undefined)

PASSED: Test 1, Version 1.0 detected.
PASSED: Test 1, PnP Installation Check structure is the correct length of 33
bytes.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pciirq: PCI IRQ Routing Table test.
--------------------------------------------------------------------------------
Test 1 of 1: PCI IRQ Routing Table test.
This test tries to find and sanity check the PCI IRQ Routing Table, as defined
by http://www.microsoft.com/taiwan/whdc/archive/pciirq.mspx and described in
pages 233-238 of PCI System Architecture, Fourth Edition, Mindshare, Inc.
(1999). NOTE: The PCI IRQ Routing Table only really knows about ISA IRQs and is
generally not used with APIC. 

Could not find PCI IRQ Routing Table. Since this table is for legacy BIOS
systems which don't have ACPI support this is generally not a problem.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

mpcheck: MultiProcessor Tables tests.
--------------------------------------------------------------------------------
The kernel is using the ACPI MADT for SMP configuration information, so the
Multiprocessor Tables are not used by the kernel. Any errors in the tables will
not affect the operation of Linux unless it is booted with ACPI disabled.

NOTE: Since ACPI is being used in preference to the Multiprocessor Tables, any
errors found in the mpcheck tests will be tagged as LOW errors.

Test 1 of 9: Test MP header.
PASSED: Test 1, MP header looks sane.

Test 2 of 9: Test MP CPU entries.
PASSED: Test 2, All 4 CPU entries look sane.

Test 3 of 9: Test MP Bus entries.
PASSED: Test 3, All 5 Bus Entries looked sane.

Test 4 of 9: Test MP IO APIC entries.
PASSED: Test 4, All 1 IO APIC Entries look sane.

Test 5 of 9: Test MP IO Interrupt entries.
PASSED: Test 5, All 26 IO Interrupt Entries look sane.

Test 6 of 9: Test MP Local Interrupt entries.
PASSED: Test 6, All 2 Local Interrupt Entries look sane.

Test 7 of 9: Test MP System Address entries.
PASSED: Test 7, All 0 System Address Space Mapping Entries looks sane.

Test 8 of 9: Test MP Bus Hierarchy entries.
PASSED: Test 8, All 0 Bus Hierarchy Entries look sane.

Test 9 of 9: Test MP Compatible Bus Address Space entries.
PASSED: Test 9, All 0 Compatible Bus Address Space Entries look sane.

================================================================================
9 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hda_audio: HDA Audio Pin Configuration test.
--------------------------------------------------------------------------------
Test 1 of 1: HDA Audio Pin Configuration test.
Checking 'hwC1D0':
Vendor Name    : Realtek
Vendor ID      : 0x10ec0888
Subsystem ID   : 0x1458a002
Revision ID    : 0x100001
BIOS pin configurations:
  Pin  Setting
  0x0014 0x01014410
  0x0015 0x01011412
  0x0016 0x01016411
  0x0017 0x01012414
  0x0018 0x01a19c40
  0x0019 0x02a19c50
  0x001a 0x0181344f
  0x001b 0x02214c20
  0x001c 0x593301f0
  0x001d 0x4005e601
  0x001e 0x014b6130
  0x001f 0x01cb7160
Driver defined pin configurations:
  Pin  Setting
  0x001b 0x02214120
  0x001c 0x993301f0
BIOS pin configurations required software override to make HDA audio work
correctly.
The driver or user provided overrides should be corrected in BIOS firmware.

Checking 'hwC2D0':
Vendor Name    : ATI
Vendor ID      : 0x1002aa01
Subsystem ID   : 0xaa0100
Revision ID    : 0x100200
BIOS pin configurations:
  Pin  Setting
  0x0003 0x18560010
PASSED: Test 1, Default BIOS pin configurations did not have software override.


================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

ebda: Test EBDA region is mapped and reserved in memory map table.
--------------------------------------------------------------------------------
Test 1 of 1: Test EBDA is reserved in E820 table.
The Extended BIOS Data Area (EBDA) is normally located at the end of the low
640K region and is typically 2-4K in size. It should be reserved in the Int 15
AX=E820 BIOS memory map table.
PASSED: Test 1, EBDA region mapped at 0x9f800 and reserved as a 1K region in the
Int 15 AX=E820 BIOS memory map table at 0x9f800..0x9ffff.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

bios32: BIOS32 Service Directory test.
--------------------------------------------------------------------------------
Test 1 of 1: BIOS32 Service Directory test.
This test tries to find and sanity check the BIOS32 Service Directory as defined
in the Standard BIOS 32-bit Service Directory Proposal, Revision 0.4 May 24,
1993, Phoenix Technologies Ltd and also the PCI BIOS specification.
Found BIOS32 Service Directory at 0x000fb110
  Signature  : _32_
  Entry Point: 0x000fb870
  Revsion    : 0x00
  Length     : 0x01
  Checksum   : 0xa5

PASSED: Test 1, Service Directory Entry Point 0x000fb870 is not in high memory.
PASSED: Test 1, Service Directory Length is 1 (1 x 16 bytes) as expected.
PASSED: Test 1, Service Directory Revision is 0x00 and is supported by the
kernel.
PASSED: Test 1, Service Directory checksum passed.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

apicedge: APIC edge/level test.
--------------------------------------------------------------------------------
Test 1 of 1: Legacy and PCI Interrupt Edge/Level trigger tests.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 0 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 1 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 8 is
incorrectly level triggered.
FAILED [MEDIUM] NonLegacyIRQLevelTrig: Test 1, Non-Legacy interrupt 14 is
incorrectly level triggered.

================================================================================
0 passed, 4 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

xenv: XENV Xen Environment Table tests.
--------------------------------------------------------------------------------
ACPI XENV table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

xsdt: XSDT Extended System Description Table test.
--------------------------------------------------------------------------------
ACPI XSDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wmi: Extract and analyse Windows Management Instrumentation (WMI).
--------------------------------------------------------------------------------
Test 1 of 1: Windows Management Instrumentation test.

\AOD_._WDG (1 of 2)
  GUID: ABBC0F6A-8EA1-11D1-00A0-C90629100000
  WMI Method:
    Flags          : 0x02 (Method)
    Object ID      : AA
    Instance       : 0x01
PASSED: Test 1, ABBC0F6A-8EA1-11D1-00A0-C90629100000 has associated method
\AOD_.WMAA

\AOD_._WDG (2 of 2)
  GUID: 05901221-D566-11D1-B2F0-00A0C9062910
  WMI Object:
    Flags          : 0x00 (None)
    Object ID      : BA
    Instance       : 0x01

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

wdat: WDAT Microsoft Hardware Watchdog Action Table test.
--------------------------------------------------------------------------------
ACPI WDAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

wakealarm: ACPI Wakealarm tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test existence of RTC with alarm interface.
PASSED: Test 1, RTC with a RTC alarm ioctl() interface found.

Test 2 of 4: Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 1 seconds in the future.
PASSED: Test 2, RTC wakealarm was triggered successfully.

Test 3 of 4: Test if wakealarm is fired.
PASSED: Test 3, RTC wakealarm triggered and fired successfully.

Test 4 of 4: Multiple wakealarm firing tests.
Trigger wakealarm for 1 seconds in the future.
Trigger wakealarm for 2 seconds in the future.
Trigger wakealarm for 3 seconds in the future.
Trigger wakealarm for 4 seconds in the future.
PASSED: Test 4, RTC wakealarm triggered and fired successfully.

================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

waet: WAET Windows ACPI Emulated Devices Table test.
--------------------------------------------------------------------------------
ACPI WAET table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

uefi: UEFI Data Table test.
--------------------------------------------------------------------------------
ACPI UEFI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

tpm2: TPM2 Trusted Platform Module 2 test.
--------------------------------------------------------------------------------
ACPI TPM2 table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

tcpa: TCPA Trusted Computing Platform Alliance Capabilities Table test.
--------------------------------------------------------------------------------
ACPI TCPA table does not exist, skipping test
Aborted test, initialisation failed.
================================================================================
0 passed, 0 failed, 0 warning, 1 aborted, 0 skipped, 0 info only.
================================================================================

syntaxcheck: Re-assemble DSDT and SSDTs to find syntax errors and warnings.
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble and reassemble DSDT and SSDTs.

Checking ACPI table DSDT (#0)

FAILED [MEDIUM] AMLAsmASL_MSG_DUPLICATE_ITEM: Test 1, Assembler warning in line
314
Line | AML source
--------------------------------------------------------------------------------
00311|             Store (One, RSTU) /* \RSTU */
00312|         }
00313| 
00314|         Store (\PEWS, \PEWS)
     |                          ^
     | Warning 3023: Duplicate value in list    (Source is the same as Target)
00315|     }
00316| 
00317|     Method (TRMD, 1, NotSerialized)
================================================================================

ADVICE: (for Warning #3023, ASL_MSG_DUPLICATE_ITEM): An initializer list has
duplicate items, which is illegal.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 773
Line | AML source
--------------------------------------------------------------------------------
00770|             {
00771|             }
00772| 
00773|             Method (BM05, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
00774|             {
00775|             }
00776| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 777
Line | AML source
--------------------------------------------------------------------------------
00774|             {
00775|             }
00776| 
00777|             Method (EM05, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
00778|             {
00779|             }
00780| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 785
Line | AML source
--------------------------------------------------------------------------------
00782|             {
00783|             }
00784| 
00785|             Method (HM07, 1, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg0)
00786|             {
00787|             }
00788| 
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
798
Line | AML source
--------------------------------------------------------------------------------
00795|                 Return (0x00)
00796|             }
00797| 
00798|             Method (WROW, 4, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00799|             {
00800|                 Name (IFPK, Package (0x06)
00801|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
832
Line | AML source
--------------------------------------------------------------------------------
00829|                 }
00830|             }
00831| 
00832|             Method (GROW, 4, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00833|             {
00834|                 Name (IFPK, Package (0x06)
00835|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
867
Line | AML source
--------------------------------------------------------------------------------
00864|                 Store (DerefOf (Index (IFPK, 0x05)), BUF5) /* \AOD_.GROW.BUF5 */
00865|             }
00866| 
00867|             Method (CPTB, 2, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00868|             {
00869|                 Name (LOID, 0x00)
00870|                 CreateDWordField (Arg1, 0x00, BUF0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
901
Line | AML source
--------------------------------------------------------------------------------
00898|                 Return (0x00)
00899|             }
00900| 
00901|             Method (CBTP, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00902|             {
00903|                 Name (LOID, 0x00)
00904|                 CreateDWordField (Arg0, 0x00, BUF0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
957
Line | AML source
--------------------------------------------------------------------------------
00954|                 P73,    8
00955|             }
00956| 
00957|             Method (BSF, 1, NotSerialized)
     |                      ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00958|             {
00959|                 Name (BIT0, 0x01)
00960|                 Store (0x08, Local1)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
976
Line | AML source
--------------------------------------------------------------------------------
00973|                 Return (Subtract (0x08, Local1))
00974|             }
00975| 
00976|             Method (GCMS, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00977|             {
00978|                 Name (ADDR, 0x00)
00979|                 Name (MASK, 0x00)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
994
Line | AML source
--------------------------------------------------------------------------------
00991|                 Return (TEMP) /* \AOD_.GCMS.TEMP */
00992|             }
00993| 
00994|             Method (SCMS, 2, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
00995|             {
00996|                 Name (ADDR, 0x00)
00997|                 Name (MASK, 0x00)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1193
Line | AML source
--------------------------------------------------------------------------------
01190|                 }
01191|             }
01192| 
01193|             Method (CCLK, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01194|             {
01195|                 Name (VCOV, 0x00)
01196|                 Name (VCOD, 0x00)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 1286
Line | AML source
--------------------------------------------------------------------------------
01283|                 Return (0x04)
01284|             }
01285| 
01286|             Method (RMPC, 4, NotSerialized)
     |                       ^
     | Remark 2146: Method Argument is never used    (Arg2)
01287|             {
01288|                 Name (STAT, 0x00)
01289|                 Store (Arg0, Local0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1286
Line | AML source
--------------------------------------------------------------------------------
01283|                 Return (0x04)
01284|             }
01285| 
01286|             Method (RMPC, 4, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01287|             {
01288|                 Name (STAT, 0x00)
01289|                 Store (Arg0, Local0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1570
Line | AML source
--------------------------------------------------------------------------------
01567|                 Return (0x00)
01568|             }
01569| 
01570|             Method (AM05, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01571|             {
01572|                 Name (INFO, Buffer (0x14)
01573|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1578
Line | AML source
--------------------------------------------------------------------------------
01575|                     /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* ........ */
01576|                     /* 0010 */  0x00, 0x00, 0x00, 0x00                           /* .... */
01577|                 })
01578|                 CreateDWordField (INFO, 0x00, IFID)
     |                                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [AM05])
01579|                 CreateDWordField (INFO, 0x04, IFMI)
01580|                 CreateDWordField (INFO, 0x08, IFMX)
01581|                 CreateDWordField (INFO, 0x0C, IFSP)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1579
Line | AML source
--------------------------------------------------------------------------------
01576|                     /* 0010 */  0x00, 0x00, 0x00, 0x00                           /* .... */
01577|                 })
01578|                 CreateDWordField (INFO, 0x00, IFID)
01579|                 CreateDWordField (INFO, 0x04, IFMI)
     |                                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [AM05])
01580|                 CreateDWordField (INFO, 0x08, IFMX)
01581|                 CreateDWordField (INFO, 0x0C, IFSP)
01582|                 CreateField (INFO, 0x80, 0x03, IFST)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1580
Line | AML source
--------------------------------------------------------------------------------
01577|                 })
01578|                 CreateDWordField (INFO, 0x00, IFID)
01579|                 CreateDWordField (INFO, 0x04, IFMI)
01580|                 CreateDWordField (INFO, 0x08, IFMX)
     |                                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [AM05])
01581|                 CreateDWordField (INFO, 0x0C, IFSP)
01582|                 CreateField (INFO, 0x80, 0x03, IFST)
01583|                 If (DBG)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1581
Line | AML source
--------------------------------------------------------------------------------
01578|                 CreateDWordField (INFO, 0x00, IFID)
01579|                 CreateDWordField (INFO, 0x04, IFMI)
01580|                 CreateDWordField (INFO, 0x08, IFMX)
01581|                 CreateDWordField (INFO, 0x0C, IFSP)
     |                                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [AM05])
01582|                 CreateField (INFO, 0x80, 0x03, IFST)
01583|                 If (DBG)
01584|                 {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 1582
Line | AML source
--------------------------------------------------------------------------------
01579|                 CreateDWordField (INFO, 0x04, IFMI)
01580|                 CreateDWordField (INFO, 0x08, IFMX)
01581|                 CreateDWordField (INFO, 0x0C, IFSP)
01582|                 CreateField (INFO, 0x80, 0x03, IFST)
     |                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [AM05])
01583|                 If (DBG)
01584|                 {
01585|                     Store ("AM05", Debug)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
1627
Line | AML source
--------------------------------------------------------------------------------
01624|                 Return (0x00)
01625|             }
01626| 
01627|             Method (AM08, 1, NotSerialized)
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
01628|             {
01629|                 Name (LODT, Package (0x34)
01630|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RETURN_TYPES: Test 1, Assembler warning in line
2182
Line | AML source
--------------------------------------------------------------------------------
02179|                 /* 0018 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  /* f....... */
02180|                 /* 0020 */  0xC9, 0x06, 0x29, 0x10, 0x42, 0x41, 0x01, 0x00   /* ..).BA.. */
02181|             })
02182|             Method (WMAA, 3, NotSerialized)
     |                       ^
     | Warning 3115: Not all control paths return a value    (WMAA)
02183|             {
02184|                 If (LEqual (Arg0, 0x00))
02185|                 {
================================================================================

ADVICE: (for Warning #3115, ASL_MSG_RETURN_TYPES): Some of the execution paths
do not return a value. All control paths that return must return a value
otherwise unexpected behaviour may occur. This error occurs because a branch on
an conditional op-code returns a value and another does not, which is
inconsistent behaviour.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2272
Line | AML source
--------------------------------------------------------------------------------
02269|     Name (LINX, 0x00)
02270|     Name (AMAC, 0x00)
02271|     Name (OSFL, 0x01)
02272|     Method (STRC, 2, NotSerialized)
     |               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02273|     {
02274|         If (LNotEqual (SizeOf (Arg0), SizeOf (Arg1)))
02275|         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [MEDIUM] AMLAsmASL_MSG_RESERVED_RETURN_VALUE: Test 1, Assembler warning
in line 2331
Line | AML source
--------------------------------------------------------------------------------
02328|         APTS (Arg0)
02329|     }
02330| 
02331|     Method (\_WAK, 1, NotSerialized)  // _WAK: Wake
     |                ^
     | Warning 3107: Reserved method must return a value    (Integer/Package required for _WAK)
02332|     {
02333|         Store (0xFF, DBG1) /* \DBG1 */
02334|         If (LEqual (Arg0, 0x04))
================================================================================

ADVICE: (for Warning #3107, ASL_MSG_RESERVED_RETURN_VALUE): A reserved method
was expected to return a value, however, it does not. This is unexpected
behaviour that does not conform the the ACPI specification.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 2458
Line | AML source
--------------------------------------------------------------------------------
02455|             }
02456|         }
02457| 
02458|         Method (SMOD, 1, NotSerialized)
     |                   ^
     | Remark 2146: Method Argument is never used    (Arg0)
02459|         {
02460|         }
02461| 
================================================================================
FAILED [MEDIUM] AMLAsmUnknown: Test 1, Assembler warning in line 2516
Line | AML source
--------------------------------------------------------------------------------
02513|                         Store (0x00, OSFL) /* \OSFL */
02514|                     }
02515|                 }
02516|                 ElseIf (CondRefOf (\_OSI, Local0))
     |                                               ^
     | Warning 3144: Method Local is set but never used    (Local0)
02517|                 {
02518|                     If (\_OSI ("Linux"))
02519|                     {
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
2677
Line | AML source
--------------------------------------------------------------------------------
02674|                 Return (0x0F)
02675|             }
02676| 
02677|             Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
02678|             {
02679|                 Name (BUF0, ResourceTemplate ()
02680|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2722
Line | AML source
--------------------------------------------------------------------------------
02719|                         0x00000000,         // Translation Offset
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2722
Line | AML source
--------------------------------------------------------------------------------
02719|                         0x00000000,         // Translation Offset
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                     ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2722
Line | AML source
--------------------------------------------------------------------------------
02719|                         0x00000000,         // Translation Offset
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2722
Line | AML source
--------------------------------------------------------------------------------
02719|                         0x00000000,         // Translation Offset
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                                          ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2722
Line | AML source
--------------------------------------------------------------------------------
02719|                         0x00000000,         // Translation Offset
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                                                     ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2723
Line | AML source
--------------------------------------------------------------------------------
02720|                         0x00020000,         // Length
02721|                         ,, , AddressRangeMemory, TypeStatic)
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
02723|                         0x00000000,         // Granularity
     |                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
02726|                         0x00000000,         // Translation Offset
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2725
Line | AML source
--------------------------------------------------------------------------------
02722|                     DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
     |                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02726|                         0x00000000,         // Translation Offset
02727|                         0xFFF00000,         // Length
02728|                         ,, _Y00, AddressRangeMemory, TypeStatic)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2726
Line | AML source
--------------------------------------------------------------------------------
02723|                         0x00000000,         // Granularity
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
02726|                         0x00000000,         // Translation Offset
     |                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02727|                         0xFFF00000,         // Length
02728|                         ,, _Y00, AddressRangeMemory, TypeStatic)
02729|                 })
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_INVALID_LENGTH: Test 1, Assembler error in line 2727
Line | AML source
--------------------------------------------------------------------------------
02724|                         0x00100000,         // Range Minimum
02725|                         0xFEBFFFFF,         // Range Maximum
02726|                         0x00000000,         // Translation Offset
02727|                         0xFFF00000,         // Length
     |                                 ^
     | Error 6049: Length is larger than Min/Max window  
02728|                         ,, _Y00, AddressRangeMemory, TypeStatic)
02729|                 })
02730|                 CreateDWordField (BUF0, \_SB.PCI0._CRS._Y00._MIN, TCMM)  // _MIN: Minimum Base Address
================================================================================

ADVICE: (for Error #6049, ASL_MSG_INVALID_LENGTH): This needs to be fixed as the
length specified is greater than the window size specified by the Min/Max fields
- this is clealy ambiguous.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2728
Line | AML source
--------------------------------------------------------------------------------
02725|                         0xFEBFFFFF,         // Range Maximum
02726|                         0x00000000,         // Translation Offset
02727|                         0xFFF00000,         // Length
02728|                         ,, _Y00, AddressRangeMemory, TypeStatic)
     |                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02729|                 })
02730|                 CreateDWordField (BUF0, \_SB.PCI0._CRS._Y00._MIN, TCMM)  // _MIN: Minimum Base Address
02731|                 CreateDWordField (BUF0, \_SB.PCI0._CRS._Y00._LEN, TOMM)  // _LEN: Length
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 2728
Line | AML source
--------------------------------------------------------------------------------
02725|                         0xFEBFFFFF,         // Range Maximum
02726|                         0x00000000,         // Translation Offset
02727|                         0xFFF00000,         // Length
02728|                         ,, _Y00, AddressRangeMemory, TypeStatic)
     |                                                              ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
02729|                 })
02730|                 CreateDWordField (BUF0, \_SB.PCI0._CRS._Y00._MIN, TCMM)  // _MIN: Minimum Base Address
02731|                 CreateDWordField (BUF0, \_SB.PCI0._CRS._Y00._LEN, TOMM)  // _LEN: Length
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3838
Line | AML source
--------------------------------------------------------------------------------
03835|                     }
03836| 
03837|                     Name (PRIS, 0x00)
03838|                     Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03839|                     {
03840|                         If (STEN)
03841|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3903
Line | AML source
--------------------------------------------------------------------------------
03900|                     Device (P_D0)
03901|                     {
03902|                         Name (_ADR, 0x00)  // _ADR: Address
03903|                         Method (_STA, 0, NotSerialized)  // _STA: Status
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03904|                         {
03905|                             If (STEN)
03906|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3932
Line | AML source
--------------------------------------------------------------------------------
03929|                         }
03930| 
03931|                         Name (S12P, 0x00)
03932|                         Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03933|                         {
03934|                             If (STEN)
03935|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3969
Line | AML source
--------------------------------------------------------------------------------
03966|                     Device (P_D1)
03967|                     {
03968|                         Name (_ADR, 0x01)  // _ADR: Address
03969|                         Method (_STA, 0, NotSerialized)  // _STA: Status
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03970|                         {
03971|                             If (STEN)
03972|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
3998
Line | AML source
--------------------------------------------------------------------------------
03995|                         }
03996| 
03997|                         Name (S12P, 0x00)
03998|                         Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
03999|                         {
04000|                             If (STEN)
04001|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4046
Line | AML source
--------------------------------------------------------------------------------
04043|                     }
04044| 
04045|                     Name (SECS, 0x00)
04046|                     Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04047|                     {
04048|                         If (STEN)
04049|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4110
Line | AML source
--------------------------------------------------------------------------------
04107|                     Device (S_D0)
04108|                     {
04109|                         Name (_ADR, 0x00)  // _ADR: Address
04110|                         Method (_STA, 0, NotSerialized)  // _STA: Status
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04111|                         {
04112|                             If (STEN)
04113|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4139
Line | AML source
--------------------------------------------------------------------------------
04136|                         }
04137| 
04138|                         Name (S12P, 0x00)
04139|                         Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04140|                         {
04141|                             If (STEN)
04142|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4176
Line | AML source
--------------------------------------------------------------------------------
04173|                     Device (S_D1)
04174|                     {
04175|                         Name (_ADR, 0x01)  // _ADR: Address
04176|                         Method (_STA, 0, NotSerialized)  // _STA: Status
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04177|                         {
04178|                             If (STEN)
04179|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4205
Line | AML source
--------------------------------------------------------------------------------
04202|                         }
04203| 
04204|                         Name (S12P, 0x00)
04205|                         Method (_PS0, 0, NotSerialized)  // _PS0: Power State 0
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04206|                         {
04207|                             If (STEN)
04208|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
4248
Line | AML source
--------------------------------------------------------------------------------
04245|                 {
04246|                     Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
04247|                     Name (_UID, 0x03)  // _UID: Unique ID
04248|                     Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
04249|                     {
04250|                         Name (BUF0, ResourceTemplate ()
04251|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4354
Line | AML source
--------------------------------------------------------------------------------
04351|                                 0x01,               // Alignment
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4354
Line | AML source
--------------------------------------------------------------------------------
04351|                                 0x01,               // Alignment
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4354
Line | AML source
--------------------------------------------------------------------------------
04351|                                 0x01,               // Alignment
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                                       ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4354
Line | AML source
--------------------------------------------------------------------------------
04351|                                 0x01,               // Alignment
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4354
Line | AML source
--------------------------------------------------------------------------------
04351|                                 0x01,               // Alignment
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
     |                                                                                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4355
Line | AML source
--------------------------------------------------------------------------------
04352|                                 0x20,               // Length
04353|                                 )
04354|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
04355|                                 0x00000000,         // Granularity
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
04358|                                 0x00000000,         // Translation Offset
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4358
Line | AML source
--------------------------------------------------------------------------------
04355|                                 0x00000000,         // Granularity
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
04358|                                 0x00000000,         // Translation Offset
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04359|                                 0x00000000,         // Length
04360|                                 ,, _Y01, AddressRangeMemory, TypeStatic)
04361|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_INVALID_ADDR_FLAGS: Test 1, Assembler error in line
4359
Line | AML source
--------------------------------------------------------------------------------
04356|                                 0xE0000000,         // Range Minimum
04357|                                 0xE0000000,         // Range Maximum
04358|                                 0x00000000,         // Translation Offset
04359|                                 0x00000000,         // Length
     |                                         ^
     | Error 6043: Invalid combination of Length and Min/Max fixed flags  
04360|                                 ,, _Y01, AddressRangeMemory, TypeStatic)
04361|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
04362|                                 0x00000000,         // Granularity
================================================================================

ADVICE: (for Error #6043, ASL_MSG_INVALID_ADDR_FLAGS): This occurs if the length
is zero and just one of the resource MIF/MAF flags are set, or the length is
non-zero and resource MIF/MAF flags are both set. These are illegal combinations
and need to be fixed. See section 6.4.3.5 Address Space Resource Descriptors of
the ACPI specification for more details.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4360
Line | AML source
--------------------------------------------------------------------------------
04357|                                 0xE0000000,         // Range Maximum
04358|                                 0x00000000,         // Translation Offset
04359|                                 0x00000000,         // Length
04360|                                 ,, _Y01, AddressRangeMemory, TypeStatic)
     |                                                          ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04361|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
04362|                                 0x00000000,         // Granularity
04363|                                 0xFEE00400,         // Range Minimum
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 4360
Line | AML source
--------------------------------------------------------------------------------
04357|                                 0xE0000000,         // Range Maximum
04358|                                 0x00000000,         // Translation Offset
04359|                                 0x00000000,         // Length
04360|                                 ,, _Y01, AddressRangeMemory, TypeStatic)
     |                                                                      ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
04361|                             DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
04362|                                 0x00000000,         // Granularity
04363|                                 0xFEE00400,         // Range Minimum
================================================================================
FAILED [HIGH] AMLAsmASL_MSG_INVALID_LENGTH_FIXED: Test 1, Assembler error in
line 4366
Line | AML source
--------------------------------------------------------------------------------
04363|                                 0xFEE00400,         // Range Minimum
04364|                                 0xFEE00FFF,         // Range Maximum
04365|                                 0x00000000,         // Translation Offset
04366|                                 0x00000BFF,         // Length
     |                                         ^
     | Error 6050: Length is not equal to fixed Min/Max window  
04367|                                 ,, , AddressRangeMemory, TypeStatic)
04368|                         })
04369|                         CreateDWordField (BUF0, \_SB.PCI0.LPC0.PMIO._CRS._Y01._MIN, BARX)  // _MIN: Minimum Base Address
================================================================================

ADVICE: (for Error #6050, ASL_MSG_INVALID_LENGTH_FIXED): The minimum address is
greater than the maximum address. This is illegal.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5277
Line | AML source
--------------------------------------------------------------------------------
05274|                         )))
05275|                 }
05276| 
05277|                 Method (GTM, 1, NotSerialized)
     |                          ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05278|                 {
05279|                     CreateByteField (Arg0, 0x00, PIT1)
05280|                     CreateByteField (Arg0, 0x01, PIT0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 5328
Line | AML source
--------------------------------------------------------------------------------
05325|                     Return (BUF) /* \_SB_.PCI0.IDE_.GTM_.BUF_ */
05326|                 }
05327| 
05328|                 Method (STM, 3, NotSerialized)
     |                          ^
     | Remark 2146: Method Argument is never used    (Arg1)
05329|                 {
05330|                     CreateDWordField (Arg0, 0x00, PIO0)
05331|                     CreateDWordField (Arg0, 0x04, DMA0)
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 5328
Line | AML source
--------------------------------------------------------------------------------
05325|                     Return (BUF) /* \_SB_.PCI0.IDE_.GTM_.BUF_ */
05326|                 }
05327| 
05328|                 Method (STM, 3, NotSerialized)
     |                          ^
     | Remark 2146: Method Argument is never used    (Arg2)
05329|                 {
05330|                     CreateDWordField (Arg0, 0x00, PIO0)
05331|                     CreateDWordField (Arg0, 0x04, DMA0)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5328
Line | AML source
--------------------------------------------------------------------------------
05325|                     Return (BUF) /* \_SB_.PCI0.IDE_.GTM_.BUF_ */
05326|                 }
05327| 
05328|                 Method (STM, 3, NotSerialized)
     |                          ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05329|                 {
05330|                     CreateDWordField (Arg0, 0x00, PIO0)
05331|                     CreateDWordField (Arg0, 0x04, DMA0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5382
Line | AML source
--------------------------------------------------------------------------------
05379|                     Return (BUF) /* \_SB_.PCI0.IDE_.STM_.BUF_ */
05380|                 }
05381| 
05382|                 Method (GTF, 2, NotSerialized)
     |                          ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05383|                 {
05384|                     CreateByteField (Arg1, 0x00, MDT1)
05385|                     CreateByteField (Arg1, 0x01, MDT0)
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5435
Line | AML source
--------------------------------------------------------------------------------
05432|                 Device (PRID)
05433|                 {
05434|                     Name (_ADR, 0x00)  // _ADR: Address
05435|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05436|                     {
05437|                         Name (BUF, Buffer (0x07)
05438|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5454
Line | AML source
--------------------------------------------------------------------------------
05451|                         Return (GTM (BUF))
05452|                     }
05453| 
05454|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05455|                     {
05456|                         Name (BUF, Buffer (0x07)
05457|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5476
Line | AML source
--------------------------------------------------------------------------------
05473|                     Device (P_D0)
05474|                     {
05475|                         Name (_ADR, 0x00)  // _ADR: Address
05476|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05477|                         {
05478|                             Name (BUF, Buffer (0x05)
05479|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5497
Line | AML source
--------------------------------------------------------------------------------
05494|                     Device (P_D1)
05495|                     {
05496|                         Name (_ADR, 0x01)  // _ADR: Address
05497|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05498|                         {
05499|                             Name (BUF, Buffer (0x05)
05500|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5519
Line | AML source
--------------------------------------------------------------------------------
05516|                 Device (SECD)
05517|                 {
05518|                     Name (_ADR, 0x01)  // _ADR: Address
05519|                     Method (_GTM, 0, NotSerialized)  // _GTM: Get Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05520|                     {
05521|                         Name (BUF, Buffer (0x07)
05522|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5538
Line | AML source
--------------------------------------------------------------------------------
05535|                         Return (GTM (BUF))
05536|                     }
05537| 
05538|                     Method (_STM, 3, NotSerialized)  // _STM: Set Timing Mode
     |                               ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05539|                     {
05540|                         Name (BUF, Buffer (0x07)
05541|                         {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5560
Line | AML source
--------------------------------------------------------------------------------
05557|                     Device (S_D0)
05558|                     {
05559|                         Name (_ADR, 0x00)  // _ADR: Address
05560|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05561|                         {
05562|                             Name (BUF, Buffer (0x05)
05563|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
5581
Line | AML source
--------------------------------------------------------------------------------
05578|                     Device (S_D1)
05579|                     {
05580|                         Name (_ADR, 0x01)  // _ADR: Address
05581|                         Method (_GTF, 0, NotSerialized)  // _GTF: Get Task File
     |                                   ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
05582|                         {
05583|                             Name (BUF, Buffer (0x05)
05584|                             {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6626
Line | AML source
--------------------------------------------------------------------------------
06623| 
06624|             Scope (\)
06625|             {
06626|                 Method (DISD, 1, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
06627|                 {
06628|                 }
06629| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6630
Line | AML source
--------------------------------------------------------------------------------
06627|                 {
06628|                 }
06629| 
06630|                 Method (CKIO, 2, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
06631|                 {
06632|                 }
06633| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6630
Line | AML source
--------------------------------------------------------------------------------
06627|                 {
06628|                 }
06629| 
06630|                 Method (CKIO, 2, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg1)
06631|                 {
06632|                 }
06633| 
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6634
Line | AML source
--------------------------------------------------------------------------------
06631|                 {
06632|                 }
06633| 
06634|                 Method (SLDM, 2, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg0)
06635|                 {
06636|                 }
06637|             }
================================================================================
FAILED [LOW] AMLAsmUnknown: Test 1, Assembler remark in line 6634
Line | AML source
--------------------------------------------------------------------------------
06631|                 {
06632|                 }
06633| 
06634|                 Method (SLDM, 2, NotSerialized)
     |                           ^
     | Remark 2146: Method Argument is never used    (Arg1)
06635|                 {
06636|                 }
06637|             }
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
6750
Line | AML source
--------------------------------------------------------------------------------
06747|                     DISD (0x03)
06748|                 }
06749| 
06750|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
06751|                 {
06752|                     Name (BUF0, ResourceTemplate ()
06753|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6754
Line | AML source
--------------------------------------------------------------------------------
06751|                 {
06752|                     Name (BUF0, ResourceTemplate ()
06753|                     {
06754|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06755|                             0x03F0,             // Range Minimum
06756|                             0x03F0,             // Range Maximum
06757|                             0x01,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6757
Line | AML source
--------------------------------------------------------------------------------
06754|                         IO (Decode16,
06755|                             0x03F0,             // Range Minimum
06756|                             0x03F0,             // Range Maximum
06757|                             0x01,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06758|                             0x06,               // Length
06759|                             _Y02)
06760|                         IO (Decode16,
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6758
Line | AML source
--------------------------------------------------------------------------------
06755|                             0x03F0,             // Range Minimum
06756|                             0x03F0,             // Range Maximum
06757|                             0x01,               // Alignment
06758|                             0x06,               // Length
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06759|                             _Y02)
06760|                         IO (Decode16,
06761|                             0x03F7,             // Range Minimum
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 6771
Line | AML source
--------------------------------------------------------------------------------
06768|                         DMA (Compatibility, NotBusMaster, Transfer8, )
06769|                             {2}
06770|                     })
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
06772|                     CreateByteField (BUF0, 0x03, IOHI)
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
06774|                     CreateByteField (BUF0, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6771
Line | AML source
--------------------------------------------------------------------------------
06768|                         DMA (Compatibility, NotBusMaster, Transfer8, )
06769|                             {2}
06770|                     })
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06772|                     CreateByteField (BUF0, 0x03, IOHI)
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
06774|                     CreateByteField (BUF0, 0x05, IORH)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6772
Line | AML source
--------------------------------------------------------------------------------
06769|                             {2}
06770|                     })
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
06772|                     CreateByteField (BUF0, 0x03, IOHI)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
06774|                     CreateByteField (BUF0, 0x05, IORH)
06775|                     ENFG ()
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 6773
Line | AML source
--------------------------------------------------------------------------------
06770|                     })
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
06772|                     CreateByteField (BUF0, 0x03, IOHI)
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
06774|                     CreateByteField (BUF0, 0x05, IORH)
06775|                     ENFG ()
06776|                     EXFG ()
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6773
Line | AML source
--------------------------------------------------------------------------------
06770|                     })
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
06772|                     CreateByteField (BUF0, 0x03, IOHI)
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                             ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06774|                     CreateByteField (BUF0, 0x05, IORH)
06775|                     ENFG ()
06776|                     EXFG ()
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6774
Line | AML source
--------------------------------------------------------------------------------
06771|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MIN, IOLO)  // _MIN: Minimum Base Address
06772|                     CreateByteField (BUF0, 0x03, IOHI)
06773|                     CreateByteField (BUF0, \_SB.PCI0.FDC0._CRS._Y02._MAX, IORL)  // _MAX: Maximum Base Address
06774|                     CreateByteField (BUF0, 0x05, IORH)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06775|                     ENFG ()
06776|                     EXFG ()
06777|                     Return (BUF0) /* \_SB_.PCI0.FDC0._CRS.BUF0 */
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6805
Line | AML source
--------------------------------------------------------------------------------
06802|                 })
06803|                 Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
06804|                 {
06805|                     CreateByteField (Arg0, 0x02, IOLO)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
06806|                     CreateByteField (Arg0, 0x03, IOHI)
06807|                     CreateWordField (Arg0, 0x02, IOAD)
06808|                     CreateWordField (Arg0, 0x19, IRQW)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6806
Line | AML source
--------------------------------------------------------------------------------
06803|                 Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
06804|                 {
06805|                     CreateByteField (Arg0, 0x02, IOLO)
06806|                     CreateByteField (Arg0, 0x03, IOHI)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
06807|                     CreateWordField (Arg0, 0x02, IOAD)
06808|                     CreateWordField (Arg0, 0x19, IRQW)
06809|                     CreateByteField (Arg0, 0x1C, DMAV)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6808
Line | AML source
--------------------------------------------------------------------------------
06805|                     CreateByteField (Arg0, 0x02, IOLO)
06806|                     CreateByteField (Arg0, 0x03, IOHI)
06807|                     CreateWordField (Arg0, 0x02, IOAD)
06808|                     CreateWordField (Arg0, 0x19, IRQW)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
06809|                     CreateByteField (Arg0, 0x1C, DMAV)
06810|                     ENFG ()
06811|                     Store (Zero, LDN) /* \LDN_ */
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6809
Line | AML source
--------------------------------------------------------------------------------
06806|                     CreateByteField (Arg0, 0x03, IOHI)
06807|                     CreateWordField (Arg0, 0x02, IOAD)
06808|                     CreateWordField (Arg0, 0x19, IRQW)
06809|                     CreateByteField (Arg0, 0x1C, DMAV)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
06810|                     ENFG ()
06811|                     Store (Zero, LDN) /* \LDN_ */
06812|                     Store (One, ACTR) /* \ACTR */
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
6855
Line | AML source
--------------------------------------------------------------------------------
06852|                     DISD (0x00)
06853|                 }
06854| 
06855|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
06856|                 {
06857|                     Name (BUF1, ResourceTemplate ()
06858|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6859
Line | AML source
--------------------------------------------------------------------------------
06856|                 {
06857|                     Name (BUF1, ResourceTemplate ()
06858|                     {
06859|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06860|                             0x0000,             // Range Minimum
06861|                             0x0000,             // Range Maximum
06862|                             0x01,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6862
Line | AML source
--------------------------------------------------------------------------------
06859|                         IO (Decode16,
06860|                             0x0000,             // Range Minimum
06861|                             0x0000,             // Range Maximum
06862|                             0x01,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06863|                             0x08,               // Length
06864|                             _Y03)
06865|                         IRQNoFlags (_Y04)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6863
Line | AML source
--------------------------------------------------------------------------------
06860|                             0x0000,             // Range Minimum
06861|                             0x0000,             // Range Maximum
06862|                             0x01,               // Alignment
06863|                             0x08,               // Length
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06864|                             _Y03)
06865|                         IRQNoFlags (_Y04)
06866|                             {}
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 6868
Line | AML source
--------------------------------------------------------------------------------
06865|                         IRQNoFlags (_Y04)
06866|                             {}
06867|                     })
06868|                     CreateByteField (BUF1, \_SB.PCI0.UAR1._CRS._Y03._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
06869|                     CreateByteField (BUF1, 0x03, IOHI)
06870|                     CreateByteField (BUF1, \_SB.PCI0.UAR1._CRS._Y03._MAX, IORL)  // _MAX: Maximum Base Address
06871|                     CreateByteField (BUF1, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 6870
Line | AML source
--------------------------------------------------------------------------------
06867|                     })
06868|                     CreateByteField (BUF1, \_SB.PCI0.UAR1._CRS._Y03._MIN, IOLO)  // _MIN: Minimum Base Address
06869|                     CreateByteField (BUF1, 0x03, IOHI)
06870|                     CreateByteField (BUF1, \_SB.PCI0.UAR1._CRS._Y03._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
06871|                     CreateByteField (BUF1, 0x05, IORH)
06872|                     CreateWordField (BUF1, \_SB.PCI0.UAR1._CRS._Y04._INT, IRQW)  // _INT: Interrupts
06873|                     ENFG ()
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
6993
Line | AML source
--------------------------------------------------------------------------------
06990|                     DISD (0x02)
06991|                 }
06992| 
06993|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
06994|                 {
06995|                     Name (BUF5, ResourceTemplate ()
06996|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 6997
Line | AML source
--------------------------------------------------------------------------------
06994|                 {
06995|                     Name (BUF5, ResourceTemplate ()
06996|                     {
06997|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
06998|                             0x0000,             // Range Minimum
06999|                             0x0000,             // Range Maximum
07000|                             0x01,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7000
Line | AML source
--------------------------------------------------------------------------------
06997|                         IO (Decode16,
06998|                             0x0000,             // Range Minimum
06999|                             0x0000,             // Range Maximum
07000|                             0x01,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07001|                             0x08,               // Length
07002|                             _Y05)
07003|                         IRQNoFlags (_Y06)
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7006
Line | AML source
--------------------------------------------------------------------------------
07003|                         IRQNoFlags (_Y06)
07004|                             {}
07005|                     })
07006|                     CreateByteField (BUF5, \_SB.PCI0.LPT1._CRS._Y05._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07007|                     CreateByteField (BUF5, 0x03, IOHI)
07008|                     CreateByteField (BUF5, \_SB.PCI0.LPT1._CRS._Y05._MAX, IORL)  // _MAX: Maximum Base Address
07009|                     CreateByteField (BUF5, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7008
Line | AML source
--------------------------------------------------------------------------------
07005|                     })
07006|                     CreateByteField (BUF5, \_SB.PCI0.LPT1._CRS._Y05._MIN, IOLO)  // _MIN: Minimum Base Address
07007|                     CreateByteField (BUF5, 0x03, IOHI)
07008|                     CreateByteField (BUF5, \_SB.PCI0.LPT1._CRS._Y05._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07009|                     CreateByteField (BUF5, 0x05, IORH)
07010|                     CreateByteField (BUF5, \_SB.PCI0.LPT1._CRS._Y05._LEN, IOLE)  // _LEN: Length
07011|                     CreateWordField (BUF5, \_SB.PCI0.LPT1._CRS._Y06._INT, IRQW)  // _INT: Interrupts
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7076
Line | AML source
--------------------------------------------------------------------------------
07073|                     CreateByteField (Arg0, 0x02, IOLO)
07074|                     CreateByteField (Arg0, 0x03, IOHI)
07075|                     CreateWordField (Arg0, 0x02, IOAD)
07076|                     CreateByteField (Arg0, 0x04, IORL)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
07077|                     CreateByteField (Arg0, 0x05, IORH)
07078|                     CreateWordField (Arg0, 0x09, IRQW)
07079|                     ENFG ()
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7077
Line | AML source
--------------------------------------------------------------------------------
07074|                     CreateByteField (Arg0, 0x03, IOHI)
07075|                     CreateWordField (Arg0, 0x02, IOAD)
07076|                     CreateByteField (Arg0, 0x04, IORL)
07077|                     CreateByteField (Arg0, 0x05, IORH)
     |                                                    ^
     | Remark 2089: Object is not referenced    (Name is within method [_SRS])
07078|                     CreateWordField (Arg0, 0x09, IRQW)
07079|                     ENFG ()
07080|                     Store (0x03, LDN) /* \LDN_ */
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7135
Line | AML source
--------------------------------------------------------------------------------
07132|                     DISD (0x02)
07133|                 }
07134| 
07135|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07136|                 {
07137|                     Name (BUF6, ResourceTemplate ()
07138|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7139
Line | AML source
--------------------------------------------------------------------------------
07136|                 {
07137|                     Name (BUF6, ResourceTemplate ()
07138|                     {
07139|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07140|                             0x0000,             // Range Minimum
07141|                             0x0000,             // Range Maximum
07142|                             0x01,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7142
Line | AML source
--------------------------------------------------------------------------------
07139|                         IO (Decode16,
07140|                             0x0000,             // Range Minimum
07141|                             0x0000,             // Range Maximum
07142|                             0x01,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07143|                             0x04,               // Length
07144|                             _Y07)
07145|                         IO (Decode16,
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7145
Line | AML source
--------------------------------------------------------------------------------
07142|                             0x01,               // Alignment
07143|                             0x04,               // Length
07144|                             _Y07)
07145|                         IO (Decode16,
     |                                   ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07146|                             0x0000,             // Range Minimum
07147|                             0x0000,             // Range Maximum
07148|                             0x01,               // Alignment
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7148
Line | AML source
--------------------------------------------------------------------------------
07145|                         IO (Decode16,
07146|                             0x0000,             // Range Minimum
07147|                             0x0000,             // Range Maximum
07148|                             0x01,               // Alignment
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07149|                             0x04,               // Length
07150|                             _Y08)
07151|                         IRQNoFlags (_Y09)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7149
Line | AML source
--------------------------------------------------------------------------------
07146|                             0x0000,             // Range Minimum
07147|                             0x0000,             // Range Maximum
07148|                             0x01,               // Alignment
07149|                             0x04,               // Length
     |                               ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07150|                             _Y08)
07151|                         IRQNoFlags (_Y09)
07152|                             {}
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7153
Line | AML source
--------------------------------------------------------------------------------
07150|                             _Y08)
07151|                         IRQNoFlags (_Y09)
07152|                             {}
07153|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y0A)
     |                                         ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07154|                             {}
07155|                     })
07156|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7153
Line | AML source
--------------------------------------------------------------------------------
07150|                             _Y08)
07151|                         IRQNoFlags (_Y09)
07152|                             {}
07153|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y0A)
     |                                                       ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07154|                             {}
07155|                     })
07156|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7153
Line | AML source
--------------------------------------------------------------------------------
07150|                             _Y08)
07151|                         IRQNoFlags (_Y09)
07152|                             {}
07153|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y0A)
     |                                                                  ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07154|                             {}
07155|                     })
07156|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MIN, IOLO)  // _MIN: Minimum Base Address
================================================================================
FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7156
Line | AML source
--------------------------------------------------------------------------------
07153|                         DMA (Compatibility, NotBusMaster, Transfer8, _Y0A)
07154|                             {}
07155|                     })
07156|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MIN, IOLO)  // _MIN: Minimum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07157|                     CreateByteField (BUF6, 0x03, IOHI)
07158|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MAX, IORL)  // _MAX: Maximum Base Address
07159|                     CreateByteField (BUF6, 0x05, IORH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7158
Line | AML source
--------------------------------------------------------------------------------
07155|                     })
07156|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MIN, IOLO)  // _MIN: Minimum Base Address
07157|                     CreateByteField (BUF6, 0x03, IOHI)
07158|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MAX, IORL)  // _MAX: Maximum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07159|                     CreateByteField (BUF6, 0x05, IORH)
07160|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._LEN, IOLE)  // _LEN: Length
07161|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y08._MIN, IOEL)  // _MIN: Minimum Base Address
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7161
Line | AML source
--------------------------------------------------------------------------------
07158|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._MAX, IORL)  // _MAX: Maximum Base Address
07159|                     CreateByteField (BUF6, 0x05, IORH)
07160|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._LEN, IOLE)  // _LEN: Length
07161|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y08._MIN, IOEL)  // _MIN: Minimum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07162|                     CreateByteField (BUF6, 0x0B, IOEH)
07163|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y08._MAX, IOML)  // _MAX: Maximum Base Address
07164|                     CreateByteField (BUF6, 0x0D, IOMH)
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [MEDIUM] AMLAsmASL_MSG_TAG_LARGER: Test 1, Assembler warning in line 7163
Line | AML source
--------------------------------------------------------------------------------
07160|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y07._LEN, IOLE)  // _LEN: Length
07161|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y08._MIN, IOEL)  // _MIN: Minimum Base Address
07162|                     CreateByteField (BUF6, 0x0B, IOEH)
07163|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y08._MAX, IOML)  // _MAX: Maximum Base Address
     |                                                                       ^
     | Warning 3128: ResourceTag larger than Field    (Size mismatch, Tag: 16 bits, Field: 8 bits)
07164|                     CreateByteField (BUF6, 0x0D, IOMH)
07165|                     CreateWordField (BUF6, \_SB.PCI0.ECP1._CRS._Y09._INT, IRQW)  // _INT: Interrupts
07166|                     CreateByteField (BUF6, \_SB.PCI0.ECP1._CRS._Y0A._DMA, DMAC)  // _DMA: Direct Memory Access
================================================================================

ADVICE: (for Warning #3128, ASL_MSG_TAG_LARGER): The resource tag length is
larger than the field length.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7307
Line | AML source
--------------------------------------------------------------------------------
07304|                     }
07305|                 }
07306| 
07307|                 Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                           ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07308|                 {
07309|                     Name (BUF1, ResourceTemplate ()
07310|                     {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7465
Line | AML source
--------------------------------------------------------------------------------
07462|         Device (MEM)
07463|         {
07464|             Name (_HID, EisaId ("PNP0C01") /* System Board */)  // _HID: Hardware ID
07465|             Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07466|             {
07467|                 Name (BUF0, ResourceTemplate ()
07468|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7469
Line | AML source
--------------------------------------------------------------------------------
07466|             {
07467|                 Name (BUF0, ResourceTemplate ()
07468|                 {
07469|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07470|                         0x000F0000,         // Address Base
07471|                         0x00004000,         // Address Length
07472|                         _Y0C)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7473
Line | AML source
--------------------------------------------------------------------------------
07470|                         0x000F0000,         // Address Base
07471|                         0x00004000,         // Address Length
07472|                         _Y0C)
07473|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07474|                         0x000F4000,         // Address Base
07475|                         0x00004000,         // Address Length
07476|                         _Y0D)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7477
Line | AML source
--------------------------------------------------------------------------------
07474|                         0x000F4000,         // Address Base
07475|                         0x00004000,         // Address Length
07476|                         _Y0D)
07477|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07478|                         0x000F8000,         // Address Base
07479|                         0x00004000,         // Address Length
07480|                         _Y0E)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7481
Line | AML source
--------------------------------------------------------------------------------
07478|                         0x000F8000,         // Address Base
07479|                         0x00004000,         // Address Length
07480|                         _Y0E)
07481|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07482|                         0x000FC000,         // Address Base
07483|                         0x00004000,         // Address Length
07484|                         _Y0F)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7485
Line | AML source
--------------------------------------------------------------------------------
07482|                         0x000FC000,         // Address Base
07483|                         0x00004000,         // Address Length
07484|                         _Y0F)
07485|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07486|                         0x00000000,         // Address Base
07487|                         0x00010000,         // Address Length
07488|                         _Y0B)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7487
Line | AML source
--------------------------------------------------------------------------------
07484|                         _Y0F)
07485|                     Memory32Fixed (ReadWrite,
07486|                         0x00000000,         // Address Base
07487|                         0x00010000,         // Address Length
     |                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07488|                         _Y0B)
07489|                     Memory32Fixed (ReadWrite,
07490|                         0xFFFF0000,         // Address Base
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7497
Line | AML source
--------------------------------------------------------------------------------
07494|                         0x00000000,         // Address Base
07495|                         0x000A0000,         // Address Length
07496|                         )
07497|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07498|                         0x00100000,         // Address Base
07499|                         0x00000000,         // Address Length
07500|                         _Y10)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7498
Line | AML source
--------------------------------------------------------------------------------
07495|                         0x000A0000,         // Address Length
07496|                         )
07497|                     Memory32Fixed (ReadWrite,
07498|                         0x00100000,         // Address Base
     |                                 ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07499|                         0x00000000,         // Address Length
07500|                         _Y10)
07501|                     Memory32Fixed (ReadWrite,
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7501
Line | AML source
--------------------------------------------------------------------------------
07498|                         0x00100000,         // Address Base
07499|                         0x00000000,         // Address Length
07500|                         _Y10)
07501|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07502|                         0x00000000,         // Address Base
07503|                         0x00000000,         // Address Length
07504|                         _Y11)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_NOT_REFERENCED: Test 1, Assembler remark in line 7505
Line | AML source
--------------------------------------------------------------------------------
07502|                         0x00000000,         // Address Base
07503|                         0x00000000,         // Address Length
07504|                         _Y11)
07505|                     Memory32Fixed (ReadWrite,
     |                                           ^
     | Remark 2089: Object is not referenced    (Name is within method [_CRS])
07506|                         0x00000000,         // Address Base
07507|                         0x00000000,         // Address Length
07508|                         _Y12)
================================================================================
FAILED [LOW] AMLAsmASL_MSG_SERIALIZED_REQUIRED: Test 1, Assembler remark in line
7581
Line | AML source
--------------------------------------------------------------------------------
07578|         {
07579|             Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
07580|             Name (_UID, 0x04)  // _UID: Unique ID
07581|             Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
     |                       ^
     | Remark 2120: Control Method should be made Serialized    (due to creation of named objects within)
07582|             {
07583|                 Name (BUF0, ResourceTemplate ()
07584|                 {
================================================================================

ADVICE: (for Remark #2120, ASL_MSG_SERIALIZED_REQUIRED): A named object is
created inside a non-serialized method - this method should be serialized. It is
possible that one thread enters the method and blocks and then a second thread
also executes the method, ending up in two attempts to create the object and
causing a failure.

Table DSDT (0) reassembly: Found 3 errors, 14 warnings, 114 remarks.


Checking ACPI table SSDT (#1)

PASSED: Test 1, SSDT (1) reassembly, Found 0 errors, 0 warnings, 0 remarks.


================================================================================
1 passed, 131 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

stao: STAO Status Override Table test.
--------------------------------------------------------------------------------
ACPI STAO table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

srat: SRAT System Resource Affinity Table test.
--------------------------------------------------------------------------------
ACPI SRAT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spmi: SPMI Service Processor Management Interface Description Table test.
--------------------------------------------------------------------------------
ACPI SPMI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

spcr: SPCR Serial Port Console Redirection Table test.
--------------------------------------------------------------------------------
ACPI SPCR table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slit: SLIT System Locality Distance Information test.
--------------------------------------------------------------------------------
ACPI SLIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

slic: SLIC Software Licensing Description Table test.
--------------------------------------------------------------------------------
ACPI SLIC table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

sbst: SBST Smart Battery Specification Table test.
--------------------------------------------------------------------------------
ACPI SBST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

rsdt: RSDT Root System Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDT Root System Description Table test.
PASSED: Test 1, No issues found in RSDT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

rsdp: RSDP Root System Description Pointer test.
--------------------------------------------------------------------------------
Test 1 of 1: RSDP Root System Description Pointer test.
PASSED: Test 1, No issues found in RSDP table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

pcc: Processor Clocking Control (PCC) test.
--------------------------------------------------------------------------------
Test 1 of 1: Processor Clocking Control (PCC) test.
This test checks the sanity of the Processor Clocking Control as found on some
HP ProLiant machines. Most computers do not use this interface to control the
CPU clock frequency, so this test will be skipped.

This machine does not use Processor Clocking Control (PCC).

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 1 info only.
================================================================================

osilinux: Disassemble DSDT to check for _OSI("Linux").
--------------------------------------------------------------------------------
Test 1 of 1: Disassemble DSDT to check for _OSI("Linux").
This is not strictly a failure mode, it just alerts one that this has been
defined in the DSDT and probably should be avoided since the Linux ACPI driver
matches onto the Windows _OSI strings
                {
                    If (\_OSI ("Linux"))
                    {
                        Store (0x01, LINX) /* \LINX */
                    }
                    If (\_OSI ("Darwin"))
                    {
                        Store (0x01, AMAC) /* \AMAC */
                    }
                }
WARNING: Test 1, DSDT implements a deprecated _OSI("Linux") test.

================================================================================
0 passed, 0 failed, 1 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

method: ACPI DSDT Method Semantic tests.
--------------------------------------------------------------------------------
FADT Preferred PM profile indicates this is not a Mobile Platform.
Test 1 of 191: Test Method Names.
Found 790 Objects 
PASSED: Test 1, Method names contain legal characters.

Test 2 of 191: Test _AEI.
SKIPPED: Test 2, Skipping test for non-existant object _AEI.

Test 3 of 191: Test _EVT (Event Method).
SKIPPED: Test 3, Skipping test for non-existant object _EVT.

Test 4 of 191: Test _DLM (Device Lock Mutex).
SKIPPED: Test 4, Skipping test for non-existant object _DLM.

Test 5 of 191: Test _PIC (Inform AML of Interrupt Model).
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.
PASSED: Test 5, \_PIC returned no values as expected.

Test 6 of 191: Test _CID (Compatible ID).
SKIPPED: Test 6, Skipping test for non-existant object _CID.

Test 7 of 191: Test _DDN (DOS Device Name).
SKIPPED: Test 7, Skipping test for non-existant object _DDN.

Test 8 of 191: Test _HID (Hardware ID).
PASSED: Test 8, \_SB_.PWRB._HID returned an integer 0x0c0cd041 (EISA ID
PNP0C0C).
PASSED: Test 8, \_SB_.PCI0._HID returned an integer 0x030ad041 (EISA ID
PNP0A03).
PASSED: Test 8, \_SB_.PCI0.SYSR._HID returned an integer 0x020cd041 (EISA ID
PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPC0.PMIO._HID returned an integer 0x020cd041 (EISA
ID PNP0C02).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKA._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKB._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKC._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKD._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKE._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNKF._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNK0._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.LNK1._HID returned an integer 0x0f0cd041 (EISA
ID PNP0C0F).
PASSED: Test 8, \_SB_.PCI0.LPC0.PIC_._HID returned an integer 0x0000d041 (EISA
ID PNP0000).
PASSED: Test 8, \_SB_.PCI0.LPC0.DMA1._HID returned an integer 0x0002d041 (EISA
ID PNP0200).
PASSED: Test 8, \_SB_.PCI0.LPC0.TMR_._HID returned an integer 0x0001d041 (EISA
ID PNP0100).
PASSED: Test 8, \_SB_.PCI0.LPC0.HPET._HID returned an integer 0x0301d041 (EISA
ID PNP0103).
PASSED: Test 8, \_SB_.PCI0.LPC0.RTC_._HID returned an integer 0x000bd041 (EISA
ID PNP0B00).
PASSED: Test 8, \_SB_.PCI0.LPC0.SPKR._HID returned an integer 0x0008d041 (EISA
ID PNP0800).
PASSED: Test 8, \_SB_.PCI0.LPC0.COPR._HID returned an integer 0x040cd041 (EISA
ID PNP0C04).
PASSED: Test 8, \_SB_.PCI0.FDC0._HID returned an integer 0x0007d041 (EISA ID
PNP0700).
PASSED: Test 8, \_SB_.PCI0.UAR1._HID returned an integer 0x0105d041 (EISA ID
PNP0501).
PASSED: Test 8, \_SB_.PCI0.LPT1._HID returned an integer 0x0004d041 (EISA ID
PNP0400).
PASSED: Test 8, \_SB_.PCI0.ECP1._HID returned an integer 0x0104d041 (EISA ID
PNP0401).
PASSED: Test 8, \_SB_.PCI0.PS2M._HID returned an integer 0x130fd041 (EISA ID
PNP0F13).
PASSED: Test 8, \_SB_.PCI0.PS2K._HID returned an integer 0x0303d041 (EISA ID
PNP0303).
PASSED: Test 8, \_SB_.PCI0.PSMR._HID returned an integer 0x020cd041 (EISA ID
PNP0C02).
PASSED: Test 8, \_SB_.PCI0.EXPL._HID returned an integer 0x020cd041 (EISA ID
PNP0C02).
PASSED: Test 8, \_SB_.MEM_._HID returned an integer 0x010cd041 (EISA ID
PNP0C01).
PASSED: Test 8, \AOD_._HID returned an integer 0x140cd041 (EISA ID PNP0C14).
PASSED: Test 8, \AWY_._HID returned a string 'AWY0001' as expected.

Test 9 of 191: Test _HRV (Hardware Revision Number).
SKIPPED: Test 9, Skipping test for non-existant object _HRV.

Test 10 of 191: Test _MLS (Multiple Language String).
SKIPPED: Test 10, Skipping test for non-existant object _MLS.

Test 11 of 191: Test _PLD (Physical Device Location).
SKIPPED: Test 11, Skipping test for non-existant object _PLD.

Test 12 of 191: Test _SUB (Subsystem ID).
SKIPPED: Test 12, Skipping test for non-existant object _SUB.

Test 13 of 191: Test _SUN (Slot User Number).
SKIPPED: Test 13, Skipping test for non-existant object _SUN.

Test 14 of 191: Test _STR (String).
SKIPPED: Test 14, Skipping test for non-existant object _STR.

Test 15 of 191: Test _UID (Unique ID).
PASSED: Test 15, \_SB_.PCI0.SYSR._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.PCI0.LPC0.PMIO._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKA._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKB._UID correctly returned sane looking value
0x00000002.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKC._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKD._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKE._UID correctly returned sane looking value
0x00000005.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNKF._UID correctly returned sane looking value
0x00000006.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNK0._UID correctly returned sane looking value
0x00000007.
PASSED: Test 15, \_SB_.PCI0.LPC0.LNK1._UID correctly returned sane looking value
0x00000008.
PASSED: Test 15, \_SB_.PCI0.UAR1._UID correctly returned sane looking value
0x00000001.
PASSED: Test 15, \_SB_.PCI0.PSMR._UID correctly returned sane looking value
0x00000003.
PASSED: Test 15, \_SB_.PCI0.EXPL._UID correctly returned sane looking value
0x00000004.
PASSED: Test 15, \AOD_._UID correctly returned sane looking value 0x00000000.

Test 16 of 191: Test _CDM (Clock Domain).
SKIPPED: Test 16, Skipping test for non-existant object _CDM.

Test 17 of 191: Test _CRS (Current Resource Settings).
PASSED: Test 17, \_SB_.PCI0.SYSR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0._CRS (WORD Address Space Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.PMIO._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKA._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKB._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKC._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKD._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKE._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNKF._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNK0._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.LNK1._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.PIC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.DMA1._CRS (DMA Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.TMR_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.HPET._CRS (End Tag Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.RTC_._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.SPKR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPC0.COPR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.FDC0._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.UAR1._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.LPT1._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.ECP1._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.PS2M._CRS (IRQ Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.PS2K._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.PSMR._CRS (I/O Port Descriptor) looks sane.
PASSED: Test 17, \_SB_.PCI0.EXPL._CRS (32-bit Fixed Location Memory Range
Descriptor) looks sane.
PASSED: Test 17, \_SB_.MEM_._CRS (32-bit Fixed Location Memory Range Descriptor)
looks sane.

Test 18 of 191: Test _DSD (Device Specific Data).
SKIPPED: Test 18, Skipping test for non-existant object _DSD.

Test 19 of 191: Test _DIS (Disable).
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKA._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKB._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKC._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKD._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKE._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNKF._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNK0._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPC0.LNK1._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.FDC0._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.UAR1._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.LPT1._DIS returned no values as expected.
PASSED: Test 19, \_SB_.PCI0.ECP1._DIS returned no values as expected.

Test 20 of 191: Test _DMA (Direct Memory Access).
SKIPPED: Test 20, Skipping test for non-existant object _DMA.

Test 21 of 191: Test _FIX (Fixed Register Resource Provider).
SKIPPED: Test 21, Skipping test for non-existant object _FIX.

Test 22 of 191: Test _GSB (Global System Interrupt Base).
SKIPPED: Test 22, Skipping test for non-existant object _GSB.

Test 23 of 191: Test _HPP (Hot Plug Parameters).
SKIPPED: Test 23, Skipping test for non-existant object _HPP.

Test 24 of 191: Test _PRS (Possible Resource Settings).
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKA._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKB._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKC._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKD._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKE._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNKF._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNK0._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.LPC0.LNK1._PRS (IRQ Descriptor) looks sane.
PASSED: Test 24, \_SB_.PCI0.FDC0._PRS (Start Dependent Functions Descriptor)
looks sane.
PASSED: Test 24, \_SB_.PCI0.UAR1._PRS (Start Dependent Functions Descriptor)
looks sane.
PASSED: Test 24, \_SB_.PCI0.LPT1._PRS (Start Dependent Functions Descriptor)
looks sane.
PASSED: Test 24, \_SB_.PCI0.ECP1._PRS (Start Dependent Functions Descriptor)
looks sane.

Test 25 of 191: Test _PXM (Proximity).
SKIPPED: Test 25, Skipping test for non-existant object _PXM.

Test 26 of 191: Test _CCA (Cache Coherency Attribute).
SKIPPED: Test 26, Skipping test for non-existant object _CCA.

Test 27 of 191: Test _EDL (Eject Device List).
SKIPPED: Test 27, Skipping test for non-existant object _EDL.

Test 28 of 191: Test _EJD (Ejection Dependent Device).
SKIPPED: Test 28, Skipping test for non-existant object _EJD.

Test 29 of 191: Test _EJ0 (Eject).
SKIPPED: Test 29, Skipping test for non-existant object _EJ0.

Test 30 of 191: Test _EJ1 (Eject).
SKIPPED: Test 30, Skipping test for non-existant object _EJ1.

Test 31 of 191: Test _EJ2 (Eject).
SKIPPED: Test 31, Skipping test for non-existant object _EJ2.

Test 32 of 191: Test _EJ3 (Eject).
SKIPPED: Test 32, Skipping test for non-existant object _EJ3.

Test 33 of 191: Test _EJ4 (Eject).
SKIPPED: Test 33, Skipping test for non-existant object _EJ4.

Test 34 of 191: Test _LCK (Lock).
SKIPPED: Test 34, Skipping test for non-existant object _LCK.

Test 35 of 191: Test _RMV (Remove).
SKIPPED: Test 35, Skipping test for non-existant object _RMV.

Test 36 of 191: Test _STA (Status).
PASSED: Test 36, \_SB_.PWRB._STA correctly returned sane looking value
0x0000000b.
PASSED: Test 36, \_SB_.PCI0._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.SATA.PRID.P_D0._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.SATA.PRID.P_D1._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.SATA.SECD.S_D0._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.SATA.SECD.S_D1._STA correctly returned sane looking
value 0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKA._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKB._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKC._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKD._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKE._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNKF._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNK0._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.LNK1._STA correctly returned sane looking value
0x00000009.
PASSED: Test 36, \_SB_.PCI0.LPC0.HPET._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.FDC0._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.UAR1._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.LPT1._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.ECP1._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \_SB_.PCI0.PS2M._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.PS2K._STA correctly returned sane looking value
0x0000000f.
PASSED: Test 36, \_SB_.PCI0.PSMR._STA correctly returned sane looking value
0x00000000.
PASSED: Test 36, \AWY_._STA correctly returned sane looking value 0x00000000.

Test 37 of 191: Test _DEP (Operational Region Dependencies).
SKIPPED: Test 37, Skipping test for non-existant object _DEP.

Test 38 of 191: Test _BDN (BIOS Dock Name).
SKIPPED: Test 38, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BDN.

Test 39 of 191: Test _BBN (Base Bus Number).
SKIPPED: Test 39, Skipping test for non-existant object _BBN.

Test 40 of 191: Test _DCK (Dock).
SKIPPED: Test 40, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _DCK.

Test 41 of 191: Test _INI (Initialize).
PASSED: Test 41, \_SB_.PCI0._INI returned no values as expected.

Test 42 of 191: Test _GLK (Global Lock).
SKIPPED: Test 42, Skipping test for non-existant object _GLK.

Test 43 of 191: Test _SEG (Segment).
SKIPPED: Test 43, Skipping test for non-existant object _SEG.

Test 44 of 191: Test _OFF (Set resource off).
SKIPPED: Test 44, Skipping test for non-existant object _OFF.

Test 45 of 191: Test _ON (Set resource on).
SKIPPED: Test 45, Skipping test for non-existant object _ON.

Test 46 of 191: Test _DSW (Device Sleep Wake).
SKIPPED: Test 46, Skipping test for non-existant object _DSW.

Test 47 of 191: Test _IRC (In Rush Current).
SKIPPED: Test 47, Skipping test for non-existant object _IRC.

Test 48 of 191: Test _PRE (Power Resources for Enumeration).
SKIPPED: Test 48, Skipping test for non-existant object _PRE.

Test 49 of 191: Test _PR0 (Power Resources for D0).
SKIPPED: Test 49, Skipping test for non-existant object _PR0.

Test 50 of 191: Test _PR1 (Power Resources for D1).
SKIPPED: Test 50, Skipping test for non-existant object _PR1.

Test 51 of 191: Test _PR2 (Power Resources for D2).
SKIPPED: Test 51, Skipping test for non-existant object _PR2.

Test 52 of 191: Test _PR3 (Power Resources for D3).
SKIPPED: Test 52, Skipping test for non-existant object _PR3.

Test 53 of 191: Test _PRW (Power Resources for Wake).
PASSED: Test 53, \_SB_.PCI0.USB0._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB1._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB3._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB4._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB5._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.USB6._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.SBAZ._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.P2P_._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE2._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE3._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE4._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE5._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE6._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE7._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE8._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCE9._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCEA._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCEB._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PCEC._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PS2M._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0.PS2K._PRW correctly returned a sane looking package.
PASSED: Test 53, \_SB_.PCI0._PRW correctly returned a sane looking package.

Test 54 of 191: Test _PS0 (Power State 0).
PASSED: Test 54, \_SB_.PCI0.SATA.PRID._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.SATA.PRID.P_D0._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.SATA.PRID.P_D1._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.SATA.SECD._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.SATA.SECD.S_D0._PS0 returned no values as expected.
PASSED: Test 54, \_SB_.PCI0.SATA.SECD.S_D1._PS0 returned no values as expected.

Test 55 of 191: Test _PS1 (Power State 1).
SKIPPED: Test 55, Skipping test for non-existant object _PS1.

Test 56 of 191: Test _PS2 (Power State 2).
SKIPPED: Test 56, Skipping test for non-existant object _PS2.

Test 57 of 191: Test _PS3 (Power State 3).
PASSED: Test 57, \_SB_.PCI0.SATA.PRID._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.SATA.PRID.P_D0._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.SATA.PRID.P_D1._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.SATA.SECD._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.SATA.SECD.S_D0._PS3 returned no values as expected.
PASSED: Test 57, \_SB_.PCI0.SATA.SECD.S_D1._PS3 returned no values as expected.

Test 58 of 191: Test _PSC (Power State Current).
PASSED: Test 58, \_SB_.PCI0.SATA.PRID._PSC correctly returned an integer.
PASSED: Test 58, \_SB_.PCI0.SATA.PRID.P_D0._PSC correctly returned an integer.
PASSED: Test 58, \_SB_.PCI0.SATA.PRID.P_D1._PSC correctly returned an integer.
PASSED: Test 58, \_SB_.PCI0.SATA.SECD._PSC correctly returned an integer.
PASSED: Test 58, \_SB_.PCI0.SATA.SECD.S_D0._PSC correctly returned an integer.
PASSED: Test 58, \_SB_.PCI0.SATA.SECD.S_D1._PSC correctly returned an integer.

Test 59 of 191: Test _PSE (Power State for Enumeration).
SKIPPED: Test 59, Skipping test for non-existant object _PSE.

Test 60 of 191: Test _PSW (Power State Wake).
SKIPPED: Test 60, Skipping test for non-existant object _PSW.

Test 61 of 191: Test _S1D (S1 Device State).
SKIPPED: Test 61, Skipping test for non-existant object _S1D.

Test 62 of 191: Test _S2D (S2 Device State).
SKIPPED: Test 62, Skipping test for non-existant object _S2D.

Test 63 of 191: Test _S3D (S3 Device State).
SKIPPED: Test 63, Skipping test for non-existant object _S3D.

Test 64 of 191: Test _S4D (S4 Device State).
SKIPPED: Test 64, Skipping test for non-existant object _S4D.

Test 65 of 191: Test _S0W (S0 Device Wake State).
SKIPPED: Test 65, Skipping test for non-existant object _S0W.

Test 66 of 191: Test _S1W (S1 Device Wake State).
SKIPPED: Test 66, Skipping test for non-existant object _S1W.

Test 67 of 191: Test _S2W (S2 Device Wake State).
SKIPPED: Test 67, Skipping test for non-existant object _S2W.

Test 68 of 191: Test _S3W (S3 Device Wake State).
SKIPPED: Test 68, Skipping test for non-existant object _S3W.

Test 69 of 191: Test _S4W (S4 Device Wake State).
SKIPPED: Test 69, Skipping test for non-existant object _S4W.

Test 70 of 191: Test _RST (Device Reset).
SKIPPED: Test 70, Skipping test for non-existant object _RST.

Test 71 of 191: Test _PRR (Power Resource for Reset).
SKIPPED: Test 71, Skipping test for non-existant object _PRR.

Test 72 of 191: Test _S0_ (S0 System State).
\_S0_ PM1a_CNT.SLP_TYP value: 0x00000000
\_S0_ PM1b_CNT.SLP_TYP value: 0x00000000
PASSED: Test 72, \_S0_ correctly returned a sane looking package.

Test 73 of 191: Test _S1_ (S1 System State).
\_S1_ PM1a_CNT.SLP_TYP value: 0x00000001
\_S1_ PM1b_CNT.SLP_TYP value: 0x00000001
PASSED: Test 73, \_S1_ correctly returned a sane looking package.

Test 74 of 191: Test _S2_ (S2 System State).
SKIPPED: Test 74, Skipping test for non-existant object _S2_.

Test 75 of 191: Test _S3_ (S3 System State).
SKIPPED: Test 75, Skipping test for non-existant object _S3_.

Test 76 of 191: Test _S4_ (S4 System State).
\_S4_ PM1a_CNT.SLP_TYP value: 0x00000004
\_S4_ PM1b_CNT.SLP_TYP value: 0x00000004
PASSED: Test 76, \_S4_ correctly returned a sane looking package.

Test 77 of 191: Test _S5_ (S5 System State).
\_S5_ PM1a_CNT.SLP_TYP value: 0x00000005
\_S5_ PM1b_CNT.SLP_TYP value: 0x00000005
PASSED: Test 77, \_S5_ correctly returned a sane looking package.

Test 78 of 191: Test _SWS (System Wake Source).
SKIPPED: Test 78, Skipping test for non-existant object _SWS.

Test 79 of 191: Test _PSS (Performance Supported States).
\_PR_.C000._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3200    28737     4         4
   1      2500    18870     4         4
   2      2100    12807     4         4
   3       800     4800     4         4
PASSED: Test 79, \_PR_.C000._PSS correctly returned a sane looking package.
\_PR_.C001._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3200    28737     4         4
   1      2500    18870     4         4
   2      2100    12807     4         4
   3       800     4800     4         4
PASSED: Test 79, \_PR_.C001._PSS correctly returned a sane looking package.
\_PR_.C002._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3200    28737     4         4
   1      2500    18870     4         4
   2      2100    12807     4         4
   3       800     4800     4         4
PASSED: Test 79, \_PR_.C002._PSS correctly returned a sane looking package.
\_PR_.C003._PSS values:
P-State  Freq     Power  Latency   Bus Master
         (MHz)    (mW)    (us)    Latency (us)
   0      3200    28737     4         4
   1      2500    18870     4         4
   2      2100    12807     4         4
   3       800     4800     4         4
PASSED: Test 79, \_PR_.C003._PSS correctly returned a sane looking package.

Test 80 of 191: Test _CPC (Continuous Performance Control).
SKIPPED: Test 80, Skipping test for non-existant object _CPC.

Test 81 of 191: Test _CSD (C State Dependencies).
SKIPPED: Test 81, Skipping test for non-existant object _CSD.

Test 82 of 191: Test _CST (C States).
SKIPPED: Test 82, Skipping test for non-existant object _CST.

Test 83 of 191: Test _PCT (Performance Control).
PASSED: Test 83, \_PR_.C000._PCT correctly returned a sane looking package.
PASSED: Test 83, \_PR_.C001._PCT correctly returned a sane looking package.
PASSED: Test 83, \_PR_.C002._PCT correctly returned a sane looking package.
PASSED: Test 83, \_PR_.C003._PCT correctly returned a sane looking package.

Test 84 of 191: Test _PDL (P-State Depth Limit).
SKIPPED: Test 84, Skipping test for non-existant object _PDL.

Test 85 of 191: Test _PPC (Performance Present Capabilities).
PASSED: Test 85, \_PR_.C000._PPC correctly returned an integer.
PASSED: Test 85, \_PR_.C001._PPC correctly returned an integer.
PASSED: Test 85, \_PR_.C002._PPC correctly returned an integer.
PASSED: Test 85, \_PR_.C003._PPC correctly returned an integer.

Test 86 of 191: Test _PPE (Polling for Platform Error).
SKIPPED: Test 86, Skipping test for non-existant object _PPE.

Test 87 of 191: Test _PSD (Power State Dependencies).
PASSED: Test 87, \_PR_.C000._PSD correctly returned a sane looking package.
PASSED: Test 87, \_PR_.C001._PSD correctly returned a sane looking package.
PASSED: Test 87, \_PR_.C002._PSD correctly returned a sane looking package.
PASSED: Test 87, \_PR_.C003._PSD correctly returned a sane looking package.

Test 88 of 191: Test _PTC (Processor Throttling Control).
SKIPPED: Test 88, Skipping test for non-existant object _PTC.

Test 89 of 191: Test _TDL (T-State Depth Limit).
SKIPPED: Test 89, Skipping test for non-existant object _TDL.

Test 90 of 191: Test _TPC (Throttling Present Capabilities).
SKIPPED: Test 90, Skipping test for non-existant object _TPC.

Test 91 of 191: Test _TSD (Throttling State Dependencies).
SKIPPED: Test 91, Skipping test for non-existant object _TSD.

Test 92 of 191: Test _TSS (Throttling Supported States).
SKIPPED: Test 92, Skipping test for non-existant object _TSS.

Test 93 of 191: Test _PUR (Processor Utilization Request).
SKIPPED: Test 93, Skipping test for non-existant object _PUR.

Test 94 of 191: Test _MSG (Message).
SKIPPED: Test 94, Skipping test for non-existant object _MSG.

Test 95 of 191: Test _SST (System Status).
SKIPPED: Test 95, Skipping test for non-existant object _SST.

Test 96 of 191: Test _ALC (Ambient Light Colour Chromaticity).
SKIPPED: Test 96, Skipping test for non-existant object _ALC.

Test 97 of 191: Test _ALI (Ambient Light Illuminance).
SKIPPED: Test 97, Skipping test for non-existant object _ALI.

Test 98 of 191: Test _ALT (Ambient Light Temperature).
SKIPPED: Test 98, Skipping test for non-existant object _ALT.

Test 99 of 191: Test _ALP (Ambient Light Polling).
SKIPPED: Test 99, Skipping test for non-existant object _ALP.

Test 100 of 191: Test _ALR (Ambient Light Response).
SKIPPED: Test 100, Skipping test for non-existant object _ALR.

Test 101 of 191: Test _LID (Lid Status).
SKIPPED: Test 101, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _LID.

Test 102 of 191: Test _GTF (Get Task File).
PASSED: Test 102, \_SB_.PCI0.IDE_.PRID.P_D0._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.IDE_.PRID.P_D1._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.IDE_.SECD.S_D0._GTF correctly returned a sane
looking buffer.
PASSED: Test 102, \_SB_.PCI0.IDE_.SECD.S_D1._GTF correctly returned a sane
looking buffer.

Test 103 of 191: Test _GTM (Get Timing Mode).
PASSED: Test 103, \_SB_.PCI0.SATA.PRID._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.SATA.SECD._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.IDE_.PRID._GTM correctly returned a sane looking
buffer.
PASSED: Test 103, \_SB_.PCI0.IDE_.SECD._GTM correctly returned a sane looking
buffer.

Test 104 of 191: Test _MBM (Memory Bandwidth Monitoring Data).
SKIPPED: Test 104, Skipping test for non-existant object _MBM.

Test 105 of 191: Test _UPC (USB Port Capabilities).
SKIPPED: Test 105, Skipping test for non-existant object _UPC.

Test 106 of 191: Test _UPD (User Presence Detect).
SKIPPED: Test 106, Skipping test for non-existant object _UPD.

Test 107 of 191: Test _UPP (User Presence Polling).
SKIPPED: Test 107, Skipping test for non-existant object _UPP.

Test 108 of 191: Test _GCP (Get Capabilities).
SKIPPED: Test 108, Skipping test for non-existant object _GCP.

Test 109 of 191: Test _GRT (Get Real Time).
SKIPPED: Test 109, Skipping test for non-existant object _GRT.

Test 110 of 191: Test _GWS (Get Wake Status).
SKIPPED: Test 110, Skipping test for non-existant object _GWS.

Test 111 of 191: Test _CWS (Clear Wake Status).
SKIPPED: Test 111, Skipping test for non-existant object _CWS.

Test 112 of 191: Test _STP (Set Expired Timer Wake Policy).
SKIPPED: Test 112, Skipping test for non-existant object _STP.

Test 113 of 191: Test _STV (Set Timer Value).
SKIPPED: Test 113, Skipping test for non-existant object _STV.

Test 114 of 191: Test _TIP (Expired Timer Wake Policy).
SKIPPED: Test 114, Skipping test for non-existant object _TIP.

Test 115 of 191: Test _TIV (Timer Values).
SKIPPED: Test 115, Skipping test for non-existant object _TIV.

Test 116 of 191: Test _SBS (Smart Battery Subsystem).
SKIPPED: Test 116, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _SBS.

Test 117 of 191: Test _BCT (Battery Charge Time).
SKIPPED: Test 117, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BCT.

Test 118 of 191: Test _BIF (Battery Information).
SKIPPED: Test 118, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIF.

Test 119 of 191: Test _BIX (Battery Information Extended).
SKIPPED: Test 119, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BIX.

Test 120 of 191: Test _BMA (Battery Measurement Averaging).
SKIPPED: Test 120, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMA.

Test 121 of 191: Test _BMC (Battery Maintenance Control).
SKIPPED: Test 121, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMC.

Test 122 of 191: Test _BMD (Battery Maintenance Data).
SKIPPED: Test 122, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMD.

Test 123 of 191: Test _BMS (Battery Measurement Sampling Time).
SKIPPED: Test 123, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BMS.

Test 124 of 191: Test _BST (Battery Status).
SKIPPED: Test 124, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BST.

Test 125 of 191: Test _BTP (Battery Trip Point).
SKIPPED: Test 125, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTP.

Test 126 of 191: Test _BTH (Battery Throttle Limit).
SKIPPED: Test 126, Skipping test for non-existant object _BTH.

Test 127 of 191: Test _BTM (Battery Time).
SKIPPED: Test 127, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _BTM.

Test 128 of 191: Test _PCL (Power Consumer List).
SKIPPED: Test 128, Machine is not a mobile platform, skipping test for
non-existant mobile platform related object _PCL.

Test 129 of 191: Test _PIF (Power Source Information).
SKIPPED: Test 129, Skipping test for non-existant object _PIF.

Test 130 of 191: Test _PRL (Power Source Redundancy List).
SKIPPED: Test 130, Skipping test for non-existant object _PRL.

Test 131 of 191: Test _PSR (Power Source).
SKIPPED: Test 131, Skipping test for non-existant object _PSR.

Test 132 of 191: Test _GAI (Get Averaging Level).
SKIPPED: Test 132, Skipping test for non-existant object _GAI.

Test 133 of 191: Test _GHL (Get Harware Limit).
SKIPPED: Test 133, Skipping test for non-existant object _GHL.

Test 134 of 191: Test _PMD (Power Meter Devices).
SKIPPED: Test 134, Skipping test for non-existant object _PMD.

Test 135 of 191: Test _PMM (Power Meter Measurement).
SKIPPED: Test 135, Skipping test for non-existant object _PMM.

Test 136 of 191: Test _FIF (Fan Information).
SKIPPED: Test 136, Skipping test for non-existant object _FIF.

Test 137 of 191: Test _FPS (Fan Performance States).
SKIPPED: Test 137, Skipping test for non-existant object _FPS.

Test 138 of 191: Test _FSL (Fan Set Level).
SKIPPED: Test 138, Skipping test for non-existant object _FSL.

Test 139 of 191: Test _FST (Fan Status).
SKIPPED: Test 139, Skipping test for non-existant object _FST.

Test 140 of 191: Test _ACx (Active Cooling).
SKIPPED: Test 140, Skipping test for non-existant object _AC0.

SKIPPED: Test 140, Skipping test for non-existant object _AC1.

SKIPPED: Test 140, Skipping test for non-existant object _AC2.

SKIPPED: Test 140, Skipping test for non-existant object _AC3.

SKIPPED: Test 140, Skipping test for non-existant object _AC4.

SKIPPED: Test 140, Skipping test for non-existant object _AC5.

SKIPPED: Test 140, Skipping test for non-existant object _AC6.

SKIPPED: Test 140, Skipping test for non-existant object _AC7.

SKIPPED: Test 140, Skipping test for non-existant object _AC8.

SKIPPED: Test 140, Skipping test for non-existant object _AC9.


Test 141 of 191: Test _ART (Active Cooling Relationship Table).
SKIPPED: Test 141, Skipping test for non-existant object _ART.

Test 142 of 191: Test _CRT (Critical Trip Point).
SKIPPED: Test 142, Skipping test for non-existant object _CRT.

Test 143 of 191: Test _CR3 (Warm/Standby Temperature).
SKIPPED: Test 143, Skipping test for non-existant object _CR3.

Test 144 of 191: Test _DTI (Device Temperature Indication).
SKIPPED: Test 144, Skipping test for non-existant object _DTI.

Test 145 of 191: Test _HOT (Hot Temperature).
SKIPPED: Test 145, Skipping test for non-existant object _HOT.

Test 146 of 191: Test _MTL (Minimum Throttle Limit).
SKIPPED: Test 146, Skipping test for non-existant object _MTL.

Test 147 of 191: Test _NTT (Notification Temp Threshold).
SKIPPED: Test 147, Skipping test for non-existant object _NTT.

Test 148 of 191: Test _PSL (Passive List).
SKIPPED: Test 148, Skipping test for non-existant object _PSL.

Test 149 of 191: Test _PSV (Passive Temp).
SKIPPED: Test 149, Skipping test for non-existant object _PSV.

Test 150 of 191: Test _RTV (Relative Temp Values).
SKIPPED: Test 150, Skipping test for non-existant object _RTV.

Test 151 of 191: Test _SCP (Set Cooling Policy).
SKIPPED: Test 151, Skipping test for non-existant object _DTI.

Test 152 of 191: Test _TC1 (Thermal Constant 1).
SKIPPED: Test 152, Skipping test for non-existant object _TC1.

Test 153 of 191: Test _TC2 (Thermal Constant 2).
SKIPPED: Test 153, Skipping test for non-existant object _TC2.

Test 154 of 191: Test _TFP (Thermal fast Sampling Period).
SKIPPED: Test 154, Skipping test for non-existant object _TFP.

Test 155 of 191: Test _TMP (Thermal Zone Current Temp).
SKIPPED: Test 155, Skipping test for non-existant object _TMP.

Test 156 of 191: Test _TPT (Trip Point Temperature).
SKIPPED: Test 156, Skipping test for non-existant object _TPT.

Test 157 of 191: Test _TRT (Thermal Relationship Table).
SKIPPED: Test 157, Skipping test for non-existant object _TRT.

Test 158 of 191: Test _TSN (Thermal Sensor Device).
SKIPPED: Test 158, Skipping test for non-existant object _TSN.

Test 159 of 191: Test _TSP (Thermal Sampling Period).
SKIPPED: Test 159, Skipping test for non-existant object _TSP.

Test 160 of 191: Test _TST (Temperature Sensor Threshold).
SKIPPED: Test 160, Skipping test for non-existant object _TST.

Test 161 of 191: Test _TZD (Thermal Zone Devices).
SKIPPED: Test 161, Skipping test for non-existant object _TZD.

Test 162 of 191: Test _TZM (Thermal Zone member).
SKIPPED: Test 162, Skipping test for non-existant object _TZM.

Test 163 of 191: Test _TZP (Thermal Zone Polling).
SKIPPED: Test 163, Skipping test for non-existant object _TZP.

Test 164 of 191: Test _GPE (General Purpose Events).
SKIPPED: Test 164, Skipping test for non-existant object _GPE.

Test 165 of 191: Test _EC (EC Offset Query).
SKIPPED: Test 165, Skipping test for non-existant object _EC.

Test 166 of 191: Test _PTS (Prepare to Sleep).
Test _PTS(1).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(2).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(3).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(4).
PASSED: Test 166, \_PTS returned no values as expected.

Test _PTS(5).
PASSED: Test 166, \_PTS returned no values as expected.


Test 167 of 191: Test _TTS (Transition to State).
SKIPPED: Test 167, Optional control method _TTS does not exist.

Test 168 of 191: Test _S0 (System S0 State).
SKIPPED: Test 168, Skipping test for non-existant object _S0.

Test 169 of 191: Test _S1 (System S1 State).
SKIPPED: Test 169, Skipping test for non-existant object _S1.

Test 170 of 191: Test _S2 (System S2 State).
SKIPPED: Test 170, Skipping test for non-existant object _S2.

Test 171 of 191: Test _S3 (System S3 State).
SKIPPED: Test 171, Skipping test for non-existant object _S3.

Test 172 of 191: Test _S4 (System S4 State).
SKIPPED: Test 172, Skipping test for non-existant object _S4.

Test 173 of 191: Test _S5 (System S5 State).
SKIPPED: Test 173, Skipping test for non-existant object _S5.

Test 174 of 191: Test _WAK (System Wake).
Test _WAK(1) System Wake, State S1.
FAILED [MEDIUM] MethodReturnNullObj: Test 174, \_WAK returned a NULL object, and
did not return ACPI_TYPE_PACKAGE.

Test _WAK(2) System Wake, State S2.
FAILED [MEDIUM] MethodReturnNullObj: Test 174, \_WAK returned a NULL object, and
did not return ACPI_TYPE_PACKAGE.

Test _WAK(3) System Wake, State S3.
FAILED [MEDIUM] MethodReturnNullObj: Test 174, \_WAK returned a NULL object, and
did not return ACPI_TYPE_PACKAGE.

Test _WAK(4) System Wake, State S4.
FAILED [MEDIUM] MethodReturnNullObj: Test 174, \_WAK returned a NULL object, and
did not return ACPI_TYPE_PACKAGE.

Test _WAK(5) System Wake, State S5.
FAILED [MEDIUM] MethodReturnNullObj: Test 174, \_WAK returned a NULL object, and
did not return ACPI_TYPE_PACKAGE.


Test 175 of 191: Test _ADR (Return Unique ID for Device).
PASSED: Test 175, \_SB_.PCI0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SMB0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB5._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.USB6._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SBAZ._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.PRID._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.PRID.P_D0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.PRID.P_D1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.SECD._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.SECD.S_D0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.SATA.SECD.S_D1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.LPC0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.P2P_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.PRID._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.PRID.P_D0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.PRID.P_D1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.SECD._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.SECD.S_D0._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.IDE_.SECD.S_D1._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE2._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE3._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE4._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE5._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE6._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE7._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE8._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCE9._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCEA._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCEB._ADR correctly returned an integer.
PASSED: Test 175, \_SB_.PCI0.PCEC._ADR correctly returned an integer.

Test 176 of 191: Test _BCL (Query List of Brightness Control Levels Supported).
SKIPPED: Test 176, Skipping test for non-existant object _BCL.

Test 177 of 191: Test _BCM (Set Brightness Level).
SKIPPED: Test 177, Skipping test for non-existant object _BCM.

Test 178 of 191: Test _BQC (Brightness Query Current Level).
SKIPPED: Test 178, Skipping test for non-existant object _BQC.

Test 179 of 191: Test _DCS (Return the Status of Output Device).
SKIPPED: Test 179, Skipping test for non-existant object _DCS.

Test 180 of 191: Test _DDC (Return the EDID for this Device).
SKIPPED: Test 180, Skipping test for non-existant object _DDC.

Test 181 of 191: Test _DSS (Device Set State).
SKIPPED: Test 181, Skipping test for non-existant object _DSS.

Test 182 of 191: Test _DGS (Query Graphics State).
SKIPPED: Test 182, Skipping test for non-existant object _DGS.

Test 183 of 191: Test _DOD (Enumerate All Devices Attached to Display Adapter).
SKIPPED: Test 183, Skipping test for non-existant object _DOD.

Test 184 of 191: Test _DOS (Enable/Disable Output Switching).
SKIPPED: Test 184, Skipping test for non-existant object _DOS.

Test 185 of 191: Test _GPD (Get POST Device).
SKIPPED: Test 185, Skipping test for non-existant object _GPD.

Test 186 of 191: Test _ROM (Get ROM Data).
SKIPPED: Test 186, Skipping test for non-existant object _ROM.

Test 187 of 191: Test _SPD (Set POST Device).
SKIPPED: Test 187, Skipping test for non-existant object _SPD.

Test 188 of 191: Test _VPO (Video POST Options).
SKIPPED: Test 188, Skipping test for non-existant object _VPO.

Test 189 of 191: Test _CBA (Configuration Base Address).
SKIPPED: Test 189, Skipping test for non-existant object _CBA.

Test 190 of 191: Test _IFT (IPMI Interface Type).
SKIPPED: Test 190, Skipping test for non-existant object _IFT.

Test 191 of 191: Test _SRV (IPMI Interface Revision).
SKIPPED: Test 191, Skipping test for non-existant object _SRV.

================================================================================
234 passed, 5 failed, 0 warning, 0 aborted, 174 skipped, 0 info only.
================================================================================

msdm: MSDM Microsoft Data Management Table test.
--------------------------------------------------------------------------------
ACPI MSDM table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mchi: MCHI Management Controller Host Interface Table test.
--------------------------------------------------------------------------------
ACPI MCHI table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

mcfg: MCFG PCI Express* memory mapped config space test.
--------------------------------------------------------------------------------
Test 1 of 2: Validate MCFG table.
This test tries to validate the MCFG table by comparing the first 16 bytes in
the MMIO mapped config space with the 'traditional' config space of the first
PCI device (root bridge). The MCFG data is only trusted if it is marked reserved
in the Int 15 AX=E820 BIOS memory map

Memory Map Layout
-----------------
0x0000000000000000 - 0x000000000009f7ff (System RAM)
0x000000000009f800 - 0x000000000009ffff (reserved)
0x00000000000f0000 - 0x00000000000fffff (reserved)
0x0000000000100000 - 0x00000000cfdeffff (System RAM)
0x00000000cfdf0000 - 0x00000000cfdf2fff (ACPI Non-volatile Storage)
0x00000000cfdf3000 - 0x00000000cfdfffff (ACPI Non-volatile Storage)
0x00000000cfe00000 - 0x00000000cfefffff (reserved)
0x00000000e0000000 - 0x00000000efffffff (reserved)
0x00000000fec00000 - 0x00000000ffffffff (reserved)
0x0000000100000000 - 0x000000022fffffff (System RAM)

MCFG table found, size is 16 bytes (excluding header) (1 entries).
Configuration Entry #0:
  Base Address  : 0xe0000000
  Segment       : 0
  Start bus     : 0
  End bus       : 255
PASSED: Test 1, MCFG MMIO config space is reserved in memory map table.

Test 2 of 2: Validate MCFG PCI config space.
PASSED: Test 2, PCI config space verified.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

madt: MADT Multiple APIC Description Table test.
--------------------------------------------------------------------------------
Test 1 of 1: MADT Multiple APIC Description Table test.
PASSED: Test 1, No issues found in MADT table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

lpit: LPIT Low Power Idle Table test.
--------------------------------------------------------------------------------
ACPI LPIT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

iort: IORT IO Remapping Table test.
--------------------------------------------------------------------------------
ACPI IORT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

hpet: HPET IA-PC High Precision Event Timer Table tests.
--------------------------------------------------------------------------------
Test 1 of 4: Test HPET base in kernel log.
This test checks the HPET PCI BAR for each timer block in the timer. The base
address is passed by the firmware via an ACPI table. IRQ routing and
initialization is also verified by the test.
PASSED: Test 1, Found HPET base 0xfed00000 in kernel log.

Test 2 of 4: Test HPET base in HPET table.
Hardware ID of Event Block:
  PCI Vendor ID              : 0x10b9
  Legacy IRQ Routing Capable : 1
  COUNT_SIZE_CAP counter size: 1
  Number of comparitors      : 2
  Hardwre Revision ID        : 0x1
Lower 32 bit base Address    : 0xfed00000
  Address Space ID           : 0x0
  Register Bit Width         : 0x0
  Register Bit Offset        : 0x0
  Address Width              : 0x0
HPET sequence number         : 0x0
Minimum clock tick           : 0x10
Page Protection              : 0x0 (No guaranteed protection)
OEM attributes               : 0x0
PASSED: Test 2, HPET looks sane.

Test 3 of 4: Test HPET base in DSDT and/or SSDT.
PASSED: Test 3, HPET base matches that between DSDT and the kernel (0xfed00000).

Test 4 of 4: Test HPET configuration.
PASSED: Test 4, Vendor ID looks sane: 0x4353.
PASSED: Test 4, Valid clock period 69841278.

================================================================================
5 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

hest: HEST Hardware Error Source Table test.
--------------------------------------------------------------------------------
ACPI HEST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

gtdt: GTDT Generic Timer Description Table test.
--------------------------------------------------------------------------------
ACPI GTDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fpdt: FPDT Firmware Performance Data Table test.
--------------------------------------------------------------------------------
ACPI FPDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

fan: Simple fan tests.
--------------------------------------------------------------------------------
Test 1 of 2: Test fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
PASSED: Test 1, Fan cooling_device0 of type Processor has max cooling state 3
and current cooling state 0.
PASSED: Test 1, Fan cooling_device1 of type Processor has max cooling state 3
and current cooling state 0.
PASSED: Test 1, Fan cooling_device2 of type Processor has max cooling state 3
and current cooling state 0.
PASSED: Test 1, Fan cooling_device3 of type Processor has max cooling state 3
and current cooling state 0.

Test 2 of 2: Load system, check CPU fan status.
Test how many fans there are in the system. Check for the current status of the
fan(s).
Loading CPUs for 20 seconds to try and get fan speeds to change.
Fan cooling_device0 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device1 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device2 current state did not change from value 0 while CPUs were
busy.
Fan cooling_device3 current state did not change from value 0 while CPUs were
busy.

ADVICE: Did not detect any change in the CPU related thermal cooling device
states. It could be that the devices are returning static information back to
the driver and/or the fan speed is automatically being controlled by firmware
using System Management Mode in which case the kernel interfaces being examined
may not work anyway.


================================================================================
4 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

fadt: FADT Fixed ACPI Description Table tests.
--------------------------------------------------------------------------------
Test 1 of 3: Test FADT ACPI Description Table tests.
PASSED: Test 1, No issues found in FADT table.

Test 2 of 3: Test FADT SCI_EN bit is enabled.
FADT Preferred PM Profile: 1 (Desktop) 
PASSED: Test 2, SCI_EN bit in PM1a Control Register Block is enabled.

Test 3 of 3: Test FADT reset register.
SKIPPED: Test 3, Header size indicates an ACPI 1.0 FADT, skipping test.

================================================================================
2 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

facs: FACS Firmware ACPI Control Structure test.
--------------------------------------------------------------------------------
Test 1 of 1: FACS Firmware ACPI Control Structure test.
FACS Firmware ACPI Control Structure:
  Signature:                'FACS'
  Length:                   0x00000040
  Hardware Signature:       0x00000000
  Firmware Waking Vector:   0x00000000
  Global Lock:              0x00000000
  Flags:                    0x00000001
  X-Firmware Waking Vector: 0x0000000000000000
  Version:                  0x00
  Reserved:                 0x00 0x00 0x00
  OSPM Flags:               0x00000000
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
  Reserved:                 0x00 0x00 0x00 0x00
PASSED: Test 1, No issues found in FACS table.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

erst: ERST Error Record Serialization Table test.
--------------------------------------------------------------------------------
ACPI ERST table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

ecdt: ECDT Embedded Controller Boot Resources Table test.
--------------------------------------------------------------------------------
ACPI ECDT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dmar: DMA Remapping (VT-d) test.
--------------------------------------------------------------------------------
Test 1 of 1: DMA Remapping test.
SKIPPED: Test 1, No DMAR table. This is not necessarily a failure as most
systems do not have this table.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbg2: DBG2 (Debug Port Table 2) test.
--------------------------------------------------------------------------------
ACPI DBG2 table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

dbgp: DBGP (Debug Port) Table test.
--------------------------------------------------------------------------------
ACPI DBGP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cstates: Processor C state support test.
--------------------------------------------------------------------------------
Test 1 of 1: Test all CPUs C-states.
This test checks if all processors have the same number of C-states, if the
C-state counter works and if C-state transitions happen.
PASSED: Test 1, Processor 0 has reached all C-states: 
PASSED: Test 1, Processor 1 has reached all C-states: 
PASSED: Test 1, Processor 1 has the same number of C-states as processor 0
PASSED: Test 1, Processor 2 has reached all C-states: 
PASSED: Test 1, Processor 2 has the same number of C-states as processor 0
PASSED: Test 1, Processor 3 has reached all C-states: 
PASSED: Test 1, Processor 3 has the same number of C-states as processor 0

================================================================================
7 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

csrt: CSRT Core System Resource Table test.
--------------------------------------------------------------------------------
ACPI CSRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

cpep: CPEP Corrected Platform Error Polling Table test.
--------------------------------------------------------------------------------
ACPI CPEP table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

checksum: ACPI table checksum test.
--------------------------------------------------------------------------------
Test 1 of 1: ACPI table checksum test.
PASSED: Test 1, Table RSDP has correct checksum 0xc6.
PASSED: Test 1, Table RSDT has correct checksum 0x42
PASSED: Test 1, Table DSDT has correct checksum 0xd8
PASSED: Test 1, Table FACP has correct checksum 0xbb
PASSED: Test 1, Table SSDT has correct checksum 0x88
PASSED: Test 1, Table HPET has correct checksum 0x25
PASSED: Test 1, Table MCFG has correct checksum 0x34
FAILED [MEDIUM] ACPITableChecksum: Test 1, Table TAMG has incorrect checksum,
expected 0x04, got 0x05.

ADVICE: The kernel will warn that this table has an invalid checksum but will
ignore the error and still load it. This is not a critical issue, but should be
fixed if possible to avoid the warning messages.

PASSED: Test 1, Table APIC has correct checksum 0xbc

================================================================================
8 passed, 1 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

autobrightness: Automated LCD brightness test.
--------------------------------------------------------------------------------
Test 1 of 2: Test for maximum and actual brightness.

Test 2 of 2: Change actual brightness.

================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

boot: BOOT Table test.
--------------------------------------------------------------------------------
ACPI BOOT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bgrt: BGRT Boot Graphics Resource Table test.
--------------------------------------------------------------------------------
ACPI BGRT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

bert: BERT Boot Error Record Table test.
--------------------------------------------------------------------------------
ACPI BERT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

aspt: ASPT Table test.
--------------------------------------------------------------------------------
ACPI ASPT table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

asf: ASF! Alert Standard Format Table test.
--------------------------------------------------------------------------------
ACPI ASF! table does not exist, skipping test
================================================================================
0 passed, 0 failed, 0 warning, 0 aborted, 1 skipped, 0 info only.
================================================================================

apicinstance: Test for single instance of APIC/MADT table.
--------------------------------------------------------------------------------
Test 1 of 1: Test for single instance of APIC/MADT table.
Found APIC/MADT table APIC @ cfdf9d00, length 0x188 
PASSED: Test 1, Found 1 APIC/MADT table(s), as expected.

================================================================================
1 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================

acpitables: ACPI table headers sanity tests.
--------------------------------------------------------------------------------
Test 1 of 1: Test ACPI headers.
PASSED: Test 1, Table RSDT has valid signature and ID strings.
PASSED: Test 1, Table DSDT has valid signature and ID strings.
PASSED: Test 1, Table FACP has valid signature and ID strings.
PASSED: Test 1, Table SSDT has valid signature and ID strings.
PASSED: Test 1, Table HPET has valid signature and ID strings.
PASSED: Test 1, Table MCFG has valid signature and ID strings.
PASSED: Test 1, Table TAMG has valid signature and ID strings.
PASSED: Test 1, Table APIC has valid signature and ID strings.

================================================================================
8 passed, 0 failed, 0 warning, 0 aborted, 0 skipped, 0 info only.
================================================================================


439 passed, 146 failed, 9 warnings, 62 aborted, 213 skipped, 10 info only.

Test Failure Summary
================================================================================

Critical failures: NONE

High failures: 6
 klog: HIGH Kernel message: [    0.637511] ACPI Exception: AE_NOT_FOUND, While evaluating Sleep State [\_S3_] (20150619/hwxface-580)
 klog: HIGH Kernel message: [    0.641048] pci 0000:00:00.0: [Firmware Bug]: reg 0x1c: invalid BAR (can't size)
 klog: HIGH Kernel message: [   26.429974] ACPI Warning: SystemIO range 0x0000000000000B00-0x0000000000000B07 conflicts with OpRegion 0x0000000000000B00-0x0000000000000B0F (\SOR1) (20150619/utaddress-254)
 syntaxcheck: Assembler error in line 2727
 syntaxcheck: Assembler error in line 4359
 syntaxcheck: Assembler error in line 4366

Medium failures: 22
 mtrr: Memory range 0x100000000 to 0x22fffffff (System RAM) has incorrect attribute Default (Most probably Uncached).
 mtrr: Memory range 0x100000000 to 0x22fffffff (System RAM) is lacking attribute Write-Back.
 apicedge: Non-Legacy interrupt 0 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 1 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 8 is incorrectly level triggered.
 apicedge: Non-Legacy interrupt 14 is incorrectly level triggered.
 syntaxcheck: Assembler warning in line 314
 syntaxcheck: Assembler warning in line 2182
 syntaxcheck: Assembler warning in line 2331
 syntaxcheck: Assembler warning in line 2516
 syntaxcheck: Assembler warning in line 6771
 syntaxcheck: Assembler warning in line 6773
 syntaxcheck: Assembler warning in line 6868
 syntaxcheck: Assembler warning in line 6870
 syntaxcheck: Assembler warning in line 7006
 syntaxcheck: Assembler warning in line 7008
 syntaxcheck: Assembler warning in line 7156
 syntaxcheck: Assembler warning in line 7158
 syntaxcheck: Assembler warning in line 7161
 syntaxcheck: Assembler warning in line 7163
 method: \_WAK returned a NULL object, and did not return ACPI_TYPE_PACKAGE.
 checksum: Table TAMG has incorrect checksum, expected 0x04, got 0x05.

Low failures: 97
 syntaxcheck: Assembler remark in line 773
 syntaxcheck: Assembler remark in line 777
 syntaxcheck: Assembler remark in line 785
 syntaxcheck: Assembler remark in line 798
 syntaxcheck: Assembler remark in line 832
 syntaxcheck: Assembler remark in line 867
 syntaxcheck: Assembler remark in line 901
 syntaxcheck: Assembler remark in line 957
 syntaxcheck: Assembler remark in line 976
 syntaxcheck: Assembler remark in line 994
 syntaxcheck: Assembler remark in line 1193
 syntaxcheck: Assembler remark in line 1286
 syntaxcheck: Assembler remark in line 1570
 syntaxcheck: Assembler remark in line 1578
 syntaxcheck: Assembler remark in line 1579
 syntaxcheck: Assembler remark in line 1580
 syntaxcheck: Assembler remark in line 1581
 syntaxcheck: Assembler remark in line 1582
 syntaxcheck: Assembler remark in line 1627
 syntaxcheck: Assembler remark in line 2272
 syntaxcheck: Assembler remark in line 2458
 syntaxcheck: Assembler remark in line 2677
 syntaxcheck: Assembler remark in line 2722
 syntaxcheck: Assembler remark in line 2723
 syntaxcheck: Assembler remark in line 2725
 syntaxcheck: Assembler remark in line 2726
 syntaxcheck: Assembler remark in line 2728
 syntaxcheck: Assembler remark in line 3838
 syntaxcheck: Assembler remark in line 3903
 syntaxcheck: Assembler remark in line 3932
 syntaxcheck: Assembler remark in line 3969
 syntaxcheck: Assembler remark in line 3998
 syntaxcheck: Assembler remark in line 4046
 syntaxcheck: Assembler remark in line 4110
 syntaxcheck: Assembler remark in line 4139
 syntaxcheck: Assembler remark in line 4176
 syntaxcheck: Assembler remark in line 4205
 syntaxcheck: Assembler remark in line 4248
 syntaxcheck: Assembler remark in line 4354
 syntaxcheck: Assembler remark in line 4355
 syntaxcheck: Assembler remark in line 4358
 syntaxcheck: Assembler remark in line 4360
 syntaxcheck: Assembler remark in line 5277
 syntaxcheck: Assembler remark in line 5328
 syntaxcheck: Assembler remark in line 5382
 syntaxcheck: Assembler remark in line 5435
 syntaxcheck: Assembler remark in line 5454
 syntaxcheck: Assembler remark in line 5476
 syntaxcheck: Assembler remark in line 5497
 syntaxcheck: Assembler remark in line 5519
 syntaxcheck: Assembler remark in line 5538
 syntaxcheck: Assembler remark in line 5560
 syntaxcheck: Assembler remark in line 5581
 syntaxcheck: Assembler remark in line 6626
 syntaxcheck: Assembler remark in line 6630
 syntaxcheck: Assembler remark in line 6634
 syntaxcheck: Assembler remark in line 6750
 syntaxcheck: Assembler remark in line 6754
 syntaxcheck: Assembler remark in line 6757
 syntaxcheck: Assembler remark in line 6758
 syntaxcheck: Assembler remark in line 6771
 syntaxcheck: Assembler remark in line 6772
 syntaxcheck: Assembler remark in line 6773
 syntaxcheck: Assembler remark in line 6774
 syntaxcheck: Assembler remark in line 6805
 syntaxcheck: Assembler remark in line 6806
 syntaxcheck: Assembler remark in line 6808
 syntaxcheck: Assembler remark in line 6809
 syntaxcheck: Assembler remark in line 6855
 syntaxcheck: Assembler remark in line 6859
 syntaxcheck: Assembler remark in line 6862
 syntaxcheck: Assembler remark in line 6863
 syntaxcheck: Assembler remark in line 6993
 syntaxcheck: Assembler remark in line 6997
 syntaxcheck: Assembler remark in line 7000
 syntaxcheck: Assembler remark in line 7076
 syntaxcheck: Assembler remark in line 7077
 syntaxcheck: Assembler remark in line 7135
 syntaxcheck: Assembler remark in line 7139
 syntaxcheck: Assembler remark in line 7142
 syntaxcheck: Assembler remark in line 7145
 syntaxcheck: Assembler remark in line 7148
 syntaxcheck: Assembler remark in line 7149
 syntaxcheck: Assembler remark in line 7153
 syntaxcheck: Assembler remark in line 7307
 syntaxcheck: Assembler remark in line 7465
 syntaxcheck: Assembler remark in line 7469
 syntaxcheck: Assembler remark in line 7473
 syntaxcheck: Assembler remark in line 7477
 syntaxcheck: Assembler remark in line 7481
 syntaxcheck: Assembler remark in line 7485
 syntaxcheck: Assembler remark in line 7487
 syntaxcheck: Assembler remark in line 7497
 syntaxcheck: Assembler remark in line 7498
 syntaxcheck: Assembler remark in line 7501
 syntaxcheck: Assembler remark in line 7505
 syntaxcheck: Assembler remark in line 7581

Other failures: NONE

Test           |Pass |Fail |Abort|Warn |Skip |Info |
---------------+-----+-----+-----+-----+-----+-----+
acpiinfo       |     |     |     |     |     |    3|
acpitables     |    8|     |     |     |     |     |
apicedge       |     |    4|     |     |     |     |
apicinstance   |    1|     |     |     |     |     |
asf            |     |     |     |     |    1|     |
aspm           |    3|     |     |    8|     |     |
aspt           |     |     |     |     |    1|     |
autobrightness |     |     |     |     |     |     |
bert           |     |     |     |     |    1|     |
bgrt           |     |     |     |     |    1|     |
bios32         |    4|     |     |     |     |     |
bios_info      |     |     |     |     |     |    1|
boot           |     |     |     |     |    1|     |
checksum       |    8|    1|     |     |     |     |
cpep           |     |     |     |     |    1|     |
cpufreq        |    7|     |     |     |     |     |
crs            |    1|     |     |     |     |     |
csm            |     |     |     |     |     |    1|
csrt           |     |     |     |     |    1|     |
cstates        |    7|     |     |     |     |     |
dbg2           |     |     |     |     |    1|     |
dbgp           |     |     |     |     |    1|     |
dmar           |     |     |     |     |    1|     |
dmicheck       |   61|     |     |     |    1|     |
ebda           |    1|     |     |     |     |     |
ecdt           |     |     |     |     |    1|     |
erst           |     |     |     |     |    1|     |
facs           |    1|     |     |     |     |     |
fadt           |    2|     |     |     |    1|     |
fan            |    4|     |     |     |     |     |
fpdt           |     |     |     |     |    1|     |
gtdt           |     |     |     |     |    1|     |
hda_audio      |    1|     |     |     |     |     |
hest           |     |     |     |     |    1|     |
hpet           |    5|     |     |     |     |     |
iort           |     |     |     |     |    1|     |
klog           |     |    3|     |     |     |     |
lpit           |     |     |     |     |    1|     |
madt           |    1|     |     |     |     |     |
maxfreq        |     |     |     |     |    1|     |
maxreadreq     |    1|     |     |     |     |     |
mcfg           |    2|     |     |     |     |     |
mchi           |     |     |     |     |    1|     |
method         |  234|    5|     |     |  174|     |
microcode      |     |     |     |     |    1|     |
mpcheck        |    9|     |     |     |     |     |
msdm           |     |     |     |     |    1|     |
msr            |   61|     |     |     |    4|     |
mtrr           |    2|    2|     |     |     |     |
nx             |    2|     |     |     |     |     |
oops           |    2|     |     |     |     |     |
osilinux       |     |     |     |    1|     |     |
pcc            |     |     |     |     |     |    1|
pciirq         |     |     |     |     |     |     |
pnp            |    2|     |     |     |     |     |
rsdp           |    1|     |     |     |     |     |
rsdt           |    1|     |     |     |     |     |
sbst           |     |     |     |     |    1|     |
securebootcert |     |     |     |     |    1|     |
slic           |     |     |     |     |    1|     |
slit           |     |     |     |     |    1|     |
spcr           |     |     |     |     |    1|     |
spmi           |     |     |     |     |    1|     |
srat           |     |     |     |     |    1|     |
stao           |     |     |     |     |    1|     |
syntaxcheck    |    1|  131|     |     |     |     |
tcpa           |     |     |    1|     |     |     |
tpm2           |     |     |    1|     |     |     |
uefi           |     |     |     |     |    1|     |
uefibootpath   |     |     |    1|     |     |     |
uefirtauthvar  |     |     |   12|     |     |     |
uefirtmisc     |     |     |    3|     |     |     |
uefirttime     |     |     |   35|     |     |     |
uefirtvariable |     |     |    8|     |     |     |
version        |     |     |     |     |     |    4|
virt           |    1|     |     |     |     |     |
waet           |     |     |     |     |    1|     |
wakealarm      |    4|     |     |     |     |     |
wdat           |     |     |     |     |    1|     |
wmi            |    1|     |     |     |     |     |
xenv           |     |     |    1|     |     |     |
xsdt           |     |     |     |     |    1|     |
---------------+-----+-----+-----+-----+-----+-----+
Total:         |  439|  146|   62|    9|  213|   10|
---------------+-----+-----+-----+-----+-----+-----+
